2016-04-19 14:40:00,380 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-19 14:40:00,777 INFO [org.geoserver] - Loaded style 'burg'
2016-04-19 14:40:00,778 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-19 14:40:00,779 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-19 14:40:00,780 INFO [org.geoserver] - Loaded style 'dem'
2016-04-19 14:40:00,781 INFO [org.geoserver] - Loaded style 'generic'
2016-04-19 14:40:00,782 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-19 14:40:00,787 INFO [org.geoserver] - Loaded style 'grass'
2016-04-19 14:40:00,788 INFO [org.geoserver] - Loaded style 'green'
2016-04-19 14:40:00,789 INFO [org.geoserver] - Loaded style 'line'
2016-04-19 14:40:00,790 INFO [org.geoserver] - Loaded style 'poi'
2016-04-19 14:40:00,791 INFO [org.geoserver] - Loaded style 'point'
2016-04-19 14:40:00,792 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-19 14:40:00,793 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-19 14:40:00,794 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-19 14:40:00,795 INFO [org.geoserver] - Loaded style 'population'
2016-04-19 14:40:00,796 INFO [org.geoserver] - Loaded style 'rain'
2016-04-19 14:40:00,797 INFO [org.geoserver] - Loaded style 'raster'
2016-04-19 14:40:00,798 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-19 14:40:00,799 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-19 14:40:00,800 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-19 14:40:00,801 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-19 14:40:00,801 WARN [org.geoserver] - No default workspace was found.
2016-04-19 14:40:00,807 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-19 14:40:00,847 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-19 14:40:00,849 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-19 14:40:00,850 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-19 14:40:00,852 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-19 14:40:00,853 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-19 14:40:00,854 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-19 14:40:00,963 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-19 14:40:00,967 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-19 14:40:02,028 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-19 14:40:02,038 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-19 14:40:02,158 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-19 14:40:02,164 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-19 14:40:02,164 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-19 14:40:02,341 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-19 14:40:02,342 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-19 14:40:02,344 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-19 14:40:02,348 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-19 14:40:02,349 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-19 14:40:02,353 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-19 14:40:02,353 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-19 14:40:03,108 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-19 14:40:03,109 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-19 14:40:03,149 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-19 14:40:03,154 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-19 14:40:03,155 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-19 14:40:03,158 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-19 14:40:03,159 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-19 14:40:03,174 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-19 14:40:03,256 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-19 14:40:03,259 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-19 14:40:03,288 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-19 14:40:03,293 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 14:40:03,303 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-19 14:40:03,306 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-19 14:40:03,307 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 14:40:03,309 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-19 14:40:03,311 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-19 14:40:03,313 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 14:40:03,317 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-19 14:40:03,319 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-19 14:40:03,320 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 14:40:03,322 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-19 14:40:03,331 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-19 14:40:03,331 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 14:40:03,333 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-19 14:40:03,337 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-19 14:40:03,338 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-19 14:40:03,341 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-19 14:40:03,342 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-19 14:40:03,553 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-19 14:40:03,559 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-19 14:40:03,559 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-19 14:40:03,569 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-19 14:40:03,570 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 14:40:03,571 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-19 14:40:03,573 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-19 14:40:03,574 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 14:40:03,575 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-19 14:40:03,577 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-19 14:40:03,578 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 14:40:03,580 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-19 14:40:03,581 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-19 14:40:03,582 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 14:40:03,587 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-19 14:40:03,594 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-19 14:40:03,595 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-19 14:40:03,600 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-19 14:40:03,601 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-19 14:40:03,605 INFO [org.geoserver] - Loaded layer 'states'
2016-04-19 14:40:03,609 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-19 14:40:03,610 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-19 14:40:03,621 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-19 14:40:03,623 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 14:40:03,626 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-19 14:40:03,628 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-19 14:40:03,629 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 14:40:03,630 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-19 14:40:03,632 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-19 14:40:03,632 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 14:40:03,634 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-19 14:40:03,636 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-19 14:40:03,636 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 14:40:03,638 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-19 14:40:03,647 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-19 14:40:03,649 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-19 14:40:03,651 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-19 14:40:03,719 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-19 14:40:03,719 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-19 14:40:03,720 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-19 14:40:03,721 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-19 14:40:03,729 WARN [config.XMLConfiguration] - Found no configuration file in config directory, will create one at 'C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache.xml' from template jar:file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/WEB-INF/lib/gwc-core-1.8.2.jar!/geowebcache_empty.xml
2016-04-19 14:40:03,764 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-19 14:40:03,929 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-19 14:40:03,930 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-19 14:40:03,932 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-19 14:40:03,954 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-19 14:40:03,955 INFO [layer.TileLayerDispatcher] - Configuration GeoServer Catalog Configuration contained no layers.
2016-04-19 14:40:03,956 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-19 14:40:03,957 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-19 14:40:03,958 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-19 14:40:04,043 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-19 14:40:04,051 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-19 14:40:04,054 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-19 14:40:04,054 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-19 14:40:04,055 INFO [diskquota.DiskQuotaMonitor] - 0 layers attached to global quota 500,0 MB
2016-04-19 14:40:04,070 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-19 14:40:04,136 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-19 14:40:04,147 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-19 14:40:04,161 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-19 14:40:04,182 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-19 14:40:04,456 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-19 14:40:04,493 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-19 14:40:04,505 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-19 14:40:04,547 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-19 14:40:04,645 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-19 14:40:04,684 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-19 14:40:04,684 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-19 14:40:05,567 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-19 14:40:05,568 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-19 14:40:05,569 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-19 14:40:05,669 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-19 14:40:05,680 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-19 14:40:05,680 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-19 14:40:05,687 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-19 14:40:05,760 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-19 14:40:05,761 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-19 14:40:06,973 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-19 14:40:06,974 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-19 14:40:06,975 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-19 14:40:09,341 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-19 14:40:09,341 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-19 14:40:09,399 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-19 14:40:09,399 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-19 14:40:09,488 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-19 14:40:09,489 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-19 14:40:09,766 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-19 14:40:09,768 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-19 14:40:30,205 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-04-19 15:02:30,367 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-19 15:02:30,781 INFO [org.geoserver] - Loaded style 'burg'
2016-04-19 15:02:30,781 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-19 15:02:30,783 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-19 15:02:30,783 INFO [org.geoserver] - Loaded style 'dem'
2016-04-19 15:02:30,785 INFO [org.geoserver] - Loaded style 'generic'
2016-04-19 15:02:30,785 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-19 15:02:30,786 INFO [org.geoserver] - Loaded style 'grass'
2016-04-19 15:02:30,787 INFO [org.geoserver] - Loaded style 'green'
2016-04-19 15:02:30,788 INFO [org.geoserver] - Loaded style 'line'
2016-04-19 15:02:30,789 INFO [org.geoserver] - Loaded style 'poi'
2016-04-19 15:02:30,789 INFO [org.geoserver] - Loaded style 'point'
2016-04-19 15:02:30,790 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-19 15:02:30,791 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-19 15:02:30,792 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-19 15:02:30,793 INFO [org.geoserver] - Loaded style 'population'
2016-04-19 15:02:30,794 INFO [org.geoserver] - Loaded style 'rain'
2016-04-19 15:02:30,795 INFO [org.geoserver] - Loaded style 'raster'
2016-04-19 15:02:30,796 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-19 15:02:30,797 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-19 15:02:30,798 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-19 15:02:30,798 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-19 15:02:30,800 INFO [org.geoserver] - Loaded default workspace cite
2016-04-19 15:02:30,811 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-19 15:02:30,814 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-19 15:02:30,815 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-19 15:02:30,817 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-19 15:02:30,819 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-19 15:02:30,821 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-19 15:02:30,822 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-19 15:02:30,943 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-19 15:02:30,947 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-19 15:02:31,758 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-19 15:02:31,767 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-19 15:02:31,893 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-19 15:02:31,898 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-19 15:02:31,899 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-19 15:02:32,083 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-19 15:02:32,084 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-19 15:02:32,091 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-19 15:02:32,096 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-19 15:02:32,097 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-19 15:02:32,101 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-19 15:02:32,102 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-19 15:02:32,878 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-19 15:02:32,879 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-19 15:02:32,921 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-19 15:02:32,926 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-19 15:02:32,926 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-19 15:02:32,930 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-19 15:02:32,931 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-19 15:02:32,944 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-19 15:02:33,027 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-19 15:02:33,030 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-19 15:02:33,058 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-19 15:02:33,064 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 15:02:33,075 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-19 15:02:33,078 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-19 15:02:33,079 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 15:02:33,081 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-19 15:02:33,084 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-19 15:02:33,084 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 15:02:33,086 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-19 15:02:33,089 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-19 15:02:33,089 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 15:02:33,092 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-19 15:02:33,094 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-19 15:02:33,095 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-19 15:02:33,097 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-19 15:02:33,104 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-19 15:02:33,105 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-19 15:02:33,114 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-19 15:02:33,115 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-19 15:02:33,329 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-19 15:02:33,337 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-19 15:02:33,338 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-19 15:02:33,349 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-19 15:02:33,351 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 15:02:33,353 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-19 15:02:33,355 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-19 15:02:33,355 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 15:02:33,358 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-19 15:02:33,359 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-19 15:02:33,360 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 15:02:33,362 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-19 15:02:33,364 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-19 15:02:33,364 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-19 15:02:33,366 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-19 15:02:33,371 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-19 15:02:33,373 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-19 15:02:33,378 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-19 15:02:33,380 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-19 15:02:33,387 INFO [org.geoserver] - Loaded layer 'states'
2016-04-19 15:02:33,391 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-19 15:02:33,392 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-19 15:02:33,403 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-19 15:02:33,405 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 15:02:33,411 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-19 15:02:33,413 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-19 15:02:33,414 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 15:02:33,418 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-19 15:02:33,421 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-19 15:02:33,421 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 15:02:33,423 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-19 15:02:33,425 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-19 15:02:33,426 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-19 15:02:33,428 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-19 15:02:33,436 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-19 15:02:33,437 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-19 15:02:33,445 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-19 15:02:33,524 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-19 15:02:33,525 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-19 15:02:33,533 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-19 15:02:33,534 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-19 15:02:33,544 INFO [config.XMLConfiguration] - Found configuration file in C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-19 15:02:33,576 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-19 15:02:33,748 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-19 15:02:33,748 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-19 15:02:33,753 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-19 15:02:33,833 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-19 15:02:33,834 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-19 15:02:33,837 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-19 15:02:33,838 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-19 15:02:33,923 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-19 15:02:33,933 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-19 15:02:33,937 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-19 15:02:33,937 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-19 15:02:33,939 INFO [diskquota.DiskQuotaMonitor] - 22 layers attached to global quota 500,0 MB
2016-04-19 15:02:33,954 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-19 15:02:34,027 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-19 15:02:34,038 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-19 15:02:34,053 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-19 15:02:34,068 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-19 15:02:34,212 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-19 15:02:34,248 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-19 15:02:34,259 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-19 15:02:34,261 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-19 15:02:34,392 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-19 15:02:34,431 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-19 15:02:34,432 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-19 15:02:35,334 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-19 15:02:35,335 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-19 15:02:35,336 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-19 15:02:35,442 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-19 15:02:35,454 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-19 15:02:35,454 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-19 15:02:35,461 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-19 15:02:35,539 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-19 15:02:35,539 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-19 15:02:36,792 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-19 15:02:36,792 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-19 15:02:36,794 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-19 15:02:39,274 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-19 15:02:39,275 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-19 15:02:39,336 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-19 15:02:39,337 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-19 15:02:39,583 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-19 15:02:39,585 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-19 15:02:39,714 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-19 15:02:39,715 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-19 15:03:06,996 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-04-19 15:03:38,483 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-19 15:03:38,486 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-19 15:18:36,773 ERROR [wicket.RequestCycle] - Argument "sourceCRS" should not be null.
java.lang.IllegalArgumentException: Argument "sourceCRS" should not be null.
	at org.geotools.referencing.operation.AbstractCoordinateOperationFactory.ensureNonNull(AbstractCoordinateOperationFactory.java:734)
	at org.geotools.referencing.operation.BufferedCoordinateOperationFactory.createOperation(BufferedCoordinateOperationFactory.java:252)
	at org.geotools.referencing.CRS.findMathTransform(CRS.java:1205)
	at org.geoserver.web.data.resource.BasicResourceConfig$ReprojectionIsPossibleValidator.validate(BasicResourceConfig.java:232)
	at org.apache.wicket.markup.html.form.Form.validateFormValidator(Form.java:2232)
	at org.apache.wicket.markup.html.form.Form.validateFormValidators(Form.java:2244)
	at org.apache.wicket.markup.html.form.Form.validate(Form.java:2134)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:1005)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:116)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:18:49,268 ERROR [io.IObjectStreamFactory$DefaultObjectStreamFactory] - error writing object [Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0, ajax = 0]: null
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:138)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:18:49,449 ERROR [lang.Objects] - Error serializing object class org.geoserver.web.data.resource.ResourceConfigurationPage [object=[Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0, ajax = 0]]
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doGet(WicketServlet.java:138)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:18:57,393 ERROR [io.IObjectStreamFactory$DefaultObjectStreamFactory] - error writing object [Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0]: null
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:18:57,557 ERROR [lang.Objects] - Error serializing object class org.geoserver.web.data.resource.ResourceConfigurationPage [object=[Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0]]
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:43,133 ERROR [io.IObjectStreamFactory$DefaultObjectStreamFactory] - error writing object [Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0]: null
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:43,311 ERROR [lang.Objects] - Error serializing object class org.geoserver.web.data.resource.ResourceConfigurationPage [object=[Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0]]
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:44,681 ERROR [io.IObjectStreamFactory$DefaultObjectStreamFactory] - error writing object [Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0]: null
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:44,845 ERROR [lang.Objects] - Error serializing object class org.geoserver.web.data.resource.ResourceConfigurationPage [object=[Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 0]]
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:54,613 ERROR [io.IObjectStreamFactory$DefaultObjectStreamFactory] - error writing object [Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 1, ajax = 0]: null
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:54,794 ERROR [lang.Objects] - Error serializing object class org.geoserver.web.data.resource.ResourceConfigurationPage [object=[Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 1, ajax = 0]]
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:19:55,253 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:19:55,374 INFO [geoserver.wms] - 
Request: getLegendGraphic
	Strict = false
	Locale = null
	Format = image/png
	Rules = []
	Height = 20
	Width = 20
	Env = {}
	Styles = [StyleImpl[ name=polygon]]
	FeatureType = null
	Layers = [null]
	Scale = -1.0
	Transparent = false
	Exceptions = SE_XML
	LegendOptions = {}
	Version = 1.0.0
	Request = GetLegendGraphic
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {STRICT=false, REQUEST=GetLegendGraphic, FORMAT=image/png, VERSION=1.0.0, STYLE=polygon, WIDTH=20, HEIGHT=20}
	RequestCharset = null
2016-04-19 15:20:51,809 INFO [geoserver.web] - Error saving layer
java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSave(ResourceConfigurationPage.java:326)
	at org.geoserver.web.data.resource.ResourceConfigurationPage$6.onSubmit(ResourceConfigurationPage.java:258)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1561)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:958)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:920)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:182)
	at org.apache.wicket.request.target.component.listener.ListenerInterfaceRequestTarget.processEvents(ListenerInterfaceRequestTarget.java:73)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.wicket.WicketRuntimeException: Error calling method: public java.util.Set org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters() on object: GeoServerTileLayerInfoImpl[id=<null>,enabled=true,inMemoryCached=true,name=geoweb:parcels,blobStoreId=<null>,mimeFormats=[image/jpeg, image/png],formatModifiers=<null>,gridSubsets=[XMLGridSubset[gridSetName=EPSG:4326,extent=<null>,zoomStart=<null>,zoomStop=<null>,minCachedLevel=<null>,maxCachedLevel=<null>], XMLGridSubset[gridSetName=EPSG:900913,extent=<null>,zoomStart=<null>,zoomStop=<null>,minCachedLevel=<null>,maxCachedLevel=<null>]],metaWidthHeight={4,4},expireCache=0,expireCacheList=<null>,expireClients=0,parameterFilters=[StyleParameterFilter[allowedStyles=<null>,availableStyles=[],defaultStyle=polygon,key=STYLES,defaultValue=]],gutter=0,autoCacheStyles=<null>]
	at org.apache.wicket.util.lang.PropertyResolver$MethodGetAndSet.getValue(PropertyResolver.java:1075)
	at org.apache.wicket.util.lang.PropertyResolver$ObjectAndGetSetter.getValue(PropertyResolver.java:596)
	at org.apache.wicket.util.lang.PropertyResolver.getValue(PropertyResolver.java:95)
	at org.apache.wicket.model.AbstractPropertyModel.getObject(AbstractPropertyModel.java:117)
	at org.geoserver.gwc.web.layer.ParameterFilterEditor.<init>(ParameterFilterEditor.java:166)
	at org.geoserver.gwc.web.layer.GeoServerTileLayerEditor.<init>(GeoServerTileLayerEditor.java:343)
	at org.geoserver.gwc.web.layer.LayerCacheOptionsTabPanel.<init>(LayerCacheOptionsTabPanel.java:36)
	... 119 more
Caused by: java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.wicket.util.lang.PropertyResolver$MethodGetAndSet.getValue(PropertyResolver.java:1071)
	... 125 more
2016-04-19 15:20:51,991 ERROR [wicket.RequestCycle] - Method onFormSubmitted of interface org.apache.wicket.markup.html.form.IFormSubmitListener targeted at component [MarkupContainer [Component id = resource]] threw an exception
org.apache.wicket.WicketRuntimeException: Method onFormSubmitted of interface org.apache.wicket.markup.html.form.IFormSubmitListener targeted at component [MarkupContainer [Component id = resource]] threw an exception
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:193)
	at org.apache.wicket.request.target.component.listener.ListenerInterfaceRequestTarget.processEvents(ListenerInterfaceRequestTarget.java:73)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.wicket.RequestListenerInterface.invoke(RequestListenerInterface.java:182)
	... 105 more
Caused by: java.lang.IllegalArgumentException: Parameter message can't be null
	at org.apache.wicket.feedback.FeedbackMessage.<init>(FeedbackMessage.java:102)
	at org.apache.wicket.feedback.FeedbackMessages.error(FeedbackMessages.java:135)
	at org.apache.wicket.Component.error(Component.java:1309)
	at org.geoserver.web.data.resource.ResourceConfigurationPage.doSave(ResourceConfigurationPage.java:334)
	at org.geoserver.web.data.resource.ResourceConfigurationPage$6.onSubmit(ResourceConfigurationPage.java:258)
	at org.apache.wicket.markup.html.form.Form.delegateSubmit(Form.java:1561)
	at org.apache.wicket.markup.html.form.Form.process(Form.java:958)
	at org.apache.wicket.markup.html.form.Form.onFormSubmitted(Form.java:920)
	... 110 more
2016-04-19 15:20:52,162 ERROR [io.IObjectStreamFactory$DefaultObjectStreamFactory] - error writing object [Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 2, ajax = 0]: null
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:20:52,321 ERROR [lang.Objects] - Error serializing object class org.geoserver.web.data.resource.ResourceConfigurationPage [object=[Page class = org.geoserver.web.data.resource.ResourceConfigurationPage, id = 23, version = 2, ajax = 0]]
java.lang.NullPointerException
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.getParameterFilters(GeoServerTileLayerInfoImpl.java:402)
	at org.geoserver.gwc.layer.GeoServerTileLayerInfoImpl.writeReplace(GeoServerTileLayerInfoImpl.java:158)
	at sun.reflect.GeneratedMethodAccessor207.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteReplace(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at java.util.LinkedHashMap.internalWriteEntries(Unknown Source)
	at java.util.HashMap.writeObject(Unknown Source)
	at sun.reflect.GeneratedMethodAccessor178.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at java.io.ObjectStreamClass.invokeWriteObject(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.defaultWriteFields(Unknown Source)
	at java.io.ObjectOutputStream.writeSerialData(Unknown Source)
	at java.io.ObjectOutputStream.writeOrdinaryObject(Unknown Source)
	at java.io.ObjectOutputStream.writeObject0(Unknown Source)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.io.IObjectStreamFactory$DefaultObjectStreamFactory$2.writeObjectOverride(IObjectStreamFactory.java:121)
	at java.io.ObjectOutputStream.writeObject(Unknown Source)
	at org.apache.wicket.util.lang.Objects.objectToByteArray(Objects.java:1124)
	at org.apache.wicket.protocol.http.pagestore.AbstractPageStore.serializePage(AbstractPageStore.java:203)
	at org.apache.wicket.protocol.http.pagestore.DiskPageStore.storePage(DiskPageStore.java:840)
	at org.apache.wicket.protocol.http.SecondLevelCacheSessionStore$SecondLevelCachePageMap.put(SecondLevelCacheSessionStore.java:332)
	at org.apache.wicket.Session.requestDetached(Session.java:1403)
	at org.apache.wicket.RequestCycle.detach(RequestCycle.java:1176)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1462)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-19 15:22:02,499 INFO [geoserver.gwc] - Saving GeoSeverTileLayer geoweb:parcels
2016-04-19 15:23:41,281 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [MarkupContainer [Component id = subform]]
2016-04-19 15:23:41,288 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [MarkupContainer [Component id = subform]]
2016-04-19 15:27:10,826 INFO [geoserver.gwc] - Saving GeoSeverTileLayer geoweb:parcels
2016-04-19 15:27:43,705 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-19 15:27:43,706 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-19 15:27:48,302 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-19 15:27:48,304 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-19 15:29:51,159 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:51,501 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = application/openlayers
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=application/openlayers, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:52,580 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:53,097 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[80274.01722408373 : 89455.2803996358, 438534.1597229132 : 453212.7280846586]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=80274.01722408373,438534.1597229132,89455.2803996358,453212.7280846586, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:54,676 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:54,956 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72801.11798660214 : 91201.82006816597, 427530.00541791157 : 456848.9664109427]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72801.11798660214,427530.00541791157,91201.82006816597,456848.9664109427, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:55,438 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:55,715 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[71159.56157683607 : 89560.2636583999, 424666.82563343586 : 453985.786626467]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=71159.56157683607,424666.82563343586,89560.2636583999,453985.786626467, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:55,867 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:56,043 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81557.67616079032 : 86148.30774856635, 439631.7119736289 : 446961.45222188666]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81557.67616079032,439631.7119736289,86148.30774856635,446961.45222188666, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:56,170 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:56,310 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83242.18026732352 : 85542.268027519, 442160.8541165824 : 445825.7242407113]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83242.18026732352,442160.8541165824,85542.268027519,445825.7242407113, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:56,876 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:57,011 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83390.11122285477 : 85690.19898305026, 442838.47333224164 : 446503.3434563705]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83390.11122285477,442838.47333224164,85690.19898305026,446503.3434563705, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:57,915 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:58,038 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83833.90408944851 : 86133.991849644, 442895.73692793114 : 446560.60705206]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83833.90408944851,442895.73692793114,86133.991849644,446560.60705206, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:58,497 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:58,577 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84355.24140853845 : 85502.89930548245, 444191.3257804064 : 446023.76084247086]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84355.24140853845,444191.3257804064,85502.89930548245,446023.76084247086, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:29:59,075 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:29:59,099 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84734.91097787571 : 85021.8254521117, 445151.08750399423 : 445609.1962695103]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84734.91097787571,445151.08750399423,85021.8254521117,445609.1962695103, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:00,326 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:00,344 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84898.42538587975 : 84970.15400443874, 445400.1244956648 : 445514.6516870438]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84898.42538587975,445400.1244956648,84970.15400443874,445514.6516870438, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:01,331 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:01,354 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84804.10448933387 : 85091.01896356986, 445202.3861417994 : 445660.4949073155]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84804.10448933387,445202.3861417994,85091.01896356986,445660.4949073155, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:08,124 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:08,225 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83894.74665986862 : 85042.40455681262, 444105.43038687215 : 445937.8654489366]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83894.74665986862,444105.43038687215,85042.40455681262,445937.8654489366, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:09,250 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:09,336 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84166.7487393938 : 85314.40663633781, 444174.6238983303 : 446007.05896039476]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84166.7487393938,444174.6238983303,85314.40663633781,446007.05896039476, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:11,418 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:11,824 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81366.79750849195 : 85957.42909626798, 440309.3311892881 : 447639.0714375459]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81366.79750849195,440309.3311892881,85957.42909626798,447639.0714375459, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:14,954 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:15,061 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82842.52808907379 : 83990.1859860178, 445744.60081348446 : 447577.0358755489]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82842.52808907379,445744.60081348446,83990.1859860178,447577.0358755489, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:15,988 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:16,089 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82821.05424069022 : 83968.71213763423, 445778.0045776367 : 447610.43963970116]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82821.05424069022,445778.0045776367,83968.71213763423,447610.43963970116, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:16,779 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:17,054 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[80307.42098823593 : 84898.05257601196, 442399.4524319554 : 449729.19268021313]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=80307.42098823593,442399.4524319554,84898.05257601196,449729.19268021313, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:30:20,280 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:30:20,590 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81614.93975647984 : 86205.57134425588, 441607.3060249171 : 448937.04627317487]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81614.93975647984,441607.3060249171,86205.57134425588,448937.04627317487, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:46:57,752 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:46:58,093 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/png, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:46:58,240 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:46:58,564 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/png, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:47:04,826 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:47:05,155 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/jpeg
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:47:05,339 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:47:05,656 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/jpeg
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:17,569 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:17,858 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[78059.82485742251 : 87241.08803297459, 435079.25611631246 : 449757.8244780579]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=78059.82485742251,435079.25611631246,87241.08803297459,449757.8244780579, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:18,689 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:18,979 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79014.21811891442 : 88195.48129446649, 435919.1221864254 : 450597.6905481708]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79014.21811891442,435919.1221864254,88195.48129446649,450597.6905481708, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:21,733 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:22,020 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[78136.17631834187 : 87317.43949389394, 437980.61163124786 : 452659.1799929933]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=78136.17631834187,437980.61163124786,87317.43949389394,452659.1799929933, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:25,386 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:25,675 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79472.32688443053 : 88653.5900599826, 436281.7916257923 : 450960.3599875377]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79472.32688443053,436281.7916257923,88653.5900599826,450960.3599875377, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:25,907 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:26,234 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82149.3999829153 : 86740.03157069134, 441683.6574858365 : 449013.39773409424]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82149.3999829153,441683.6574858365,86740.03157069134,449013.39773409424, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:26,338 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:26,443 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84142.88890785651 : 85290.54680480051, 445682.5652514875 : 447515.0003135519]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84142.88890785651,445682.5652514875,85290.54680480051,447515.0003135519, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:27,553 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:27,870 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82053.96065676611 : 86644.59224454215, 441788.64074460056 : 449118.3809928583]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82053.96065676611,441788.64074460056,86644.59224454215,449118.3809928583, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:28,923 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:29,236 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81385.88537372179 : 85976.51696149782, 442170.39804919733 : 449500.1382974551]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81385.88537372179,442170.39804919733,85976.51696149782,449500.1382974551, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:29,624 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:29,726 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83558.32303519272 : 84133.34497524159, 447166.050277319 : 448083.4607999281]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83558.32303519272,447166.050277319,84133.34497524159,448083.4607999281, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:31,054 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:31,095 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83745.92096065472 : 83889.67644566695, 447658.9049225113 : 447888.25755316357]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83745.92096065472,447658.9049225113,83889.67644566695,447888.25755316357, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:50:32,211 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:50:32,231 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 769
	Width = 482
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83792.89500399378 : 83828.83387524683, 447781.9694598622 : 447839.30761752534]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = true
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83792.89500399378,447781.9694598622,83828.83387524683,447839.30761752534, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:59:02,584 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:59:02,928 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/png, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 15:59:03,089 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 15:59:03,411 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/png, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 16:01:20,695 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-19 16:01:21,058 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}parcels
    maxFeatures = 50
    outputFormat = application/gml+xml; version=3.2
    resultType = results
2016-04-19 16:14:19,930 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 16:14:20,276 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/jpeg
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 16:14:20,450 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-19 16:14:20,776 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/jpeg
	Buffer = 0
	Filters = null
	Height = 768
	Width = 481
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Sld = null
	FeatureVersion = null
	Tiled = false
	Elevation = []
	FormatOptions = {}
	StartIndex = null
	CQLFilter = null
	RemoteOwsURL = null
	FeatureId = null
	ViewParams = null
	RemoteOwsType = null
	StyleUrl = null
	SldBody = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Transparent = false
	StyleFormat = sld
	SRS = EPSG:28992
	ValidateSchema = false
	Interpolations = []
	StyleBody = null
	ScaleMethod = null
	StyleVersion = null
	Exceptions = SE_XML
	SldVersion = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-19 16:27:50,910 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-19 16:27:50,915 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}parcels
    maxFeatures = 50
    outputFormat = gml3
    resultType = results
2016-04-21 14:10:28,849 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 14:10:29,262 INFO [org.geoserver] - Loaded style 'burg'
2016-04-21 14:10:29,263 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-21 14:10:29,264 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-21 14:10:29,265 INFO [org.geoserver] - Loaded style 'dem'
2016-04-21 14:10:29,266 INFO [org.geoserver] - Loaded style 'generic'
2016-04-21 14:10:29,267 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-21 14:10:29,268 INFO [org.geoserver] - Loaded style 'grass'
2016-04-21 14:10:29,268 INFO [org.geoserver] - Loaded style 'green'
2016-04-21 14:10:29,269 INFO [org.geoserver] - Loaded style 'line'
2016-04-21 14:10:29,270 INFO [org.geoserver] - Loaded style 'poi'
2016-04-21 14:10:29,270 INFO [org.geoserver] - Loaded style 'point'
2016-04-21 14:10:29,271 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-21 14:10:29,272 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-21 14:10:29,273 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-21 14:10:29,274 INFO [org.geoserver] - Loaded style 'population'
2016-04-21 14:10:29,275 INFO [org.geoserver] - Loaded style 'rain'
2016-04-21 14:10:29,276 INFO [org.geoserver] - Loaded style 'raster'
2016-04-21 14:10:29,276 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-21 14:10:29,277 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-21 14:10:29,278 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-21 14:10:29,279 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-21 14:10:29,280 INFO [org.geoserver] - Loaded default workspace geoweb
2016-04-21 14:10:29,286 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-21 14:10:29,289 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-04-21 14:10:29,291 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-21 14:10:29,293 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-21 14:10:29,295 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-21 14:10:29,296 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-21 14:10:29,298 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-21 14:10:29,300 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-21 14:10:29,729 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-04-21 14:10:29,732 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-04-21 14:10:30,243 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-04-21 14:10:30,249 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-04-21 14:10:30,265 INFO [org.geoserver] - Loaded layer 'parcels'
2016-04-21 14:10:30,273 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-21 14:10:30,276 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-21 14:10:30,957 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-21 14:10:30,964 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-21 14:10:31,077 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-21 14:10:31,082 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-21 14:10:31,082 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-21 14:10:31,308 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-21 14:10:31,309 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-21 14:10:31,310 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-21 14:10:31,315 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-21 14:10:31,315 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-21 14:10:31,319 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-21 14:10:31,320 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-21 14:10:32,058 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-21 14:10:32,059 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-21 14:10:32,096 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-21 14:10:32,105 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-21 14:10:32,105 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-21 14:10:32,110 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-21 14:10:32,110 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-21 14:10:32,129 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-21 14:10:32,136 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-21 14:10:32,137 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-21 14:10:32,172 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-21 14:10:32,172 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 14:10:32,180 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-21 14:10:32,182 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-21 14:10:32,183 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 14:10:32,186 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-21 14:10:32,189 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-21 14:10:32,191 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 14:10:32,195 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-21 14:10:32,198 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-21 14:10:32,199 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 14:10:32,201 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-21 14:10:32,204 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-21 14:10:32,204 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 14:10:32,206 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-21 14:10:32,216 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-21 14:10:32,216 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-21 14:10:32,219 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-21 14:10:32,220 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-21 14:10:32,438 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-21 14:10:32,444 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-21 14:10:32,445 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-21 14:10:32,456 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-21 14:10:32,457 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 14:10:32,458 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-21 14:10:32,460 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-21 14:10:32,461 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 14:10:32,463 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-21 14:10:32,465 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-21 14:10:32,465 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 14:10:32,469 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-21 14:10:32,472 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-21 14:10:32,472 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 14:10:32,475 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-21 14:10:32,483 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-21 14:10:32,484 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-21 14:10:32,490 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-21 14:10:32,492 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-21 14:10:32,498 INFO [org.geoserver] - Loaded layer 'states'
2016-04-21 14:10:32,505 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-21 14:10:32,505 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-21 14:10:32,517 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-21 14:10:32,518 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 14:10:32,520 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-21 14:10:32,521 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-21 14:10:32,522 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 14:10:32,523 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-21 14:10:32,525 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-21 14:10:32,526 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 14:10:32,530 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-21 14:10:32,533 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-21 14:10:32,534 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 14:10:32,536 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-21 14:10:32,545 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-21 14:10:32,547 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-21 14:10:32,548 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-21 14:10:32,625 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 14:10:32,626 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-21 14:10:32,627 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 14:10:32,628 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-21 14:10:32,636 INFO [config.XMLConfiguration] - Found configuration file in C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 14:10:32,675 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-21 14:10:32,844 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-21 14:10:32,845 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 14:10:32,848 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 14:10:32,939 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-21 14:10:32,940 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 14:10:32,941 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 14:10:32,941 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-21 14:10:33,024 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 14:10:33,032 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 14:10:33,036 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-21 14:10:33,036 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-21 14:10:33,037 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
2016-04-21 14:10:33,052 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-21 14:10:33,101 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-21 14:10:33,114 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-21 14:10:33,129 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-21 14:10:33,151 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-21 14:10:33,535 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-21 14:10:33,567 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-21 14:10:33,582 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-21 14:10:33,584 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-21 14:10:33,715 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-21 14:10:33,753 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-21 14:10:33,754 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-21 14:10:34,652 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-21 14:10:34,654 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-21 14:10:34,654 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-21 14:10:34,753 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 14:10:34,765 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-21 14:10:34,765 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-21 14:10:34,772 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-21 14:10:34,854 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-21 14:10:34,854 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-21 14:10:36,146 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-21 14:10:36,146 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-21 14:10:36,147 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-21 14:10:38,420 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-21 14:10:38,420 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-21 14:10:38,485 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-21 14:10:38,486 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-21 14:10:38,671 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-21 14:10:38,673 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-21 14:10:38,801 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-21 14:10:38,802 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-21 14:26:24,331 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:26:25,208 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/jpeg
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:26:25,403 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:26:25,741 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/jpeg
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:26:31,832 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:26:32,166 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/jpeg
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:26:32,298 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:26:32,621 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/jpeg
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Env = {}
	Angle = 0.0
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=image/jpeg, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,441 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005666094 : 85327.04005743189, 447517.1204368806 : 448377.2804374067]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005666094,447517.1204368806,85327.04005743189,448377.2804374067, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,502 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005669558 : 85327.04005746609, 449237.4404379589 : 450097.6004384773]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005669558,449237.4404379589,85327.04005746609,450097.6004384773, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,501 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[85327.04005748304 : 86187.2000582538, 449237.44043797243 : 450097.6004384934]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=85327.04005748304,449237.44043797243,86187.2000582538,450097.6004384934, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,490 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[85327.04005746609 : 86187.20005823697, 448377.2804374384 : 449237.4404379589]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=85327.04005746609,448377.2804374384,86187.20005823697,449237.4404379589, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,537 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[85327.04005744889 : 86187.20005822013, 447517.1204369015 : 448377.28043742024]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=85327.04005744889,447517.1204369015,86187.20005822013,448377.28043742024, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,537 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005667832 : 85327.04005744889, 448377.28043742024 : 449237.4404379436]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005667832,448377.28043742024,85327.04005744889,449237.4404379436, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,625 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,619 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,610 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,609 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,609 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,665 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,669 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005823697 : 87047.36005900848, 447517.12043691875 : 448377.2804374384]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005823697,447517.12043691875,87047.36005900848,448377.2804374384, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,694 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000582538 : 87047.36005902496, 448377.2804374529 : 449237.44043797243]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000582538,448377.2804374529,87047.36005902496,449237.44043797243, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,759 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,807 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83606.72005590802 : 84466.88005667832, 449237.4404379436 : 450097.6004384569]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83606.72005590802,449237.4404379436,84466.88005667832,450097.6004384569, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,812 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,847 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,853 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83606.72005589056 : 84466.88005666094, 448377.2804374067 : 449237.44043792674]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83606.72005589056,448377.2804374067,84466.88005666094,449237.44043792674, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,880 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005827057 : 87047.3600590417, 449237.440437991 : 450097.6004385102]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005827057,449237.440437991,87047.3600590417,450097.6004385102, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,937 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[85327.04005743189 : 86187.20005820319, 446656.9604363621 : 447517.1204368806]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=85327.04005743189,446656.9604363621,86187.20005820319,447517.1204368806, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,924 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.8800566437 : 85327.04005741484, 446656.96043634834 : 447517.12043686945]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.8800566437,446656.96043634834,85327.04005741484,447517.12043686945, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:15,920 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,002 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,972 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:15,972 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83606.72005587305 : 84466.8800566437, 447517.12043686945 : 448377.2804373899]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83606.72005587305,447517.12043686945,84466.8800566437,448377.2804373899, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,043 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87047.3600590417 : 87907.52005981305, 448377.2804374687 : 449237.440437991]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87047.3600590417,448377.2804374687,87907.52005981305,449237.440437991, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,043 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,043 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005822013 : 87047.36005899172, 446656.9604363818 : 447517.1204369015]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005822013,446656.9604363818,87047.36005899172,447517.1204369015, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,122 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,088 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,083 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83606.7200558555 : 84466.88005662637, 446656.9604363344 : 447517.1204368526]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83606.7200558555,446656.9604363344,84466.88005662637,447517.1204368526, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,074 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.5600551027 : 83606.72005587305, 448377.2804373899 : 449237.4404379063]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600551027,448377.2804373899,83606.72005587305,449237.4404379063, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,204 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,173 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005508517 : 83606.7200558555, 447517.1204368526 : 448377.280437374]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005508517,447517.1204368526,83606.7200558555,448377.280437374, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,171 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87047.36005902496 : 87907.52005979656, 447517.1204369306 : 448377.2804374529]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87047.36005902496,447517.1204369306,87907.52005979656,448377.2804374529, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,169 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,165 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.5600551205 : 83606.72005589056, 449237.44043792674 : 450097.6004384425]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600551205,449237.44043792674,83606.72005589056,450097.6004384425, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,293 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87047.36005905832 : 87907.52005982949, 449237.4404380056 : 450097.600438527]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87047.36005905832,449237.4404380056,87907.52005982949,450097.600438527, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,272 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005506756 : 83606.72005583825, 446656.9604363158 : 447517.1204368365]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005506756,446656.9604363158,83606.72005583825,447517.1204368365, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:16,232 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:16,376 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87047.36005900848 : 87907.52005978022, 446656.9604363987 : 447517.12043691875]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87047.36005900848,446656.9604363987,87907.52005978022,447517.12043691875, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:19,758 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:19,760 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:19,760 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:19,775 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81886.40005431509 : 82746.56005508517, 448377.280437374 : 449237.44043788826]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81886.40005431509,448377.280437374,82746.56005508517,449237.44043788826, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:19,796 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81886.4000542794 : 82746.56005504962, 446656.96043629653 : 447517.1204368182]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81886.4000542794,446656.96043629653,82746.56005504962,447517.1204368182, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:19,792 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81886.40005429724 : 82746.56005506756, 447517.1204368365 : 448377.28043735353]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81886.40005429724,447517.1204368365,82746.56005506756,448377.28043735353, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:22,229 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:22,231 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:22,246 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:22,250 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:22,275 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:22,269 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:30:22,282 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005820319 : 87047.36005897511, 445796.8004358446 : 446656.9604363621]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005820319,445796.8004358446,87047.36005897511,446656.9604363621, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:22,327 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83606.72005583825 : 84466.88005660915, 445796.8004357919 : 446656.9604363158]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83606.72005583825,445796.8004357919,84466.88005660915,446656.9604363158, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:22,357 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[85327.04005741484 : 86187.2000581864, 445796.800435828 : 446656.96043634834]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=85327.04005741484,445796.800435828,86187.2000581864,446656.96043634834, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:22,353 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005662637 : 85327.04005739785, 445796.8004358103 : 446656.9604363344]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005662637,445796.8004358103,85327.04005739785,446656.9604363344, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:22,331 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81886.40005426129 : 82746.56005503201, 445796.8004357554 : 446656.9604362831]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81886.40005426129,445796.8004357554,82746.56005503201,446656.9604362831, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:30:22,363 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005504962 : 83606.72005582078, 445796.8004357809 : 446656.96043629653]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005504962,445796.8004357809,83606.72005582078,446656.96043629653, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,285 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,285 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,285 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,285 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,309 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81026.24005352751 : 82746.56005506756, 447517.1204368365 : 449237.4404378753]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81026.24005352751,447517.1204368365,82746.56005506756,449237.4404378753, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,540 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,574 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,643 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005667832 : 86187.20005822013, 447517.1204369015 : 449237.4404379436]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005667832,447517.1204369015,86187.20005822013,449237.4404379436, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,726 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,679 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.5600551027 : 84466.8800566437, 447517.12043686945 : 449237.4404379063]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600551027,447517.12043686945,84466.8800566437,449237.4404379063, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,666 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005506756 : 84466.88005660915, 445796.8004357919 : 447517.1204368365]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005506756,445796.8004357919,84466.88005660915,447517.1204368365, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,791 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,791 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,785 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.8800566437 : 86187.2000581864, 445796.800435828 : 447517.12043686945]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.8800566437,445796.800435828,86187.2000581864,447517.12043686945, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,779 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81026.24005356384 : 82746.5600551027, 449237.4404379063 : 450957.7604389452]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81026.24005356384,449237.4404379063,82746.5600551027,450957.7604389452, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,739 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81026.24005349135 : 82746.56005503201, 445796.8004357554 : 447517.120436799]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81026.24005349135,445796.8004357554,82746.56005503201,447517.120436799, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,935 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,934 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,848 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,848 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005195246 : 81026.24005349135, 447517.120436799 : 449237.44043783844]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005195246,447517.120436799,81026.24005349135,449237.44043783844, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,843 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.5600551383 : 84466.88005667832, 449237.4404379436 : 450957.76043898]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600551383,449237.4404379436,84466.88005667832,450957.76043898, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,041 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,108 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:53,998 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81026.24005345516 : 82746.56005499682, 444076.4804346843 : 445796.800435724]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81026.24005345516,444076.4804346843,82746.56005499682,445796.800435724, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:53,991 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.9200519154 : 81026.24005345516, 445796.800435724 : 447517.1204367649]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.9200519154,445796.800435724,81026.24005345516,447517.1204367649, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,159 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005198945 : 81026.24005352751, 449237.4404378753 : 450957.76043891005]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005198945,449237.4404378753,81026.24005352751,450957.76043891005, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,109 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005503201 : 84466.88005657478, 444076.4804347171 : 445796.8004357554]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005503201,444076.4804347171,84466.88005657478,445796.8004357554, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,103 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,250 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,223 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,216 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,216 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005187838 : 81026.24005341888, 444076.4804346423 : 445796.80043568875]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005187838,444076.4804346423,81026.24005341888,445796.80043568875, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,309 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,294 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000582538 : 87907.52005979656, 447517.1204369306 : 449237.44043797243]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000582538,447517.1204369306,87907.52005979656,449237.44043797243, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,294 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005671279 : 86187.2000582538, 449237.44043797243 : 450957.76043901045]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005671279,449237.44043797243,86187.2000582538,450957.76043901045, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,288 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[77585.60005037747 : 79305.9200519154, 447517.1204367649 : 449237.4404378049]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=77585.60005037747,447517.1204367649,79305.9200519154,449237.4404378049, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,392 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,370 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[84466.88005660915 : 86187.20005815281, 444076.4804347502 : 445796.8004357919]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84466.88005660915,444076.4804347502,86187.20005815281,445796.8004357919, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,365 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,363 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,356 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[77585.60005033955 : 79305.92005187838, 445796.80043568875 : 447517.1204367318]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=77585.60005033955,445796.80043568875,79305.92005187838,447517.1204367318, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,454 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005828743 : 87907.52005982949, 449237.4404380056 : 450957.7604390446]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005828743,449237.4404380056,87907.52005982949,450957.7604390446, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,443 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,484 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005822013 : 87907.52005976366, 445796.8004358563 : 447517.1204369015]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005822013,445796.8004358563,87907.52005976366,447517.1204369015, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,481 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:54,480 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[77585.60005041554 : 79305.92005195246, 449237.44043783844 : 450957.7604388756]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=77585.60005041554,449237.44043783844,79305.92005195246,450957.7604388756, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,559 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000581864 : 87907.5200597309, 444076.4804347833 : 445796.800435828]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000581864,444076.4804347833,87907.5200597309,445796.800435828, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:54,522 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[77585.60005030179 : 79305.92005184125, 444076.4804346104 : 445796.8004356577]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=77585.60005030179,444076.4804346104,79305.92005184125,445796.8004356577, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,325 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,326 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,329 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,340 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87907.52005982949 : 89627.84006137316, 447517.12043696747 : 449237.4404380056]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87907.52005982949,447517.12043696747,89627.84006137316,449237.4404380056, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,340 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87907.52005976366 : 89627.8400613092, 444076.4804348116 : 445796.8004358563]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87907.52005976366,444076.4804348116,89627.8400613092,445796.8004358563, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,340 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[87907.52005979656 : 89627.84006134112, 445796.8004358881 : 447517.1204369306]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=87907.52005979656,445796.8004358881,89627.84006134112,447517.1204369306, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,662 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,673 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,673 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,691 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005187838 : 82746.56005496153, 442356.16043360234 : 445796.80043568875]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005187838,442356.16043360234,82746.56005496153,445796.80043568875, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,719 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,698 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,695 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,693 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005195246 : 82746.56005503201, 445796.8004357554 : 449237.44043783844]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005195246,445796.8004357554,82746.56005503201,449237.44043783844, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,789 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000582538 : 89627.84006134112, 445796.8004358881 : 449237.44043797243]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000582538,445796.8004358881,89627.84006134112,449237.44043797243, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,891 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,783 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:55,769 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[75865.28004880261 : 79305.92005187838, 445796.80043568875 : 449237.4404377656]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004880261,445796.80043568875,79305.92005187838,449237.4404377656, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,034 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005503201 : 86187.20005811921, 442356.1604336655 : 445796.8004357554]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005503201,442356.1604336655,86187.20005811921,445796.8004357554, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,030 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000581864 : 89627.84006127735, 442356.1604337289 : 445796.800435828]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000581864,442356.1604337289,89627.84006127735,445796.800435828, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,008 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[75865.28004872511 : 79305.92005180447, 442356.1604335325 : 445796.800435617]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004872511,442356.1604335325,79305.92005180447,445796.800435617, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:55,985 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.5600551027 : 86187.2000581864, 445796.800435828 : 449237.4404379063]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600551027,445796.800435828,86187.2000581864,449237.4404379063, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,196 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,153 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,130 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,117 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,101 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,250 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005496153 : 86187.2000580522, 438915.52043150156 : 442356.16043360234]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005496153,438915.52043150156,86187.2000580522,442356.16043360234, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,248 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[75865.28004888026 : 79305.92005195246, 449237.44043783844 : 452678.08043990296]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004888026,449237.44043783844,79305.92005195246,452678.08043990296, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,247 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005180447 : 82746.5600548911, 438915.5204314324 : 442356.1604335325]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005180447,438915.5204314324,82746.5600548911,442356.1604335325, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,351 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005517376 : 86187.2000582538, 449237.44043797243 : 452678.0804400458]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005517376,449237.44043797243,86187.2000582538,452678.0804400458, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,347 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,347 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,339 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,290 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005202684 : 82746.5600551027, 449237.4404379063 : 452678.0804399816]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005202684,449237.4404379063,82746.5600551027,452678.0804399816, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,435 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,426 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005832137 : 89627.84006140514, 449237.44043803785 : 452678.0804401146]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005832137,449237.44043803785,89627.84006140514,452678.0804401146, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,424 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[75865.2800486479 : 79305.92005173069, 438915.52043136733 : 442356.1604334601]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.2800486479,438915.52043136733,79305.92005173069,442356.1604334601, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,424 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005811921 : 89627.84006121365, 438915.52043156285 : 442356.1604336655]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005811921,438915.52043156285,89627.84006121365,442356.1604336655, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,384 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,532 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,507 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,565 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004573427 : 75865.28004880261, 449237.4404377656 : 452678.08043982665]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004573427,449237.4404377656,75865.28004880261,452678.08043982665, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,506 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[89627.84006140514 : 93068.4800644965, 445796.8004359504 : 449237.44043803785]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006140514,445796.8004359504,93068.4800644965,449237.44043803785, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,506 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,602 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,576 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,569 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[89627.84006134112 : 93068.48006443612, 442356.16043379536 : 445796.8004358881]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006134112,442356.16043379536,93068.48006443612,445796.8004358881, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,565 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004565334 : 75865.28004872511, 445796.800435617 : 449237.440437689]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004565334,445796.800435617,75865.28004872511,449237.440437689, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,688 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[89627.84006146945 : 93068.48006455736, 449237.44043809944 : 452678.0804401797]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006146945,449237.44043809944,93068.48006455736,452678.0804401797, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,686 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,678 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.6400454919 : 75865.28004857086, 438915.52043129655 : 442356.16043338337]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.6400454919,438915.52043129655,75865.28004857086,442356.16043338337, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,678 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004557255 : 75865.2800486479, 442356.1604334601 : 445796.8004355443]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004557255,442356.1604334601,75865.2800486479,445796.8004355443, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,747 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[89627.84006127735 : 93068.48006437568, 438915.5204316274 : 442356.1604337289]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006127735,438915.5204316274,93068.48006437568,442356.1604337289, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,922 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,926 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,926 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,924 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:56,942 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.48006443612 : 96509.12006753797, 438915.52043168014 : 442356.16043379536]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006443612,438915.52043168014,96509.12006753797,442356.16043379536, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,954 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.48006461779 : 96509.12006770921, 449237.4404381565 : 452678.08044023917]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006461779,449237.4404381565,96509.12006770921,452678.08044023917, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,953 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.48006455736 : 96509.12006765186, 445796.8004360066 : 449237.44043809944]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006455736,445796.8004360066,96509.12006765186,449237.44043809944, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:56,944 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.4800644965 : 96509.12006759479, 442356.160433846 : 445796.8004359504]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.4800644965,442356.160433846,96509.12006759479,445796.8004359504, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:59,688 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,689 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,690 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,688 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,706 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005838889 : 93068.48006455736, 449237.44043809944 : 456118.7204422431]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005838889,449237.44043809944,93068.48006455736,456118.7204422431, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:59,779 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000582538 : 93068.48006443612, 442356.16043379536 : 449237.44043797243]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000582538,442356.16043379536,93068.48006443612,449237.44043797243, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:59,718 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,712 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,709 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005210122 : 86187.2000582538, 449237.44043797243 : 456118.7204421092]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005210122,449237.44043797243,86187.2000582538,456118.7204421092, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:59,971 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:33:59,959 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005180447 : 86187.20005798522, 435474.8804293223 : 442356.1604335325]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005180447,435474.8804293223,86187.20005798522,442356.1604335325, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:59,954 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005811921 : 93068.48006431531, 435474.88042944437 : 442356.1604336655]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005811921,435474.88042944437,93068.48006431531,442356.1604336655, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:33:59,919 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,128 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005195246 : 86187.20005811921, 442356.1604336655 : 449237.44043783844]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005195246,442356.1604336655,86187.20005811921,449237.44043783844, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,085 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,042 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,041 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.48006455736 : 99949.76007075422, 442356.1604339016 : 449237.44043809944]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006455736,442356.1604339016,99949.76007075422,449237.44043809944, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,187 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004581589 : 79305.92005195246, 449237.44043783844 : 456118.720441954]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004581589,449237.44043783844,79305.92005195246,456118.720441954, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,184 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.4800646787 : 99949.76007086193, 449237.44043820887 : 456118.7204423658]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.4800646787,449237.44043820887,99949.76007086193,456118.7204423658, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,184 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,147 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004565334 : 79305.92005180447, 442356.1604335325 : 449237.440437689]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004565334,442356.1604335325,79305.92005180447,449237.440437689, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,144 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,279 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.48006443612 : 99949.760070647, 435474.88042955514 : 442356.16043379536]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006443612,435474.88042955514,99949.760070647,442356.16043379536, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,276 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,246 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,215 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,309 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.6400454919 : 79305.92005165722, 435474.8804291854 : 442356.16043338337]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.6400454919,435474.8804291854,79305.92005165722,442356.16043338337, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,306 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,342 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003935692 : 72424.6400454919, 442356.16043338337 : 449237.4404375275]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003935692,442356.16043338337,72424.6400454919,449237.4404375275, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,342 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,338 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007086193 : 106831.04007707373, 442356.16043399967 : 449237.44043820887]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007086193,442356.16043399967,106831.04007707373,449237.44043820887, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,338 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003953291 : 72424.64004565334, 449237.440437689 : 456118.720441794]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003953291,449237.440437689,72424.64004565334,456118.720441794, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,400 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003918186 : 72424.64004533135, 435474.88042904064 : 442356.1604332179]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003918186,435474.88042904064,72424.64004533135,442356.1604332179, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,370 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.7600709697 : 106831.0400771677, 449237.44043830596 : 456118.7204424762]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.7600709697,449237.44043830596,106831.0400771677,456118.7204424762, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:00,366 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:00,509 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007075422 : 106831.0400769799, 435474.8804296525 : 442356.1604339016]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007075422,435474.8804296525,106831.0400769799,442356.1604339016, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,226 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,246 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.56005524483 : 86187.20005832137, 452678.0804401146 : 456118.72044217674]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005524483,452678.0804401146,86187.20005832137,456118.72044217674, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,569 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,575 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,581 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82746.5600548911 : 86187.20005798522, 435474.8804293223 : 438915.5204314324]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600548911,435474.8804293223,86187.20005798522,438915.5204314324, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,604 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,591 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005210122 : 82746.56005517376, 452678.0804400458 : 456118.7204421092]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005210122,452678.0804400458,82746.56005517376,456118.7204421092, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,588 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,639 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,626 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,623 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79305.92005173069 : 82746.56005482098, 435474.8804292612 : 438915.52043136733]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005173069,435474.8804292612,82746.56005482098,438915.52043136733, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,613 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,664 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[75865.28004895838 : 79305.92005202684, 452678.0804399816 : 456118.72044203477]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004895838,452678.0804399816,79305.92005202684,456118.72044203477, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,659 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,657 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[89627.84006153356 : 93068.48006461779, 452678.08044023917 : 456118.72044230707]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006153356,452678.08044023917,93068.48006461779,456118.72044230707, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,656 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.20005838889 : 89627.84006146945, 452678.0804401797 : 456118.7204422431]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005838889,452678.0804401797,89627.84006146945,456118.7204422431, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,743 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,724 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[75865.28004857086 : 79305.92005165722, 435474.8804291854 : 438915.52043129655]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004857086,435474.8804291854,79305.92005165722,438915.52043129655, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,720 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,699 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[86187.2000580522 : 89627.84006115029, 435474.8804293883 : 438915.52043150156]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000580522,435474.8804293883,89627.84006115029,438915.52043150156, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,693 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,804 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004581589 : 75865.28004888026, 452678.08043990296 : 456118.720441954]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004581589,452678.08043990296,75865.28004888026,456118.720441954, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,797 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,775 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.4800646787 : 96509.12006776655, 452678.08044029196 : 456118.7204423658]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.4800646787,452678.08044029196,96509.12006776655,456118.7204423658, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,773 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,853 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[93068.48006437568 : 96509.12006748107, 435474.88042950566 : 438915.5204316274]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006437568,435474.88042950566,96509.12006748107,438915.5204316274, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,847 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,828 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[89627.84006121365 : 93068.48006431531, 435474.88042944437 : 438915.52043156285]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006121365,435474.88042944437,93068.48006431531,438915.52043156285, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,822 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,900 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[96509.12006770921 : 99949.76007080788, 445796.80043605913 : 449237.4404381565]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=96509.12006770921,445796.80043605913,99949.76007080788,449237.4404381565, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,893 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,878 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[72424.64004541146 : 75865.280048494, 435474.8804291179 : 438915.52043121384]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004541146,435474.8804291179,75865.280048494,438915.52043121384, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,871 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,947 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[96509.12006765186 : 99949.76007075422, 442356.1604339016 : 445796.8004360066]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=96509.12006765186,442356.1604339016,99949.76007075422,445796.8004360066, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,941 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,924 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,922 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[68984.00004250478 : 72424.64004557255, 445796.8004355443 : 449237.44043761183]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=68984.00004250478,445796.8004355443,72424.64004557255,449237.44043761183, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,989 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[68984.00004258935 : 72424.64004565334, 449237.440437689 : 452678.08043974894]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=68984.00004258935,449237.440437689,72424.64004565334,452678.08043974894, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,989 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[96509.12006776655 : 99949.76007086193, 449237.44043820887 : 452678.08044029196]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=96509.12006776655,449237.44043820887,99949.76007086193,452678.08044029196, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,987 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:01,968 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[68984.00004242045 : 72424.6400454919, 442356.16043338337 : 445796.80043546145]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=68984.00004242045,442356.16043338337,72424.6400454919,445796.80043546145, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:01,965 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,056 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[96509.12006759479 : 99949.76007070058, 438915.52043173497 : 442356.160433846]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=96509.12006759479,438915.52043173497,99949.76007070058,442356.160433846, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,054 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,026 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,004 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,074 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[68984.00004233654 : 72424.64004541146, 438915.52043121384 : 442356.1604333036]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=68984.00004233654,438915.52043121384,72424.64004541146,442356.1604333036, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,070 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,099 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,096 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[68984.00004267403 : 72424.64004573427, 452678.08043982665 : 456118.720441876]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=68984.00004267403,452678.08043982665,72424.64004573427,456118.720441876, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,096 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[68984.00004225264 : 72424.64004533135, 435474.88042904064 : 438915.5204311346]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=68984.00004225264,435474.88042904064,72424.64004533135,438915.5204311346, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,096 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[96509.12006782398 : 99949.76007091571, 452678.08044035063 : 456118.7204424269]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=96509.12006782398,452678.08044035063,99949.76007091571,456118.7204424269, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,159 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,137 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,128 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[96509.12006753797 : 99949.760070647, 435474.88042955514 : 438915.52043168014]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=96509.12006753797,435474.88042955514,99949.760070647,438915.52043168014, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,128 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003935692 : 68984.00004242045, 445796.80043546145 : 449237.4404375275]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003935692,445796.80043546145,68984.00004242045,449237.4404375275, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,121 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,206 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,189 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,188 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003926933 : 68984.00004233654, 442356.1604333036 : 445796.8004353796]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003926933,442356.1604333036,68984.00004233654,445796.8004353796, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,188 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007080788 : 103390.40007391393, 442356.16043395334 : 445796.80043605913]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007080788,442356.16043395334,103390.40007391393,445796.80043605913, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,253 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,238 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,235 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003944477 : 68984.00004250478, 449237.44043761183 : 452678.0804396647]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003944477,449237.44043761183,68984.00004250478,452678.0804396647, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,233 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007086193 : 103390.40007396415, 445796.8004361102 : 449237.44043820887]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007086193,445796.8004361102,103390.40007396415,449237.44043820887, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,233 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007091571 : 103390.40007401466, 449237.44043826085 : 452678.08044035063]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007091571,449237.44043826085,103390.40007401466,452678.08044035063, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,321 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,298 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,281 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003918186 : 68984.00004225264, 438915.5204311346 : 442356.1604332179]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003918186,438915.5204311346,68984.00004225264,442356.1604332179, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,281 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007075422 : 103390.40007386351, 438915.5204317802 : 442356.1604339016]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007075422,438915.5204317802,103390.40007386351,442356.1604339016, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,277 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,346 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.3600390948 : 68984.00004216922, 435474.8804289641 : 438915.520431055]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.3600390948,435474.8804289641,68984.00004216922,438915.520431055, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,346 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.7600709697 : 103390.40007406518, 452678.0804403956 : 456118.7204424762]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.7600709697,452678.0804403956,103390.40007406518,456118.7204424762, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,342 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 14:34:02,392 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[65543.36003953291 : 68984.00004258935, 452678.08043974894 : 456118.720441794]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003953291,452678.08043974894,68984.00004258935,456118.720441794, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 14:34:02,432 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	SRS = EPSG:28992
	Filters = null
	FeatureVersion = null
	Elevation = []
	RemoteOwsURL = null
	FormatOptions = {}
	RemoteOwsType = null
	CQLFilter = null
	ViewParams = null
	StartIndex = null
	FeatureId = null
	Palette = null
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Tiled = false
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[99949.76007070058 : 103390.40007381327, 435474.8804296053 : 438915.52043173497]
	Env = {}
	Angle = 0.0
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	ValidateSchema = false
	Interpolations = []
	Sld = null
	Exceptions = SE_XML
	SldVersion = null
	StyleBody = null
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=99949.76007070058,435474.8804296053,103390.40007381327,438915.52043173497, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	Get = true
	RequestCharset = UTF-8
2016-04-21 15:02:21,581 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:02:21,623 ERROR [geoserver.ows] - 
java.lang.NullPointerException
	at org.geoserver.wms.WMSWorkspaceQualifier.qualifyRequest(WMSWorkspaceQualifier.java:28)
	at org.geoserver.ows.WorkspaceQualifyingCallback.serviceDispatched(WorkspaceQualifyingCallback.java:44)
	at org.geoserver.ows.Dispatcher.fireServiceDispatchedCallback(Dispatcher.java:582)
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:577)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:252)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 15:18:04,831 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 15:18:05,237 INFO [org.geoserver] - Loaded style 'burg'
2016-04-21 15:18:05,238 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-21 15:18:05,238 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-21 15:18:05,239 INFO [org.geoserver] - Loaded style 'dem'
2016-04-21 15:18:05,240 INFO [org.geoserver] - Loaded style 'generic'
2016-04-21 15:18:05,241 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-21 15:18:05,242 INFO [org.geoserver] - Loaded style 'grass'
2016-04-21 15:18:05,243 INFO [org.geoserver] - Loaded style 'green'
2016-04-21 15:18:05,243 INFO [org.geoserver] - Loaded style 'line'
2016-04-21 15:18:05,244 INFO [org.geoserver] - Loaded style 'poi'
2016-04-21 15:18:05,245 INFO [org.geoserver] - Loaded style 'point'
2016-04-21 15:18:05,246 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-21 15:18:05,246 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-21 15:18:05,247 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-21 15:18:05,248 INFO [org.geoserver] - Loaded style 'population'
2016-04-21 15:18:05,249 INFO [org.geoserver] - Loaded style 'rain'
2016-04-21 15:18:05,250 INFO [org.geoserver] - Loaded style 'raster'
2016-04-21 15:18:05,251 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-21 15:18:05,251 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-21 15:18:05,252 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-21 15:18:05,253 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-21 15:18:05,254 INFO [org.geoserver] - Loaded default workspace geoweb
2016-04-21 15:18:05,258 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-21 15:18:05,260 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-04-21 15:18:05,262 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-21 15:18:05,266 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-21 15:18:05,268 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-21 15:18:05,270 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-21 15:18:05,271 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-21 15:18:05,273 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-21 15:18:05,647 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-04-21 15:18:05,650 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-04-21 15:18:06,112 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-04-21 15:18:06,118 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-04-21 15:18:06,138 INFO [org.geoserver] - Loaded layer 'parcels'
2016-04-21 15:18:06,146 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-21 15:18:06,149 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-21 15:18:06,774 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-21 15:18:06,781 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-21 15:18:06,891 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-21 15:18:06,895 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-21 15:18:06,896 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-21 15:18:07,077 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-21 15:18:07,078 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-21 15:18:07,079 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-21 15:18:07,084 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-21 15:18:07,084 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-21 15:18:07,088 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-21 15:18:07,089 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-21 15:18:07,778 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-21 15:18:07,779 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-21 15:18:07,820 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-21 15:18:07,828 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-21 15:18:07,829 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-21 15:18:07,832 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-21 15:18:07,833 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-21 15:18:07,845 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-21 15:18:07,852 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-21 15:18:07,852 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-21 15:18:07,884 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-21 15:18:07,885 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 15:18:07,892 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-21 15:18:07,895 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-21 15:18:07,896 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 15:18:07,898 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-21 15:18:07,901 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-21 15:18:07,902 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 15:18:07,904 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-21 15:18:07,906 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-21 15:18:07,907 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 15:18:07,909 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-21 15:18:07,912 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-21 15:18:07,913 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 15:18:07,917 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-21 15:18:07,922 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-21 15:18:07,922 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-21 15:18:07,925 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-21 15:18:07,926 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-21 15:18:08,143 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-21 15:18:08,149 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-21 15:18:08,150 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-21 15:18:08,160 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-21 15:18:08,161 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 15:18:08,163 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-21 15:18:08,165 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-21 15:18:08,165 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 15:18:08,167 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-21 15:18:08,169 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-21 15:18:08,169 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 15:18:08,171 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-21 15:18:08,173 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-21 15:18:08,173 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 15:18:08,175 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-21 15:18:08,180 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-21 15:18:08,181 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-21 15:18:08,187 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-21 15:18:08,189 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-21 15:18:08,196 INFO [org.geoserver] - Loaded layer 'states'
2016-04-21 15:18:08,201 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-21 15:18:08,202 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-21 15:18:08,213 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-21 15:18:08,213 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 15:18:08,215 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-21 15:18:08,217 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-21 15:18:08,219 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 15:18:08,223 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-21 15:18:08,225 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-21 15:18:08,225 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 15:18:08,227 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-21 15:18:08,229 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-21 15:18:08,230 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 15:18:08,232 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-21 15:18:08,241 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-21 15:18:08,242 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-21 15:18:08,243 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-21 15:18:08,320 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 15:18:08,320 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-21 15:18:08,321 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 15:18:08,323 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-21 15:18:08,330 INFO [config.XMLConfiguration] - Found configuration file in C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 15:18:08,362 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-21 15:18:08,530 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-21 15:18:08,530 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 15:18:08,533 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 15:18:08,613 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-21 15:18:08,614 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 15:18:08,615 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 15:18:08,616 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-21 15:18:08,699 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 15:18:08,712 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 15:18:08,716 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-21 15:18:08,716 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-21 15:18:08,718 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
2016-04-21 15:18:08,732 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-21 15:18:08,779 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-21 15:18:08,791 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-21 15:18:08,806 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-21 15:18:08,823 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-21 15:18:09,044 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-21 15:18:09,080 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-21 15:18:09,091 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-21 15:18:09,093 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-21 15:18:09,222 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-21 15:18:09,261 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-21 15:18:09,261 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-21 15:18:10,154 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-21 15:18:10,154 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-21 15:18:10,155 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-21 15:18:10,251 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 15:18:10,261 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-21 15:18:10,261 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-21 15:18:10,276 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-21 15:18:10,352 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-21 15:18:10,352 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-21 15:18:11,580 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-21 15:18:11,580 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-21 15:18:11,581 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-21 15:18:13,932 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-21 15:18:13,933 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-21 15:18:13,990 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-21 15:18:13,990 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-21 15:18:14,141 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-21 15:18:14,143 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-21 15:18:14,277 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-21 15:18:14,278 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-21 15:20:48,625 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 15:20:48,902 INFO [geoserver.wfs] - 
Request: getCapabilities
    acceptVersions:
        version[0] = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    service = wfs
2016-04-21 15:21:46,559 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: No service: ( ows )
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:573)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:252)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 15:26:08,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:08,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:08,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:08,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:08,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:08,505 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:08,937 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[82746.56005517376 : 86187.2000582538, 449237.44043797243 : 452678.0804400458]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005517376,449237.44043797243,86187.2000582538,452678.0804400458, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:08,946 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[86187.2000581864 : 89627.84006127735, 442356.1604337289 : 445796.800435828]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000581864,442356.1604337289,89627.84006127735,445796.800435828, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,012 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[86187.20005832137 : 89627.84006140514, 449237.44043803785 : 452678.0804401146]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005832137,449237.44043803785,89627.84006140514,452678.0804401146, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,094 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,111 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[86187.2000582538 : 89627.84006134112, 445796.8004358881 : 449237.44043797243]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000582538,445796.8004358881,89627.84006134112,449237.44043797243, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,107 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,217 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[79305.92005195246 : 82746.56005503201, 445796.8004357554 : 449237.44043783844]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005195246,445796.8004357554,82746.56005503201,449237.44043783844, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,100 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,233 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,223 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[79305.92005202684 : 82746.5600551027, 449237.4404379063 : 452678.0804399816]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005202684,449237.4404379063,82746.5600551027,452678.0804399816, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,305 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,324 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[89627.84006146945 : 93068.48006455736, 449237.44043809944 : 452678.0804401797]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006146945,449237.44043809944,93068.48006455736,452678.0804401797, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,337 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[79305.92005187838 : 82746.56005496153, 442356.16043360234 : 445796.80043568875]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005187838,442356.16043360234,82746.56005496153,445796.80043568875, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,329 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[82746.56005503201 : 86187.20005811921, 442356.1604336655 : 445796.8004357554]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.56005503201,442356.1604336655,86187.20005811921,445796.8004357554, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,329 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[82746.5600551027 : 86187.2000581864, 445796.800435828 : 449237.4404379063]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82746.5600551027,445796.800435828,86187.2000581864,449237.4404379063, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,327 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,324 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[89627.84006140514 : 93068.4800644965, 445796.8004359504 : 449237.44043803785]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006140514,445796.8004359504,93068.4800644965,449237.44043803785, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,455 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,449 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[89627.84006134112 : 93068.48006443612, 442356.16043379536 : 445796.8004358881]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=89627.84006134112,442356.16043379536,93068.48006443612,445796.8004358881, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,419 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,389 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,366 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,484 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[93068.48006461779 : 96509.12006770921, 449237.4404381565 : 452678.08044023917]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006461779,449237.4404381565,96509.12006770921,452678.08044023917, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,479 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,516 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:26:09,512 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[75865.28004888026 : 79305.92005195246, 449237.44043783844 : 452678.08043990296]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004888026,449237.44043783844,79305.92005195246,452678.08043990296, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,512 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[93068.48006455736 : 96509.12006765186, 445796.8004360066 : 449237.44043809944]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006455736,445796.8004360066,96509.12006765186,449237.44043809944, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,548 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[75865.28004880261 : 79305.92005187838, 445796.80043568875 : 449237.4404377656]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004880261,445796.80043568875,79305.92005187838,449237.4404377656, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,615 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[75865.28004872511 : 79305.92005180447, 442356.1604335325 : 445796.800435617]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=75865.28004872511,442356.1604335325,79305.92005180447,445796.800435617, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:26:09,606 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[93068.4800644965 : 96509.12006759479, 442356.160433846 : 445796.8004359504]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.4800644965,442356.160433846,96509.12006759479,445796.8004359504, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,529 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,529 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,534 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,534 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,534 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,538 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,554 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[58662.08003325312 : 65543.36003935692, 449237.4404375275 : 456118.72044161696]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=58662.08003325312,449237.4404375275,65543.36003935692,456118.72044161696, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,563 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[58662.08003344391 : 65543.36003953291, 456118.720441794 : 463000.0004458444]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=58662.08003344391,456118.720441794,65543.36003953291,463000.0004458444, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,563 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[79305.92005225086 : 86187.20005838889, 456118.7204422431 : 463000.00044633774]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005225086,456118.7204422431,86187.20005838889,463000.00044633774, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,555 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[65543.36003971 : 72424.64004581589, 456118.720441954 : 463000.00044602196]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003971,456118.720441954,72424.64004581589,463000.00044602196, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,555 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[86187.20005852488 : 93068.4800646787, 456118.7204423658 : 463000.00044647214]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005852488,456118.7204423658,93068.4800646787,463000.00044647214, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,554 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[72424.64004597903 : 79305.92005210122, 456118.7204421092 : 463000.00044618483]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004597903,456118.7204421092,79305.92005210122,463000.00044618483, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,691 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,664 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,640 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,615 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,590 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,725 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[72424.64004565334 : 79305.92005180447, 442356.1604335325 : 449237.440437689]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004565334,442356.1604335325,79305.92005180447,449237.440437689, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,741 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[93068.4800648008 : 99949.7600709697, 456118.7204424762 : 463000.0004466029]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.4800648008,456118.7204424762,99949.7600709697,463000.0004466029, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,737 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,727 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[58662.080033063554 : 65543.36003918186, 442356.1604332179 : 449237.44043735106]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=58662.080033063554,442356.1604332179,65543.36003918186,449237.44043735106, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,727 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[72424.64004581589 : 79305.92005195246, 449237.44043783844 : 456118.720441954]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=72424.64004581589,449237.44043783844,79305.92005195246,456118.720441954, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,727 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[79305.92005210122 : 86187.2000582538, 449237.44043797243 : 456118.7204421092]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005210122,449237.44043797243,86187.2000582538,456118.7204421092, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,854 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,828 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,796 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,796 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,890 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[65543.36003935692 : 72424.6400454919, 442356.16043338337 : 449237.4404375275]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003935692,442356.16043338337,72424.6400454919,449237.4404375275, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,917 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:38,910 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[86187.2000582538 : 93068.48006443612, 442356.16043379536 : 449237.44043797243]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.2000582538,442356.16043379536,93068.48006443612,449237.44043797243, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,908 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[65543.36003953291 : 72424.64004565334, 449237.440437689 : 456118.720441794]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=65543.36003953291,449237.440437689,72424.64004565334,456118.720441794, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,899 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[86187.20005838889 : 93068.48006455736, 449237.44043809944 : 456118.7204422431]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=86187.20005838889,449237.44043809944,93068.48006455736,456118.7204422431, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,974 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[93068.4800646787 : 99949.76007086193, 449237.44043820887 : 456118.7204423658]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.4800646787,449237.44043820887,99949.76007086193,456118.7204423658, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:38,970 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-21 15:28:39,066 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[93068.48006455736 : 99949.76007075422, 442356.1604339016 : 449237.44043809944]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=93068.48006455736,442356.1604339016,99949.76007075422,449237.44043809944, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:28:39,148 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 256
	Width = 256
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Env = {}
	Bbox = SRSEnvelope[79305.92005195246 : 86187.20005811921, 442356.1604336655 : 449237.44043783844]
	SRS = EPSG:28992
	Tiled = false
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Styles = [StyleImpl[ name=polygon]]
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Angle = 0.0
	ValidateSchema = false
	Interpolations = []
	Sld = null
	RemoteOwsURL = null
	Elevation = []
	StartIndex = null
	RemoteOwsType = null
	FormatOptions = {}
	CQLFilter = null
	FeatureId = null
	ViewParams = null
	FeatureVersion = null
	Palette = null
	SldVersion = null
	StyleBody = null
	Exceptions = SE_XML
	StyleVersion = null
	ScaleMethod = null
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79305.92005195246,442356.1604336655,86187.20005811921,449237.44043783844, VERSION=1.1.1, STYLES=, SERVICE=WMS, POINTERCURSOR=true, WIDTH=256, HEIGHT=256, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-21 15:32:31,098 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-04-21 15:32:46,833 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-21 15:32:46,835 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-21 15:33:04,107 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 15:33:04,235 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}parcels
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2016-04-21 15:33:04,240 INFO [wfs.json] - about to encode JSON
2016-04-21 18:29:23,356 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 18:29:23,363 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}parcels
    maxFeatures = 50
    outputFormat = application%2Fjsonundefined
    resultType = results
2016-04-21 18:29:23,368 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Failed to find response for output format application%2Fjsonundefined
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:905)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:279)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 18:38:55,199 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 18:38:55,614 INFO [org.geoserver] - Loaded style 'burg'
2016-04-21 18:38:55,615 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-21 18:38:55,616 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-21 18:38:55,618 INFO [org.geoserver] - Loaded style 'dem'
2016-04-21 18:38:55,619 INFO [org.geoserver] - Loaded style 'generic'
2016-04-21 18:38:55,620 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-21 18:38:55,620 INFO [org.geoserver] - Loaded style 'grass'
2016-04-21 18:38:55,621 INFO [org.geoserver] - Loaded style 'green'
2016-04-21 18:38:55,622 INFO [org.geoserver] - Loaded style 'line'
2016-04-21 18:38:55,622 INFO [org.geoserver] - Loaded style 'poi'
2016-04-21 18:38:55,623 INFO [org.geoserver] - Loaded style 'point'
2016-04-21 18:38:55,623 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-21 18:38:55,624 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-21 18:38:55,625 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-21 18:38:55,626 INFO [org.geoserver] - Loaded style 'population'
2016-04-21 18:38:55,627 INFO [org.geoserver] - Loaded style 'rain'
2016-04-21 18:38:55,628 INFO [org.geoserver] - Loaded style 'raster'
2016-04-21 18:38:55,628 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-21 18:38:55,629 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-21 18:38:55,630 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-21 18:38:55,630 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-21 18:38:55,631 INFO [org.geoserver] - Loaded default workspace geoweb
2016-04-21 18:38:55,636 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-21 18:38:55,638 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-04-21 18:38:55,639 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-21 18:38:55,641 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-21 18:38:55,642 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-21 18:38:55,643 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-21 18:38:55,645 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-21 18:38:55,647 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-21 18:38:56,056 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-04-21 18:38:56,059 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-04-21 18:38:56,547 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-04-21 18:38:56,553 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-04-21 18:38:56,569 INFO [org.geoserver] - Loaded layer 'parcels'
2016-04-21 18:38:56,576 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-21 18:38:56,579 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-21 18:38:57,242 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-21 18:38:57,249 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-21 18:38:57,362 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-21 18:38:57,366 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-21 18:38:57,368 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-21 18:38:57,561 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-21 18:38:57,561 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-21 18:38:57,563 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-21 18:38:57,568 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-21 18:38:57,569 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-21 18:38:57,572 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-21 18:38:57,573 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-21 18:38:58,287 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-21 18:38:58,288 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-21 18:38:58,324 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-21 18:38:58,335 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-21 18:38:58,335 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-21 18:38:58,338 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-21 18:38:58,339 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-21 18:38:58,358 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-21 18:38:58,364 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-21 18:38:58,365 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-21 18:38:58,402 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-21 18:38:58,403 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:38:58,411 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-21 18:38:58,415 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-21 18:38:58,416 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:38:58,418 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-21 18:38:58,421 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-21 18:38:58,422 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:38:58,424 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-21 18:38:58,426 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-21 18:38:58,427 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:38:58,429 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-21 18:38:58,433 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-21 18:38:58,433 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:38:58,435 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-21 18:38:58,439 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-21 18:38:58,440 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-21 18:38:58,443 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-21 18:38:58,444 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-21 18:38:58,670 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-21 18:38:58,675 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-21 18:38:58,676 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-21 18:38:58,686 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-21 18:38:58,687 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:38:58,688 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-21 18:38:58,690 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-21 18:38:58,690 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:38:58,692 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-21 18:38:58,693 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-21 18:38:58,694 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:38:58,695 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-21 18:38:58,697 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-21 18:38:58,698 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:38:58,700 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-21 18:38:58,705 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-21 18:38:58,705 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-21 18:38:58,710 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-21 18:38:58,712 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-21 18:38:58,718 INFO [org.geoserver] - Loaded layer 'states'
2016-04-21 18:38:58,723 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-21 18:38:58,723 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-21 18:38:58,734 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-21 18:38:58,734 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:38:58,736 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-21 18:38:58,738 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-21 18:38:58,738 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:38:58,740 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-21 18:38:58,741 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-21 18:38:58,741 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:38:58,743 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-21 18:38:58,744 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-21 18:38:58,745 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:38:58,747 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-21 18:38:58,756 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-21 18:38:58,757 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-21 18:38:58,758 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-21 18:38:58,839 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 18:38:58,840 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-21 18:38:58,840 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 18:38:58,841 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-21 18:38:58,850 INFO [config.XMLConfiguration] - Found configuration file in C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 18:38:58,884 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-21 18:38:59,072 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-21 18:38:59,073 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 18:38:59,075 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 18:38:59,162 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-21 18:38:59,163 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 18:38:59,164 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 18:38:59,164 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-21 18:38:59,254 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 18:38:59,262 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 18:38:59,265 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-21 18:38:59,266 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-21 18:38:59,267 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
2016-04-21 18:38:59,282 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-21 18:38:59,341 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-21 18:38:59,354 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-21 18:38:59,371 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-21 18:38:59,389 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-21 18:38:59,647 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-21 18:38:59,683 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-21 18:38:59,697 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-21 18:38:59,699 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-21 18:38:59,838 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-21 18:38:59,877 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-21 18:38:59,877 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-21 18:39:00,849 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-21 18:39:00,849 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-21 18:39:00,850 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-21 18:39:00,956 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 18:39:00,968 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-21 18:39:00,968 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-21 18:39:00,974 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-21 18:39:01,051 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-21 18:39:01,051 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-21 18:39:02,361 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-21 18:39:02,361 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-21 18:39:02,362 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-21 18:39:04,855 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-21 18:39:04,856 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-21 18:39:04,919 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-21 18:39:04,919 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-21 18:39:05,084 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-21 18:39:05,086 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-21 18:39:05,227 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-21 18:39:05,227 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-21 18:43:45,158 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 18:43:45,640 INFO [org.geoserver] - Loaded style 'burg'
2016-04-21 18:43:45,641 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-21 18:43:45,642 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-21 18:43:45,642 INFO [org.geoserver] - Loaded style 'dem'
2016-04-21 18:43:45,643 INFO [org.geoserver] - Loaded style 'generic'
2016-04-21 18:43:45,644 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-21 18:43:45,645 INFO [org.geoserver] - Loaded style 'grass'
2016-04-21 18:43:45,645 INFO [org.geoserver] - Loaded style 'green'
2016-04-21 18:43:45,646 INFO [org.geoserver] - Loaded style 'line'
2016-04-21 18:43:45,646 INFO [org.geoserver] - Loaded style 'poi'
2016-04-21 18:43:45,647 INFO [org.geoserver] - Loaded style 'point'
2016-04-21 18:43:45,648 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-21 18:43:45,648 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-21 18:43:45,649 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-21 18:43:45,650 INFO [org.geoserver] - Loaded style 'population'
2016-04-21 18:43:45,652 INFO [org.geoserver] - Loaded style 'rain'
2016-04-21 18:43:45,653 INFO [org.geoserver] - Loaded style 'raster'
2016-04-21 18:43:45,655 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-21 18:43:45,655 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-21 18:43:45,656 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-21 18:43:45,657 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-21 18:43:45,658 INFO [org.geoserver] - Loaded default workspace geoweb
2016-04-21 18:43:45,664 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-21 18:43:45,666 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-04-21 18:43:45,668 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-21 18:43:45,670 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-21 18:43:45,671 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-21 18:43:45,673 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-21 18:43:45,674 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-21 18:43:45,676 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-21 18:43:46,184 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-04-21 18:43:46,187 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-04-21 18:43:46,681 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-04-21 18:43:46,688 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-04-21 18:43:46,704 INFO [org.geoserver] - Loaded layer 'parcels'
2016-04-21 18:43:46,713 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-21 18:43:46,722 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-21 18:43:47,434 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-21 18:43:47,443 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-21 18:43:47,566 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-21 18:43:47,577 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-21 18:43:47,578 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-21 18:43:47,770 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-21 18:43:47,771 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-21 18:43:47,772 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-21 18:43:47,776 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-21 18:43:47,777 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-21 18:43:47,780 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-21 18:43:47,781 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-21 18:43:48,578 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-21 18:43:48,578 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-21 18:43:48,620 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-21 18:43:48,629 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-21 18:43:48,630 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-21 18:43:48,632 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-21 18:43:48,633 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-21 18:43:48,647 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-21 18:43:48,655 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-21 18:43:48,656 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-21 18:43:48,699 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-21 18:43:48,700 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:43:48,708 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-21 18:43:48,710 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-21 18:43:48,711 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:43:48,713 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-21 18:43:48,716 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-21 18:43:48,717 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:43:48,720 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-21 18:43:48,723 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-21 18:43:48,723 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:43:48,725 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-21 18:43:48,728 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-21 18:43:48,728 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-21 18:43:48,730 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-21 18:43:48,736 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-21 18:43:48,736 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-21 18:43:48,739 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-21 18:43:48,740 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-21 18:43:49,027 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-21 18:43:49,033 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-21 18:43:49,033 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-21 18:43:49,044 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-21 18:43:49,044 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:43:49,044 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-21 18:43:49,047 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-21 18:43:49,047 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:43:49,049 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-21 18:43:49,050 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-21 18:43:49,051 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:43:49,053 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-21 18:43:49,055 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-21 18:43:49,055 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-21 18:43:49,057 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-21 18:43:49,062 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-21 18:43:49,062 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-21 18:43:49,067 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-21 18:43:49,070 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-21 18:43:49,076 INFO [org.geoserver] - Loaded layer 'states'
2016-04-21 18:43:49,084 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-21 18:43:49,085 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-21 18:43:49,096 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-21 18:43:49,097 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:43:49,098 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-21 18:43:49,100 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-21 18:43:49,100 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:43:49,102 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-21 18:43:49,105 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-21 18:43:49,105 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:43:49,107 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-21 18:43:49,109 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-21 18:43:49,109 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-21 18:43:49,111 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-21 18:43:49,120 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-21 18:43:49,121 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-21 18:43:49,122 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-21 18:43:49,196 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 18:43:49,196 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-21 18:43:49,197 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-21 18:43:49,198 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-21 18:43:49,210 INFO [config.XMLConfiguration] - Found configuration file in C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 18:43:49,248 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-21 18:43:49,433 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-21 18:43:49,433 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 18:43:49,435 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-21 18:43:49,522 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-21 18:43:49,524 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 18:43:49,524 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-21 18:43:49,526 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-21 18:43:49,618 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 18:43:49,626 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-21 18:43:49,629 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-21 18:43:49,630 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-21 18:43:49,631 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
2016-04-21 18:43:49,646 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-21 18:43:49,699 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-21 18:43:49,716 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-21 18:43:49,732 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-21 18:43:49,753 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-21 18:43:49,992 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-21 18:43:50,028 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-21 18:43:50,047 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-21 18:43:50,049 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-21 18:43:50,181 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-21 18:43:50,223 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-21 18:43:50,223 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-21 18:43:51,222 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-21 18:43:51,222 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-21 18:43:51,223 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-21 18:43:51,332 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-21 18:43:51,344 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-21 18:43:51,345 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-21 18:43:51,352 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-21 18:43:51,430 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-21 18:43:51,430 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-21 18:43:52,816 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-21 18:43:52,820 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-21 18:43:52,821 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-21 18:43:55,543 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-21 18:43:55,543 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-21 18:43:55,610 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-21 18:43:55,610 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-21 18:43:55,767 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-21 18:43:55,770 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-21 18:43:55,905 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-21 18:43:55,905 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-21 18:50:59,242 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-04-21 18:51:54,372 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 18:51:54,689 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}parcels
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2016-04-21 18:51:54,723 INFO [wfs.json] - about to encode JSON
2016-04-21 18:54:34,970 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 18:54:35,142 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 18:54:35,174 INFO [wfs.json] - about to encode JSON
2016-04-21 21:24:17,721 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:24:17,908 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property:  oarea is not available for geoweb:parcels.  The possible propertyName values are: [object_id, slc, classif, z, accu_cd, oarea, object_dt, tmin, tmax, sel_cd, source, quality, vis_cd, akr_area, municip, osection, sheet, parcel, pp_i_ltr, pp_i_nr, l_num, akrobjnum, geom]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy60.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 21:24:59,937 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:24:59,960 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:24:59,962 INFO [wfs.json] - about to encode JSON
2016-04-21 21:26:13,730 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:26:13,735 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:26:13,737 INFO [wfs.json] - about to encode JSON
2016-04-21 21:28:02,239 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:28:02,242 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:28:02,247 INFO [wfs.json] - about to encode JSON
2016-04-21 21:31:02,936 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:31:02,941 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcels:parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:31:02,943 INFO [wfs.json] - about to encode JSON
2016-04-21 21:31:31,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:31:31,010 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geoweb:parcels:parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:31:31,013 INFO [wfs.json] - about to encode JSON
2016-04-21 21:31:49,337 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:31:49,342 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcels:parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:31:49,345 INFO [wfs.json] - about to encode JSON
2016-04-21 21:32:02,531 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:32:02,539 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcels:sheet
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:32:02,541 INFO [wfs.json] - about to encode JSON
2016-04-21 21:32:19,198 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:32:19,202 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcels:sheet
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:32:19,207 INFO [wfs.json] - about to encode JSON
2016-04-21 21:34:38,668 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:34:38,671 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:34:38,673 INFO [wfs.json] - about to encode JSON
2016-04-21 21:34:52,993 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:34:52,996 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:34:52,998 INFO [wfs.json] - about to encode JSON
2016-04-21 21:37:11,229 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:37:11,238 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:37:11,241 INFO [wfs.json] - about to encode JSON
2016-04-21 21:37:46,653 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:37:46,655 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Feature type :(parcel) unknown
	at org.geoserver.wfs.kvp.GetFeatureKvpRequestReader.checkTypeName(GetFeatureKvpRequestReader.java:390)
	at org.geoserver.wfs.kvp.GetFeatureKvpRequestReader.read(GetFeatureKvpRequestReader.java:147)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1493)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:681)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 21:38:06,202 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:38:06,208 ERROR [geoserver.ows] - 
java.lang.NullPointerException
	at org.geoserver.wfs.WFSWorkspaceQualifier.qualifyTypeNames(WFSWorkspaceQualifier.java:192)
	at org.geoserver.wfs.WFSWorkspaceQualifier.qualifyRequest(WFSWorkspaceQualifier.java:135)
	at org.geoserver.ows.WorkspaceQualifyingCallback.operationDispatched(WorkspaceQualifyingCallback.java:51)
	at org.geoserver.ows.Dispatcher.fireOperationDispatchedCallback(Dispatcher.java:800)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:795)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 21:38:39,870 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:38:39,875 ERROR [geoserver.ows] - 
java.lang.NullPointerException
	at org.geoserver.wfs.WFSWorkspaceQualifier.qualifyTypeNames(WFSWorkspaceQualifier.java:192)
	at org.geoserver.wfs.WFSWorkspaceQualifier.qualifyRequest(WFSWorkspaceQualifier.java:135)
	at org.geoserver.ows.WorkspaceQualifyingCallback.operationDispatched(WorkspaceQualifyingCallback.java:51)
	at org.geoserver.ows.Dispatcher.fireOperationDispatchedCallback(Dispatcher.java:800)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:795)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 21:38:53,302 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:38:53,306 ERROR [geoserver.ows] - 
java.lang.NullPointerException
	at org.geoserver.wfs.WFSWorkspaceQualifier.qualifyTypeNames(WFSWorkspaceQualifier.java:192)
	at org.geoserver.wfs.WFSWorkspaceQualifier.qualifyRequest(WFSWorkspaceQualifier.java:135)
	at org.geoserver.ows.WorkspaceQualifyingCallback.operationDispatched(WorkspaceQualifyingCallback.java:51)
	at org.geoserver.ows.Dispatcher.fireOperationDispatchedCallback(Dispatcher.java:800)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:795)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-04-21 21:40:03,264 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:40:03,302 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcelsquery[0]:
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:40:03,305 INFO [wfs.json] - about to encode JSON
2016-04-21 21:40:54,038 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:40:54,042 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:40:54,044 INFO [wfs.json] - about to encode JSON
2016-04-21 21:41:37,041 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:41:37,043 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:41:37,048 INFO [wfs.json] - about to encode JSON
2016-04-21 21:48:24,012 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:48:24,014 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:48:24,018 INFO [wfs.json] - about to encode JSON
2016-04-21 21:49:44,671 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:49:44,673 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = sheet
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:49:44,675 INFO [wfs.json] - about to encode JSON
2016-04-21 21:50:10,315 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:50:10,319 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = sheet
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:50:10,323 INFO [wfs.json] - about to encode JSON
2016-04-21 21:52:49,445 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:52:49,448 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = parcel
        srsName = EPSG:4326
        typeName[0] = {tudelft.nl/geoweb}parcels
    outputFormat = application/json
    resultType = results
2016-04-21 21:52:49,451 INFO [wfs.json] - about to encode JSON
2016-04-21 21:55:03,289 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:55:03,459 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1a77c84 (handle: null) (abstractProjectionClause: [parcel], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = parcel
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = parcel
2016-04-21 21:55:03,462 INFO [wfs.json] - about to encode JSON
2016-04-21 21:55:18,424 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:55:18,433 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@ceca (handle: null) (abstractProjectionClause: [parcel], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = parcel
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = parcel
2016-04-21 21:55:18,436 INFO [wfs.json] - about to encode JSON
2016-04-21 21:55:52,007 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:55:52,018 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@7832cb (handle: null) (abstractProjectionClause: [parcel], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = parcel
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = parcel
2016-04-21 21:55:52,021 INFO [wfs.json] - about to encode JSON
2016-04-21 21:56:06,671 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:56:06,681 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@aa4ac1 (handle: null) (abstractProjectionClause: [parcel], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = parcel
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = parcel
2016-04-21 21:56:06,684 INFO [wfs.json] - about to encode JSON
2016-04-21 21:57:59,855 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 21:57:59,865 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@9e31db (handle: null) (abstractProjectionClause: [oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = oarea
2016-04-21 21:57:59,868 INFO [wfs.json] - about to encode JSON
2016-04-21 22:01:10,043 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:01:10,053 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@12b161e (handle: null) (abstractProjectionClause: [oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = oarea
2016-04-21 22:01:10,056 INFO [wfs.json] - about to encode JSON
2016-04-21 22:12:27,178 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:12:27,192 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1c1ec80 (handle: null) (abstractProjectionClause: [oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = oarea
2016-04-21 22:12:27,194 INFO [wfs.json] - about to encode JSON
2016-04-21 22:13:31,406 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:13:31,416 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1152ce4 (handle: null) (abstractProjectionClause: [oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = oarea
2016-04-21 22:13:31,421 INFO [wfs.json] - about to encode JSON
2016-04-21 22:16:24,072 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:16:24,080 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@26933e (handle: null) (abstractProjectionClause: [oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = oarea
2016-04-21 22:16:24,082 INFO [wfs.json] - about to encode JSON
2016-04-21 22:17:36,275 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:17:36,283 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@101558e (handle: null) (abstractProjectionClause: [oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = oarea
2016-04-21 22:17:36,285 INFO [wfs.json] - about to encode JSON
2016-04-21 22:19:00,482 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:19:00,493 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@91bc13 (handle: null) (abstractProjectionClause: [quality], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = quality
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = quality
2016-04-21 22:19:00,496 INFO [wfs.json] - about to encode JSON
2016-04-21 22:19:16,730 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:19:16,743 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@d1554f (handle: null) (abstractProjectionClause: null, abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
2016-04-21 22:19:16,744 INFO [wfs.json] - about to encode JSON
2016-04-21 22:19:48,461 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:19:48,474 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1a26956 (handle: null) (abstractProjectionClause: [z], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = z
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = z
2016-04-21 22:19:48,477 INFO [wfs.json] - about to encode JSON
2016-04-21 22:20:04,078 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:20:04,088 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1b457f3 (handle: null) (abstractProjectionClause: [z], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = z
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = z
2016-04-21 22:20:04,089 INFO [wfs.json] - about to encode JSON
2016-04-21 22:26:39,723 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:26:39,731 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@6edf70 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
2016-04-21 22:26:39,733 INFO [wfs.json] - about to encode JSON
2016-04-21 22:48:38,534 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:48:38,553 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1f7631e (handle: null) (abstractProjectionClause: [geom, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = oarea
2016-04-21 22:48:38,555 INFO [wfs.json] - about to encode JSON
2016-04-21 22:52:26,229 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:52:26,237 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 400
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@13941e (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-21 22:52:26,239 INFO [wfs.json] - about to encode JSON
2016-04-21 22:54:20,203 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:54:20,217 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 2000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@19af35 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-21 22:54:20,220 INFO [wfs.json] - about to encode JSON
2016-04-21 22:54:35,341 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:54:35,346 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 0
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@b15135 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-21 22:54:35,347 INFO [wfs.json] - about to encode JSON
2016-04-21 22:54:55,646 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:54:55,654 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@19afe33 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-21 22:54:55,657 INFO [wfs.json] - about to encode JSON
2016-04-21 22:55:31,772 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-21 22:55:31,784 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@1d4d67d (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-21 22:55:31,789 INFO [wfs.json] - about to encode JSON
2016-04-24 12:42:46,057 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-24 12:42:46,479 INFO [org.geoserver] - Loaded style 'burg'
2016-04-24 12:42:46,480 INFO [org.geoserver] - Loaded style 'capitals'
2016-04-24 12:42:46,481 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-04-24 12:42:46,482 INFO [org.geoserver] - Loaded style 'dem'
2016-04-24 12:42:46,483 INFO [org.geoserver] - Loaded style 'generic'
2016-04-24 12:42:46,484 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-04-24 12:42:46,485 INFO [org.geoserver] - Loaded style 'grass'
2016-04-24 12:42:46,486 INFO [org.geoserver] - Loaded style 'green'
2016-04-24 12:42:46,496 INFO [org.geoserver] - Loaded style 'line'
2016-04-24 12:42:46,498 INFO [org.geoserver] - Loaded style 'poi'
2016-04-24 12:42:46,499 INFO [org.geoserver] - Loaded style 'point'
2016-04-24 12:42:46,500 INFO [org.geoserver] - Loaded style 'polygon'
2016-04-24 12:42:46,501 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-04-24 12:42:46,502 INFO [org.geoserver] - Loaded style 'pophatch'
2016-04-24 12:42:46,503 INFO [org.geoserver] - Loaded style 'population'
2016-04-24 12:42:46,504 INFO [org.geoserver] - Loaded style 'rain'
2016-04-24 12:42:46,505 INFO [org.geoserver] - Loaded style 'raster'
2016-04-24 12:42:46,506 INFO [org.geoserver] - Loaded style 'restricted'
2016-04-24 12:42:46,507 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-04-24 12:42:46,508 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-04-24 12:42:46,509 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-04-24 12:42:46,511 INFO [org.geoserver] - Loaded default workspace geoweb
2016-04-24 12:42:46,516 INFO [org.geoserver] - Loaded workspace 'cite'
2016-04-24 12:42:46,519 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-04-24 12:42:46,527 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-04-24 12:42:46,529 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-04-24 12:42:46,531 INFO [org.geoserver] - Loaded workspace 'sde'
2016-04-24 12:42:46,532 INFO [org.geoserver] - Loaded workspace 'sf'
2016-04-24 12:42:46,534 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-04-24 12:42:46,536 INFO [org.geoserver] - Loaded workspace 'topp'
2016-04-24 12:42:46,954 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-04-24 12:42:46,957 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-04-24 12:42:47,544 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-04-24 12:42:47,550 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-04-24 12:42:47,565 INFO [org.geoserver] - Loaded layer 'parcels'
2016-04-24 12:42:47,579 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-04-24 12:42:47,582 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-04-24 12:42:48,276 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-04-24 12:42:48,283 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-04-24 12:42:48,397 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-04-24 12:42:48,402 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-04-24 12:42:48,404 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-04-24 12:42:48,628 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-04-24 12:42:48,628 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-04-24 12:42:48,630 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-04-24 12:42:48,634 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-04-24 12:42:48,635 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-04-24 12:42:48,644 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-04-24 12:42:48,645 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-04-24 12:42:49,377 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-04-24 12:42:49,378 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-04-24 12:42:49,418 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-04-24 12:42:49,427 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-04-24 12:42:49,427 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-04-24 12:42:49,439 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-04-24 12:42:49,440 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-04-24 12:42:49,460 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-04-24 12:42:49,468 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-04-24 12:42:49,468 INFO [org.geoserver] - Loaded data store 'sf'
2016-04-24 12:42:49,507 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-04-24 12:42:49,507 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-24 12:42:49,515 INFO [org.geoserver] - Loaded layer 'archsites'
2016-04-24 12:42:49,518 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-04-24 12:42:49,519 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-24 12:42:49,531 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-04-24 12:42:49,534 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-04-24 12:42:49,535 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-24 12:42:49,537 INFO [org.geoserver] - Loaded layer 'restricted'
2016-04-24 12:42:49,540 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-04-24 12:42:49,540 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-24 12:42:49,542 INFO [org.geoserver] - Loaded layer 'roads'
2016-04-24 12:42:49,545 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-04-24 12:42:49,546 INFO [org.geoserver] - Loaded feature type 'sf'
2016-04-24 12:42:49,548 INFO [org.geoserver] - Loaded layer 'streams'
2016-04-24 12:42:49,552 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-04-24 12:42:49,553 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-04-24 12:42:49,561 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-04-24 12:42:49,562 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-04-24 12:42:49,786 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-04-24 12:42:49,793 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-04-24 12:42:49,793 INFO [org.geoserver] - Loaded data store 'nyc'
2016-04-24 12:42:49,807 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-04-24 12:42:49,808 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-24 12:42:49,810 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-04-24 12:42:49,812 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-04-24 12:42:49,812 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-24 12:42:49,814 INFO [org.geoserver] - Loaded layer 'poi'
2016-04-24 12:42:49,816 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-04-24 12:42:49,816 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-24 12:42:49,819 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-04-24 12:42:49,820 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-04-24 12:42:49,821 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-04-24 12:42:49,823 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-04-24 12:42:49,829 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-04-24 12:42:49,830 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-04-24 12:42:49,840 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-04-24 12:42:49,842 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-04-24 12:42:49,849 INFO [org.geoserver] - Loaded layer 'states'
2016-04-24 12:42:49,854 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-04-24 12:42:49,855 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-04-24 12:42:49,870 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-04-24 12:42:49,871 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-24 12:42:49,873 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-04-24 12:42:49,875 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-04-24 12:42:49,876 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-24 12:42:49,878 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-04-24 12:42:49,879 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-04-24 12:42:49,880 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-24 12:42:49,882 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-04-24 12:42:49,884 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-04-24 12:42:49,884 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-04-24 12:42:49,886 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-04-24 12:42:49,896 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-04-24 12:42:49,898 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-04-24 12:42:49,900 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-04-24 12:42:49,977 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-24 12:42:49,979 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-04-24 12:42:49,981 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-04-24 12:42:49,982 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-04-24 12:42:49,991 WARN [config.XMLConfiguration] - Found no configuration file in config directory, will create one at 'C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache.xml' from template jar:file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/WEB-INF/lib/gwc-core-1.8.2.jar!/geowebcache_empty.xml
2016-04-24 12:42:50,033 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-04-24 12:42:50,202 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-04-24 12:42:50,203 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-24 12:42:50,206 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-04-24 12:42:50,300 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-04-24 12:42:50,301 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-24 12:42:50,302 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-04-24 12:42:50,304 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-04-24 12:42:50,388 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-24 12:42:50,396 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-04-24 12:42:50,400 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-04-24 12:42:50,401 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-04-24 12:42:50,402 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
2016-04-24 12:42:50,418 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-04-24 12:42:50,471 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-04-24 12:42:50,483 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-04-24 12:42:50,498 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-04-24 12:42:50,515 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-04-24 12:42:50,901 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-04-24 12:42:50,936 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-04-24 12:42:50,948 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-04-24 12:42:50,950 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-04-24 12:42:51,077 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-04-24 12:42:51,116 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-04-24 12:42:51,116 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-04-24 12:42:52,016 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-04-24 12:42:52,017 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-04-24 12:42:52,018 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-04-24 12:42:52,126 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-04-24 12:42:52,137 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-04-24 12:42:52,138 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-04-24 12:42:52,145 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-04-24 12:42:52,227 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-04-24 12:42:52,227 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-04-24 12:42:53,517 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-04-24 12:42:53,517 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-04-24 12:42:53,518 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-04-24 12:42:55,796 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-04-24 12:42:55,796 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-04-24 12:42:55,854 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-04-24 12:42:55,855 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-04-24 12:42:56,046 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-04-24 12:42:56,048 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-04-24 12:42:56,188 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-04-24 12:42:56,189 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-04-24 12:43:13,522 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-04-24 12:43:33,603 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 12:43:34,283 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@3bc8c2 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-24 12:43:34,333 INFO [wfs.json] - about to encode JSON
2016-04-24 13:29:23,326 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-24 13:29:23,329 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-04-24 13:29:32,205 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:29:33,093 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/jpeg
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-124.73142200000001 : -66.969849, 24.955967 : 49.371735]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=image/jpeg, BBOX=-124.73142200000001,24.955967,-66.969849,49.371735, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:29:40,441 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:29:40,773 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = application/openlayers
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-124.73142200000001 : -66.969849, 24.955967 : 49.371735]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:4326, FORMAT=application/openlayers, BBOX=-124.73142200000001,24.955967,-66.969849,49.371735, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:29:40,985 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:29:41,027 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-129.638671875 : -62.138671875, 22.67578125 : 51.6796875]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-129.638671875,22.67578125,-62.138671875,51.6796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:29:47,310 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:29:47,348 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-119.7509765625 : -110.8740234375, 38.2763671875 : 47.1533203125]
 layers: topp:states
 styles: population
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=topp:states, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=-119.7509765625,38.2763671875,-110.8740234375,47.1533203125, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=topp:states, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 13:30:11,756 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:30:11,794 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/png
	Buffer = 0
	Filter = [[ PERSONS > 1000000 ]]
	Filters = [[ PERSONS > 1000000 ]]
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-129.638671875 : -62.138671875, 22.67578125 : 51.6796875]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = [[ PERSONS > 1000000 ]]
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-129.638671875,22.67578125,-62.138671875,51.6796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, CQL_FILTER=PERSONS > 1000000, LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:30:27,484 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:30:27,499 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/png
	Buffer = 0
	Filter = [[ PERSONS > 10000000 ]]
	Filters = [[ PERSONS > 10000000 ]]
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-129.638671875 : -62.138671875, 22.67578125 : 51.6796875]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = [[ PERSONS > 10000000 ]]
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-129.638671875,22.67578125,-62.138671875,51.6796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, CQL_FILTER=PERSONS > 10000000, LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:34:49,314 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:34:49,326 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-100.8544921875 : -91.9775390625, 31.0693359375 : 39.9462890625]
 layers: topp:states
 styles: population
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=topp:states, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=-100.8544921875,31.0693359375,-91.9775390625,39.9462890625, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=topp:states, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 13:35:04,720 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:35:04,743 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "IN ( STATES" at line 1, column 1.
Was expecting one of:
    "not" ...
    "include" ...
    "exclude" ...
    "(" ...
    "[" ...
    "id" ...
    "in" ...
    "in" "(" <STRING_LITERAL> ...
    "in" "(" <INTEGER_LITERAL> ...
    <IDENTIFIER> ...
    <DATE_TIME> ...
    <DATE> ...
    "-" ...
    <INTEGER_LITERAL> ...
    <FLOATING_LITERAL> ...
    <STRING_LITERAL> ...
    "true" ...
    "false" ...
    "point" ...
    "linestring" ...
    "polygon" ...
    "multipoint" ...
    "multilinestring" ...
    "multipolygon" ...
    "geometrycollection" ...
    "envelope" ...
     Parsing : IN (STATES.12).
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 13:35:05,591 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:35:05,593 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "IN ( STATES" at line 1, column 1.
Was expecting one of:
    "not" ...
    "include" ...
    "exclude" ...
    "(" ...
    "[" ...
    "id" ...
    "in" ...
    "in" "(" <STRING_LITERAL> ...
    "in" "(" <INTEGER_LITERAL> ...
    <IDENTIFIER> ...
    <DATE_TIME> ...
    <DATE> ...
    "-" ...
    <INTEGER_LITERAL> ...
    <FLOATING_LITERAL> ...
    <STRING_LITERAL> ...
    "true" ...
    "false" ...
    "point" ...
    "linestring" ...
    "polygon" ...
    "multipoint" ...
    "multilinestring" ...
    "multipolygon" ...
    "geometrycollection" ...
    "envelope" ...
     Parsing : IN (STATES.12).
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 13:35:35,538 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:35:35,551 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/png
	Buffer = 0
	Filter = [[ states.12 ]]
	Filters = [[ states.12 ]]
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-129.638671875 : -62.138671875, 22.67578125 : 51.6796875]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = [[ states.12 ]]
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-129.638671875,22.67578125,-62.138671875,51.6796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, CQL_FILTER=in ('states.12'), LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:35:43,410 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:35:43,412 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "in ( \'states.12\' , states" at line 1, column 1.
Was expecting one of:
    "not" ...
    "include" ...
    "exclude" ...
    "(" ...
    "[" ...
    "id" ...
    "in" ...
    "in" "(" <STRING_LITERAL> "," <STRING_LITERAL> ...
    "in" "(" <STRING_LITERAL> "," <INTEGER_LITERAL> ...
    "in" "(" <STRING_LITERAL> ")" ...
    <IDENTIFIER> ...
    <DATE_TIME> ...
    <DATE> ...
    "-" ...
    <INTEGER_LITERAL> ...
    <FLOATING_LITERAL> ...
    <STRING_LITERAL> ...
    "true" ...
    "false" ...
    "point" ...
    "linestring" ...
    "polygon" ...
    "multipoint" ...
    "multilinestring" ...
    "multipolygon" ...
    "geometrycollection" ...
    "envelope" ...
     Parsing : in ('states.12', states.1).
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 13:35:47,051 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:35:47,053 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "in ( \'states.12\' , states" at line 1, column 1.
Was expecting one of:
    "not" ...
    "include" ...
    "exclude" ...
    "(" ...
    "[" ...
    "id" ...
    "in" ...
    "in" "(" <STRING_LITERAL> "," <STRING_LITERAL> ...
    "in" "(" <STRING_LITERAL> "," <INTEGER_LITERAL> ...
    "in" "(" <STRING_LITERAL> ")" ...
    <IDENTIFIER> ...
    <DATE_TIME> ...
    <DATE> ...
    "-" ...
    <INTEGER_LITERAL> ...
    <FLOATING_LITERAL> ...
    <STRING_LITERAL> ...
    "true" ...
    "false" ...
    "point" ...
    "linestring" ...
    "polygon" ...
    "multipoint" ...
    "multilinestring" ...
    "multipolygon" ...
    "geometrycollection" ...
    "envelope" ...
     Parsing : in ('states.12', states.2).
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 13:35:58,422 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:35:58,436 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/png
	Buffer = 0
	Filter = [[ states.12, states.2 ]]
	Filters = [[ states.12, states.2 ]]
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-129.638671875 : -62.138671875, 22.67578125 : 51.6796875]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = [[ states.12, states.2 ]]
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-129.638671875,22.67578125,-62.138671875,51.6796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, CQL_FILTER=in ('states.12', 'states.2'), LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:36:00,158 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:36:00,171 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 330
	Width = 768
	Format = image/png
	Buffer = 0
	Filter = [[ states.12, states.2 ]]
	Filters = [[ states.12, states.2 ]]
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	MaxFeatures = null
	Styles = [StyleImpl[ name=population]]
	SRS = EPSG:4326
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[-103.4033203125 : -69.6533203125, 31.1572265625 : 45.6591796875]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = [[ states.12, states.2 ]]
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:4326, BBOX=-103.4033203125,31.1572265625,-69.6533203125,45.6591796875, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=768, HEIGHT=330, TRANSPARENT=true, CQL_FILTER=in ('states.12', 'states.2'), LAYERS=topp:states}
	RequestCharset = UTF-8
2016-04-24 13:36:01,127 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 13:36:01,138 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[-79.21142578125 : -74.77294921875, 36.67236328125 : 41.11083984375]
 layers: topp:states
 styles: population
	QueryLayers = [org.geoserver.wms.MapLayerInfo@e1aa9f40]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=topp:states, REQUEST=GetFeatureInfo, SRS=EPSG:4326, BBOX=-79.21142578125,36.67236328125,-74.77294921875,41.11083984375, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=topp:states, TRANSPARENT=true, CQL_FILTER=in ('states.12', 'states.2'), FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 14:07:23,823 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:23,883 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = application/openlayers
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[82345.359375 : 87383.8515625, 441848.15625 : 449887.78125]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=application/openlayers, BBOX=82345.359375,441848.15625,87383.8515625,449887.78125, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:07:24,419 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:24,804 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 769
	Width = 481
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[80274.01722408373 : 89455.2803996358, 438534.1597229132 : 453212.7280846586]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=80274.01722408373,438534.1597229132,89455.2803996358,453212.7280846586, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:07:28,511 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:28,530 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[85456.37263398472 : 87384.24702219837, 448154.4437987515 : 450082.31818696513]
 layers: geoweb:parcels
 styles: polygon
	QueryLayers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=geoweb:parcels, REQUEST=GetFeatureInfo, SRS=EPSG:28992, BBOX=85456.37263398472,448154.4437987515,87384.24702219837,450082.31818696513, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=geoweb:parcels, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 14:07:29,887 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:29,904 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[84979.17600323877 : 86907.05039145242, 447906.3015507636 : 449834.1759389772]
 layers: geoweb:parcels
 styles: polygon
	QueryLayers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=geoweb:parcels, REQUEST=GetFeatureInfo, SRS=EPSG:28992, BBOX=84979.17600323877,447906.3015507636,86907.05039145242,449834.1759389772, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=geoweb:parcels, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 14:07:31,695 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:32,039 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 769
	Width = 481
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[77888.03407035397 : 87069.29724590604, 436816.2518522277 : 451494.8202139732]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=77888.03407035397,436816.2518522277,87069.29724590604,451494.8202139732, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:07:32,241 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:32,536 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 769
	Width = 481
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[79758.64486287809 : 88939.90803843016, 436262.70376056246 : 450941.2721223079]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=79758.64486287809,436262.70376056246,88939.90803843016,450941.2721223079, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:07:32,853 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:33,108 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 482
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[83242.18026732352 : 85542.268027519, 444957.2263727537 : 448622.09649688256]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83242.18026732352,444957.2263727537,85542.268027519,448622.09649688256, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=482, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:07:34,593 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:34,912 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81624.48368909476 : 86215.1152768708, 441779.09681198566 : 449108.8370602434]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81624.48368909476,441779.09681198566,86215.1152768708,449108.8370602434, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:07:35,881 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:35,895 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[84874.19274447468 : 85838.1299385815, 447996.9689106053 : 448960.90610471216]
 layers: geoweb:parcels
 styles: polygon
	QueryLayers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=geoweb:parcels, REQUEST=GetFeatureInfo, SRS=EPSG:28992, BBOX=84874.19274447468,447996.9689106053,85838.1299385815,448960.90610471216, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=geoweb:parcels, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 14:07:37,468 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:37,483 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[84874.19274447468 : 85838.1299385815, 447996.9689106053 : 448960.90610471216]
 layers: geoweb:parcels
 styles: polygon
	QueryLayers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=geoweb:parcels, REQUEST=GetFeatureInfo, SRS=EPSG:28992, BBOX=84874.19274447468,447996.9689106053,85838.1299385815,448960.90610471216, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=geoweb:parcels, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 14:07:39,147 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:07:39,163 INFO [geoserver.wms] - 
Request: getFeatureInfo
	PropertyNames = null
	Exceptions = application/vnd.ogc.se_xml
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[84874.19274447468 : 85838.1299385815, 447996.9689106053 : 448960.90610471216]
 layers: geoweb:parcels
 styles: polygon
	QueryLayers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	FeatureCount = 50
	InfoFormat = text/html
	XPixel = 50
	YPixel = 50
	Version = 1.1.1
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	Get = false
	RawKvp = {FORMAT=image/png, INFO_FORMAT=text/html, STYLES=, WIDTH=101, HEIGHT=101, LAYERS=geoweb:parcels, REQUEST=GetFeatureInfo, SRS=EPSG:28992, BBOX=84874.19274447468,447996.9689106053,85838.1299385815,448960.90610471216, VERSION=1.1.1, X=50, Y=50, SERVICE=WMS, QUERY_LAYERS=geoweb:parcels, TRANSPARENT=true, FEATURE_COUNT=50}
	RequestCharset = null
2016-04-24 14:07:51,239 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:07:51,246 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@65fa27 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-24 14:07:51,261 INFO [wfs.json] - about to encode JSON
2016-04-24 14:10:06,329 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:10:06,338 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@18d2a81 (handle: null) (abstractProjectionClause: null, abstractSelectionClause: null, abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
2016-04-24 14:10:06,355 INFO [wfs.json] - about to encode JSON
2016-04-24 14:12:53,292 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:12:53,294 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "<> null" at line 1, column 8.
Was expecting one of:
    "(" ...
    ":" ...
    <IDENTIFIER> ...
    "." ...
    "not" ...
    "in" ...
    "tequals" ...
    "before" ...
    "after" ...
    "during" ...
    "*" ...
    "/" ...
    "+" ...
    "-" ...
    "like" ...
    "ilike" ...
    "exists" ...
    "does-not-exist" ...
    "is" ...
    "between" ...
    "=" ...
    ">" ...
    "<" ...
    ">=" ...
    "<=" ...
    "<>" "(" ...
    "<>" "[" ...
    "<>" <IDENTIFIER> ...
    "<>" <DATE> ...
    "<>" <DATE_TIME> ...
    "<>" "-" ...
    "<>" <INTEGER_LITERAL> ...
    "<>" <FLOATING_LITERAL> ...
    "<>" <STRING_LITERAL> ...
    "<>" "true" ...
    "<>" "false" ...
    "<>" "point" ...
    "<>" "linestring" ...
    "<>" "polygon" ...
    "<>" "multipoint" ...
    "<>" "multilinestring" ...
    "<>" "multipolygon" ...
    "<>" "geometrycollection" ...
    "<>" "envelope" ...
     Parsing : quality<>null.
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 14:13:45,843 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:13:45,845 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "\'quality\' <> null" at line 1, column 1.
Was expecting one of:
    "not" ...
    "include" ...
    "exclude" ...
    "(" ...
    "[" ...
    "id" ...
    "in" ...
    <IDENTIFIER> ...
    <DATE_TIME> ...
    <DATE> ...
    "-" ...
    <INTEGER_LITERAL> ...
    <FLOATING_LITERAL> ...
    <STRING_LITERAL> ...
    <STRING_LITERAL> "*" ...
    <STRING_LITERAL> "/" ...
    <STRING_LITERAL> "+" ...
    <STRING_LITERAL> "-" ...
    <STRING_LITERAL> "not" ...
    <STRING_LITERAL> "like" ...
    <STRING_LITERAL> "ilike" ...
    <STRING_LITERAL> "exists" ...
    <STRING_LITERAL> "does-not-exist" ...
    <STRING_LITERAL> "is" ...
    <STRING_LITERAL> "between" ...
    <STRING_LITERAL> "=" ...
    <STRING_LITERAL> ">" ...
    <STRING_LITERAL> "<" ...
    <STRING_LITERAL> ">=" ...
    <STRING_LITERAL> "<=" ...
    <STRING_LITERAL> "<>" "(" ...
    <STRING_LITERAL> "<>" "[" ...
    <STRING_LITERAL> "<>" <IDENTIFIER> ...
    <STRING_LITERAL> "<>" <DATE> ...
    <STRING_LITERAL> "<>" <DATE_TIME> ...
    <STRING_LITERAL> "<>" "-" ...
    <STRING_LITERAL> "<>" <INTEGER_LITERAL> ...
    <STRING_LITERAL> "<>" <FLOATING_LITERAL> ...
    <STRING_LITERAL> "<>" <STRING_LITERAL> ...
    <STRING_LITERAL> "<>" "true" ...
    <STRING_LITERAL> "<>" "false" ...
    <STRING_LITERAL> "<>" "point" ...
    <STRING_LITERAL> "<>" "linestring" ...
    <STRING_LITERAL> "<>" "polygon" ...
    <STRING_LITERAL> "<>" "multipoint" ...
    <STRING_LITERAL> "<>" "multilinestring" ...
    <STRING_LITERAL> "<>" "multipolygon" ...
    <STRING_LITERAL> "<>" "geometrycollection" ...
    <STRING_LITERAL> "<>" "envelope" ...
     Parsing : 'quality'<>null.
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 14:13:58,074 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:13:58,079 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "<> null" at line 1, column 8.
Was expecting one of:
    "(" ...
    ":" ...
    <IDENTIFIER> ...
    "." ...
    "not" ...
    "in" ...
    "tequals" ...
    "before" ...
    "after" ...
    "during" ...
    "*" ...
    "/" ...
    "+" ...
    "-" ...
    "like" ...
    "ilike" ...
    "exists" ...
    "does-not-exist" ...
    "is" ...
    "between" ...
    "=" ...
    ">" ...
    "<" ...
    ">=" ...
    "<=" ...
    "<>" "(" ...
    "<>" "[" ...
    "<>" <IDENTIFIER> ...
    "<>" <DATE> ...
    "<>" <DATE_TIME> ...
    "<>" "-" ...
    "<>" <INTEGER_LITERAL> ...
    "<>" <FLOATING_LITERAL> ...
    "<>" <STRING_LITERAL> ...
    "<>" "true" ...
    "<>" "false" ...
    "<>" "point" ...
    "<>" "linestring" ...
    "<>" "polygon" ...
    "<>" "multipoint" ...
    "<>" "multilinestring" ...
    "<>" "multipolygon" ...
    "<>" "geometrycollection" ...
    "<>" "envelope" ...
     Parsing : quality<>null.
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 14:15:24,324 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:15:24,325 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: Could not parse CQL filter list.
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:30)
	at org.geoserver.ows.util.KvpUtils.parse(KvpUtils.java:421)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1473)
	at org.geoserver.ows.Dispatcher.parseKVP(Dispatcher.java:1469)
	at org.geoserver.ows.Dispatcher.init(Dispatcher.java:326)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:245)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geotools.filter.text.cql2.CQLException: Encountered "<> null" at line 1, column 8.
Was expecting one of:
    "(" ...
    ":" ...
    <IDENTIFIER> ...
    "." ...
    "not" ...
    "in" ...
    "tequals" ...
    "before" ...
    "after" ...
    "during" ...
    "*" ...
    "/" ...
    "+" ...
    "-" ...
    "like" ...
    "ilike" ...
    "exists" ...
    "does-not-exist" ...
    "is" ...
    "between" ...
    "=" ...
    ">" ...
    "<" ...
    ">=" ...
    "<=" ...
    "<>" "(" ...
    "<>" "[" ...
    "<>" <IDENTIFIER> ...
    "<>" <DATE> ...
    "<>" <DATE_TIME> ...
    "<>" "-" ...
    "<>" <INTEGER_LITERAL> ...
    "<>" <FLOATING_LITERAL> ...
    "<>" <STRING_LITERAL> ...
    "<>" "true" ...
    "<>" "false" ...
    "<>" "point" ...
    "<>" "linestring" ...
    "<>" "polygon" ...
    "<>" "multipoint" ...
    "<>" "multilinestring" ...
    "<>" "multipolygon" ...
    "<>" "geometrycollection" ...
    "<>" "envelope" ...
     Parsing : quality<>null.
	at org.geotools.filter.text.ecql.ECQLCompiler.compileFilterList(ECQLCompiler.java:132)
	at org.geotools.filter.text.commons.CompilerUtil.parseFilterList(CompilerUtil.java:217)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:193)
	at org.geotools.filter.text.ecql.ECQL.toFilterList(ECQL.java:175)
	at org.geoserver.util.XCQL.toFilterList(XCQL.java:33)
	at org.geoserver.ows.kvp.CQLFilterKvpParser.parse(CQLFilterKvpParser.java:28)
	... 94 more
2016-04-24 14:15:37,766 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:15:38,099 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81586.30795863508 : 86176.93954641111, 441779.09681198566 : 449108.8370602434]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81586.30795863508,441779.09681198566,86176.93954641111,449108.8370602434, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:15:38,715 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-04-24 14:15:39,037 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Height = 768
	Width = 481
	Format = image/png
	Buffer = 0
	Filter = null
	Filters = null
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@61f02aae]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	SRS = EPSG:28992
	Tiled = false
	FeatureVersion = null
	Sld = null
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Bbox = SRSEnvelope[81032.75986696978 : 85623.39145474581, 441387.795574774 : 448717.53582303174]
	Angle = 0.0
	Env = {}
	Exceptions = SE_XML
	StyleBody = null
	StyleVersion = null
	SldVersion = null
	ScaleMethod = null
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	CQLFilter = null
	Elevation = []
	StartIndex = null
	ViewParams = null
	FeatureId = null
	BgColor = java.awt.Color[r=255,g=255,b=255]
	TilesOrigin = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	ValidateSchema = false
	Interpolations = []
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81032.75986696978,441387.795574774,85623.39145474581,448717.53582303174, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=481, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:parcels}
	RequestCharset = UTF-8
2016-04-24 14:19:56,193 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:19:56,226 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@184f05a (handle: null) (abstractProjectionClause: null, abstractSelectionClause: [ akr_area > 50000 ], abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractSelectionClause = [ akr_area > 50000 ]
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        filter = [ akr_area > 50000 ]
2016-04-24 14:19:56,242 INFO [wfs.json] - about to encode JSON
2016-04-24 14:20:34,330 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 14:20:34,343 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@16e19b1 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: [ akr_area > 50000 ], abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        abstractSelectionClause = [ akr_area > 50000 ]
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        filter = [ akr_area > 50000 ]
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-24 14:20:34,360 INFO [wfs.json] - about to encode JSON
2016-04-24 15:14:57,727 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 15:14:57,742 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@f22827 (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: [ akr_area > 50000 ], abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        abstractSelectionClause = [ akr_area > 50000 ]
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        filter = [ akr_area > 50000 ]
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-24 15:14:57,769 INFO [wfs.json] - about to encode JSON
2016-04-24 15:15:09,904 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-04-24 15:15:09,914 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 2.0.0
    baseUrl = http://localhost:8080/geoserver/
    count = 20000
    outputFormat = application/json
    resolve = none
    resolveDepth = *
    resolveTimeout = 300
    resultType = results
    abstractQueryExpressionGroup[0] = wfs:abstractQueryExpression=net.opengis.wfs20.impl.QueryTypeImpl@d81bfd (handle: null) (abstractProjectionClause: [geom, parcel, oarea], abstractSelectionClause: [ akr_area > 50000 ], abstractSortingClause: null, aliases: null, typeNames: [{tudelft.nl/geoweb}parcels]) (featureVersion: null, srsName: EPSG:4326, filter: null, propertyNames: null, sortBy: null)
    abstractQueryExpression[0]:
        abstractProjectionClause[0] = geomabstractProjectionClause[0] = parcelabstractProjectionClause[0] = oarea
        abstractSelectionClause = [ akr_area > 50000 ]
        typeNames[0] = {tudelft.nl/geoweb}parcels
        srsName = EPSG:4326
        filter = [ akr_area > 50000 ]
        propertyNames[0] = geompropertyNames[0] = parcelpropertyNames[0] = oarea
2016-04-24 15:15:09,929 INFO [wfs.json] - about to encode JSON
2016-05-01 19:57:32,322 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-05-01 19:57:32,752 INFO [org.geoserver] - Loaded style 'burg'
2016-05-01 19:57:32,753 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-01 19:57:32,754 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-01 19:57:32,755 INFO [org.geoserver] - Loaded style 'dem'
2016-05-01 19:57:32,756 INFO [org.geoserver] - Loaded style 'generic'
2016-05-01 19:57:32,757 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-01 19:57:32,759 INFO [org.geoserver] - Loaded style 'grass'
2016-05-01 19:57:32,760 INFO [org.geoserver] - Loaded style 'green'
2016-05-01 19:57:32,760 INFO [org.geoserver] - Loaded style 'line'
2016-05-01 19:57:32,761 INFO [org.geoserver] - Loaded style 'poi'
2016-05-01 19:57:32,762 INFO [org.geoserver] - Loaded style 'point'
2016-05-01 19:57:32,763 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-01 19:57:32,764 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-01 19:57:32,765 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-01 19:57:32,765 INFO [org.geoserver] - Loaded style 'population'
2016-05-01 19:57:32,766 INFO [org.geoserver] - Loaded style 'rain'
2016-05-01 19:57:32,775 INFO [org.geoserver] - Loaded style 'raster'
2016-05-01 19:57:32,776 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-01 19:57:32,777 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-01 19:57:32,778 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-01 19:57:32,779 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-01 19:57:32,780 INFO [org.geoserver] - Loaded default workspace geoweb
2016-05-01 19:57:32,785 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-01 19:57:32,788 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-05-01 19:57:32,789 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-01 19:57:32,791 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-01 19:57:32,793 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-01 19:57:32,794 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-01 19:57:32,796 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-01 19:57:32,798 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-01 19:57:33,261 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-05-01 19:57:33,263 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-05-01 19:57:33,846 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-05-01 19:57:33,852 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-05-01 19:57:33,868 INFO [org.geoserver] - Loaded layer 'parcels'
2016-05-01 19:57:33,876 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-01 19:57:33,879 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-01 19:57:34,573 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-01 19:57:34,587 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-01 19:57:34,695 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-01 19:57:34,700 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-05-01 19:57:34,701 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-01 19:57:34,923 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-01 19:57:34,924 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-01 19:57:34,925 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-01 19:57:34,929 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-01 19:57:34,929 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-01 19:57:34,933 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-01 19:57:34,934 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-01 19:57:35,706 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-05-01 19:57:35,706 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-05-01 19:57:35,740 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-01 19:57:35,749 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-01 19:57:35,749 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-01 19:57:35,753 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-01 19:57:35,754 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-01 19:57:35,772 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-01 19:57:35,778 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-01 19:57:35,778 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-01 19:57:35,815 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-01 19:57:35,816 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-01 19:57:35,824 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-01 19:57:35,827 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-01 19:57:35,828 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-01 19:57:35,830 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-01 19:57:35,832 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-01 19:57:35,833 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-01 19:57:35,835 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-01 19:57:35,838 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-01 19:57:35,838 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-01 19:57:35,840 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-01 19:57:35,843 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-01 19:57:35,843 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-01 19:57:35,845 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-01 19:57:35,855 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-01 19:57:35,855 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-01 19:57:35,859 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-01 19:57:35,859 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-01 19:57:36,080 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-01 19:57:36,086 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-01 19:57:36,086 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-01 19:57:36,099 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-01 19:57:36,100 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-01 19:57:36,102 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-01 19:57:36,103 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-01 19:57:36,104 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-01 19:57:36,106 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-01 19:57:36,108 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-01 19:57:36,108 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-01 19:57:36,110 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-01 19:57:36,112 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-01 19:57:36,113 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-01 19:57:36,115 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-01 19:57:36,121 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-01 19:57:36,122 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-01 19:57:36,128 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-01 19:57:36,130 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-01 19:57:36,137 INFO [org.geoserver] - Loaded layer 'states'
2016-05-01 19:57:36,142 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-01 19:57:36,142 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-01 19:57:36,155 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-01 19:57:36,155 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-01 19:57:36,157 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-01 19:57:36,159 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-01 19:57:36,159 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-01 19:57:36,161 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-01 19:57:36,163 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-01 19:57:36,163 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-01 19:57:36,165 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-01 19:57:36,167 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-01 19:57:36,168 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-01 19:57:36,169 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-01 19:57:36,178 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-01 19:57:36,180 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-01 19:57:36,181 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-01 19:57:36,260 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-05-01 19:57:36,260 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\robbr\AppData\Local\Temp, using it as the default prefix. ***
2016-05-01 19:57:36,261 INFO [storage.DefaultStorageFinder] - ************************************************************************************************************************
2016-05-01 19:57:36,261 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\robbr\AppData\Local\Temp\geowebcache'
2016-05-01 19:57:36,270 INFO [config.XMLConfiguration] - Found configuration file in C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-05-01 19:57:36,310 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-05-01 19:57:36,491 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-01 19:57:36,492 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-05-01 19:57:36,493 INFO [gwc.layer] - Loading tile layers from C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-05-01 19:57:36,591 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-01 19:57:36,591 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-05-01 19:57:36,592 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\robbr\AppData\Local\Temp\geowebcache
2016-05-01 19:57:36,592 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\robbr\AppData\Local\Temp\geowebcache contained no layers.
2016-05-01 19:57:36,681 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-05-01 19:57:36,690 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\robbr\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-05-01 19:57:36,693 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-01 19:57:36,693 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-01 19:57:36,694 INFO [diskquota.DiskQuotaMonitor] - 23 layers attached to global quota 500.0 MB
2016-05-01 19:57:36,710 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-01 19:57:36,758 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-01 19:57:36,774 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-01 19:57:36,789 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-01 19:57:36,805 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-05-01 19:57:37,193 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-05-01 19:57:37,231 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-05-01 19:57:37,245 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-05-01 19:57:37,246 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-05-01 19:57:37,382 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-05-01 19:57:37,420 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-05-01 19:57:37,420 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-05-01 19:57:38,368 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-05-01 19:57:38,369 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-05-01 19:57:38,369 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-05-01 19:57:38,480 INFO [geoserver.global] - Falling back to embedded data directory: C:\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-05-01 19:57:38,491 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-05-01 19:57:38,492 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-05-01 19:57:38,500 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-05-01 19:57:38,590 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-05-01 19:57:38,591 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-05-01 19:57:39,934 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-05-01 19:57:39,935 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-05-01 19:57:39,935 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-05-01 19:57:42,400 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-05-01 19:57:42,401 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-05-01 19:57:42,461 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-05-01 19:57:42,461 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-05-01 19:57:42,653 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-05-01 19:57:42,655 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-05-01 19:57:42,786 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-05-01 19:57:42,787 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-05-01 19:58:21,102 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-05-01 21:12:18,487 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [MarkupContainer [Component id = parametersPanel]]
2016-05-01 21:12:18,492 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [MarkupContainer [Component id = parametersPanel]]
2016-05-01 21:16:01,641 INFO [geoserver.gwc] - Saving GeoSeverTileLayer geoweb:top10_3d
2016-05-01 21:17:24,807 WARN [geoserver.web] - Unable to find property: 'format.wms.application/vnd.google-earth.kml' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-05-01 21:17:24,809 WARN [geoserver.web] - Unable to find property: 'format.wms.rss' for component:  [class=org.geoserver.web.demo.MapPreviewPage]
2016-05-01 21:17:33,928 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-01 21:17:34,268 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}top10_3d
    maxFeatures = 50
    outputFormat = gml3
    resultType = results
2016-05-01 21:18:17,138 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-01 21:18:17,141 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}top10_3d
    maxFeatures = 50
    outputFormat = application/gml+xml; version=3.2
    resultType = results
2016-05-01 21:18:33,226 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-01 21:18:33,229 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}top10_3d
    maxFeatures = 50
    outputFormat = application/json
    resultType = results
2016-05-01 21:18:33,256 INFO [wfs.json] - about to encode JSON
2016-05-01 21:56:53,608 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-01 21:56:53,611 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {tudelft.nl/geoweb}top10_3d
    maxFeatures = 50
    outputFormat = gml3
    resultType = results
2016-05-01 22:38:23,567 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-01 22:38:23,603 INFO [geoserver.wfs] - 
Request: describeFeatureType
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    typeName[0] = {tudelft.nl/geoweb}top10_3d
    outputFormat = XMLSCHEMA
2016-05-01 23:03:46,214 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:46,583 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = application/openlayers
	Buffer = 0
	Width = 642
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[82318.7 : 87542.8, 443753.0 : 450000.0]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = false
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.0
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, SRS=EPSG:28992, FORMAT=application/openlayers, BBOX=82318.7,443753.0,87542.8,450000.0, VERSION=1.1.0, STYLES=, SERVICE=WMS, WIDTH=642, HEIGHT=768, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:03:47,366 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:47,946 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[81863.08200446774 : 87999.83067586065, 443210.6867042235 : 450540.42695248127]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=81863.08200446774,443210.6867042235,87999.83067586065,450540.42695248127, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:03:50,121 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:50,347 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[80250.15739254642 : 86386.90606393933, 444222.3435614049 : 451552.08380966267]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=80250.15739254642,444222.3435614049,86386.90606393933,451552.08380966267, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:03:52,771 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:52,819 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[84146.76613048132 : 84530.31292244338, 447479.210566246 : 447937.3193317621]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=84146.76613048132,447479.210566246,84530.31292244338,447937.3193317621, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:03:54,241 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:54,312 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 769
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[83987.20350707564 : 84754.29709099975, 447094.47078270704 : 448011.8813053162]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=83987.20350707564,447094.47078270704,84754.29709099975,448011.8813053162, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=769, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:03:55,207 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:55,391 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[82796.00141757606 : 85864.37575327251, 444923.8226086015 : 448588.69273273036]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82796.00141757606,444923.8226086015,85864.37575327251,448588.69273273036, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:03:55,722 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:03:55,927 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[82724.42192296417 : 85792.79625866063, 445238.7723848938 : 448903.64250902267]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82724.42192296417,445238.7723848938,85792.79625866063,448903.64250902267, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-01 23:11:35,779 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-01 23:11:35,981 INFO [geoserver.wms] - 
Request: getMap
	Time = []
	Filter = null
	Format = image/png
	Buffer = 0
	Width = 643
	Filters = null
	Height = 768
	Palette = null
	Layers = [org.geoserver.wms.MapLayerInfo@19667a6e]
	MaxFeatures = null
	Styles = [StyleImpl[ name=polygon]]
	Bbox = SRSEnvelope[82815.0892828059 : 85883.46361850236, 445692.10918410245 : 449356.9793082313]
	Env = {}
	Crs = PROJCS["Amersfoort / RD New", 
  GEOGCS["Amersfoort", 
    DATUM["Amersfoort", 
      SPHEROID["Bessel 1841", 6377397.155, 299.1528128, AUTHORITY["EPSG","7004"]], 
      TOWGS84[565.2369, 50.0087, 465.658, -0.40685733032239757, -0.3507326765425626, 1.8703473836067959, 4.0812], 
      AUTHORITY["EPSG","6289"]], 
    PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
    UNIT["degree", 0.017453292519943295], 
    AXIS["Geodetic longitude", EAST], 
    AXIS["Geodetic latitude", NORTH], 
    AUTHORITY["EPSG","4289"]], 
  PROJECTION["Oblique_Stereographic", AUTHORITY["EPSG","9809"]], 
  PARAMETER["central_meridian", 5.387638888888891], 
  PARAMETER["latitude_of_origin", 52.15616055555556], 
  PARAMETER["scale_factor", 0.9999079], 
  PARAMETER["false_easting", 155000.0], 
  PARAMETER["false_northing", 463000.0], 
  UNIT["m", 1.0], 
  AXIS["Easting", EAST], 
  AXIS["Northing", NORTH], 
  AUTHORITY["EPSG","28992"]]
	Angle = 0.0
	Elevation = []
	ViewParams = null
	FeatureId = null
	CQLFilter = null
	RemoteOwsType = null
	RemoteOwsURL = null
	StartIndex = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	Tiled = false
	SRS = EPSG:28992
	FeatureVersion = null
	Transparent = true
	StyleFormat = sld
	SldBody = null
	StyleUrl = null
	TilesOrigin = null
	ValidateSchema = false
	Interpolations = []
	Sld = null
	ScaleMethod = null
	StyleBody = null
	SldVersion = null
	StyleVersion = null
	Exceptions = SE_XML
	Version = 1.1.1
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	Get = true
	RawKvp = {REQUEST=GetMap, FORMAT=image/png, SRS=EPSG:28992, BBOX=82815.0892828059,445692.10918410245,85883.46361850236,449356.9793082313, VERSION=1.1.1, STYLES=, SERVICE=WMS, WIDTH=643, HEIGHT=768, TRANSPARENT=true, LAYERS=geoweb:top10_3d}
	RequestCharset = UTF-8
2016-05-24 14:36:18,272 INFO [geoserver.global] - Falling back to embedded data directory: C:\Users\Rob\Desktop\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-05-24 14:36:19,132 INFO [org.geoserver] - Loaded style 'burg'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'dem'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'generic'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'grass'
2016-05-24 14:36:19,147 INFO [org.geoserver] - Loaded style 'green'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'line'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'poi'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'point'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-24 14:36:19,163 INFO [org.geoserver] - Loaded style 'population'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded style 'rain'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded style 'raster'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-24 14:36:19,179 INFO [org.geoserver] - Loaded default workspace geoweb
2016-05-24 14:36:19,194 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-24 14:36:19,194 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-05-24 14:36:19,210 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-24 14:36:19,210 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-24 14:36:19,210 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-24 14:36:19,210 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-24 14:36:19,225 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-24 14:36:19,225 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-24 14:36:20,069 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-05-24 14:36:20,069 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-05-24 14:36:21,397 WARN [org.geoserver] - Error connecting to 'Delft parcels'. Disabling.
2016-05-24 14:36:21,413 INFO [org.geoserver] - 
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:630)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:38)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:355)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:226)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:36)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:112)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:59)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:284)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:607)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:388)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:293)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:23)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4811)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5251)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:940)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1816)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1829)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:949)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:308)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:96)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:590)
	... 84 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:48)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1814)
	... 88 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:239)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:127)
	at org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:29)
	at org.postgresql.jdbc3g.AbstractJdbc3gConnection.<init>(AbstractJdbc3gConnection.java:21)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.<init>(AbstractJdbc4Connection.java:41)
	at org.postgresql.jdbc4.Jdbc4Connection.<init>(Jdbc4Connection.java:24)
	at org.postgresql.Driver.makeConnection(Driver.java:414)
	at org.postgresql.Driver.connect(Driver.java:282)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 92 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.postgresql.core.PGStream.<init>(PGStream.java:61)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:121)
	... 104 more
2016-05-24 14:36:21,835 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-05-24 14:36:21,851 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-05-24 14:36:21,882 INFO [org.geoserver] - Loaded layer 'parcels'
2016-05-24 14:36:21,897 INFO [org.geoserver] - Loaded store 'Top10NL Delft', enabled
2016-05-24 14:36:21,897 INFO [org.geoserver] - Loaded data store 'Top10NL Delft'
2016-05-24 14:36:22,288 INFO [org.geoserver] - Loaded feature type 'top10_3d', enabled
2016-05-24 14:36:22,288 INFO [org.geoserver] - Loaded feature type 'Top10NL Delft'
2016-05-24 14:36:22,288 INFO [org.geoserver] - Loaded layer 'top10_3d'
2016-05-24 14:36:22,304 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-24 14:36:22,304 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-24 14:36:22,866 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 14:36:23,554 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-24 14:36:23,554 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-24 14:36:23,757 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-24 14:36:23,773 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-05-24 14:36:23,773 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-24 14:36:23,929 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-24 14:36:23,929 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-24 14:36:23,929 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-24 14:36:23,944 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-24 14:36:23,944 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-24 14:36:23,960 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-24 14:36:23,960 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-24 14:36:25,320 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\Users\Rob\Desktop\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-05-24 14:36:25,320 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/Users/Rob/Desktop/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-05-24 14:36:25,382 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-24 14:36:25,398 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-24 14:36:25,398 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-24 14:36:25,398 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-24 14:36:25,398 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-24 14:36:25,429 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-24 14:36:25,445 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-24 14:36:25,445 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-24 14:36:25,491 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-24 14:36:25,491 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 14:36:25,507 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-24 14:36:25,507 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-24 14:36:25,507 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 14:36:25,523 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-24 14:36:25,523 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-24 14:36:25,523 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 14:36:25,538 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-24 14:36:25,538 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-24 14:36:25,538 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 14:36:25,538 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-24 14:36:25,554 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-24 14:36:25,554 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 14:36:25,554 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-24 14:36:25,570 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-24 14:36:25,570 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-24 14:36:25,570 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-24 14:36:25,570 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-24 14:36:26,007 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-24 14:36:26,007 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-24 14:36:26,007 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-24 14:36:26,038 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-24 14:36:26,038 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 14:36:26,038 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-24 14:36:26,038 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-24 14:36:26,038 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 14:36:26,054 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-24 14:36:26,054 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-24 14:36:26,054 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 14:36:26,054 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-24 14:36:26,054 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-24 14:36:26,070 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 14:36:26,070 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-24 14:36:26,085 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-24 14:36:26,085 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-24 14:36:26,101 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-24 14:36:26,101 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-24 14:36:26,101 INFO [org.geoserver] - Loaded layer 'states'
2016-05-24 14:36:26,116 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-24 14:36:26,116 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-24 14:36:26,132 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-24 14:36:26,132 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 14:36:26,148 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-24 14:36:26,148 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-24 14:36:26,148 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 14:36:26,148 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-24 14:36:26,148 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-24 14:36:26,148 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 14:36:26,163 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-24 14:36:26,163 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-24 14:36:26,163 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 14:36:26,163 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-24 14:36:26,179 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-24 14:36:26,195 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-24 14:36:26,195 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-24 14:36:26,335 INFO [storage.DefaultStorageFinder] - **********************************************************************************************************************
2016-05-24 14:36:26,335 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\Rob\AppData\Local\Temp, using it as the default prefix. ***
2016-05-24 14:36:26,335 INFO [storage.DefaultStorageFinder] - **********************************************************************************************************************
2016-05-24 14:36:26,335 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\Rob\AppData\Local\Temp\geowebcache'
2016-05-24 14:36:26,366 WARN [config.XMLConfiguration] - Found no configuration file in config directory, will create one at 'C:\Users\Rob\AppData\Local\Temp\geowebcache\geowebcache.xml' from template jar:file:/C:/Users/Rob/Desktop/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/WEB-INF/lib/gwc-core-1.8.2.jar!/geowebcache_empty.xml
2016-05-24 14:36:26,429 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-05-24 14:36:26,773 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-24 14:36:26,773 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\Users\Rob\Desktop\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-05-24 14:36:26,773 INFO [gwc.layer] - Loading tile layers from C:\Users\Rob\Desktop\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-05-24 14:36:26,945 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-24 14:36:26,945 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\Rob\AppData\Local\Temp\geowebcache
2016-05-24 14:36:26,945 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\Rob\AppData\Local\Temp\geowebcache
2016-05-24 14:36:26,960 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\Rob\AppData\Local\Temp\geowebcache contained no layers.
2016-05-24 14:36:27,116 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\Rob\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-05-24 14:36:27,132 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\Rob\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-05-24 14:36:27,132 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-24 14:36:27,132 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-24 14:36:27,132 INFO [diskquota.DiskQuotaMonitor] - 24 layers attached to global quota 500,0 MB
2016-05-24 14:36:27,163 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-24 14:36:27,257 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-24 14:36:27,273 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-24 14:36:27,304 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-24 14:36:27,335 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-05-24 14:36:28,367 WARN [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
2016-05-24 14:36:29,398 ERROR [gwc.layer] - An error occurred trying to determine if the layer is geometryless
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:630)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:897)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:884)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:878)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:865)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy12.getFeatureType(Unknown Source)
	at org.geoserver.gwc.layer.CatalogConfiguration.isLayerExposable(CatalogConfiguration.java:453)
	at org.geoserver.gwc.config.GWCInitializer.addLayersToNotCache(GWCInitializer.java:281)
	at org.geoserver.gwc.config.GWCInitializer.initialize(GWCInitializer.java:151)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:150)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:130)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:59)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:240)
	at org.geoserver.platform.GeoServerExtensions.extensions(GeoServerExtensions.java:141)
	at org.geoserver.ows.Dispatcher.initApplicationContext(Dispatcher.java:195)
	at org.springframework.context.support.ApplicationObjectSupport.setApplicationContext(ApplicationObjectSupport.java:73)
	at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:117)
	at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:607)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:388)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:293)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:23)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4811)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5251)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:940)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1816)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1829)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:949)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:308)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:96)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:590)
	... 84 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:48)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1814)
	... 88 more
Caused by: org.postgresql.util.PSQLException: Connection to localhost:5432 refused. Check that the hostname and port are correct and that the postmaster is accepting TCP/IP connections.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:239)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:127)
	at org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:29)
	at org.postgresql.jdbc3g.AbstractJdbc3gConnection.<init>(AbstractJdbc3gConnection.java:21)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.<init>(AbstractJdbc4Connection.java:41)
	at org.postgresql.jdbc4.Jdbc4Connection.<init>(Jdbc4Connection.java:24)
	at org.postgresql.Driver.makeConnection(Driver.java:414)
	at org.postgresql.Driver.connect(Driver.java:282)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 92 more
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.postgresql.core.PGStream.<init>(PGStream.java:61)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:121)
	... 104 more
2016-05-24 14:36:29,695 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 14:36:29,695 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 14:36:29,773 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-05-24 14:36:29,851 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-05-24 14:36:29,867 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-05-24 14:36:29,867 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-05-24 14:36:30,117 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-05-24 14:36:30,195 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-05-24 14:36:30,195 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-05-24 14:36:31,867 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-05-24 14:36:31,867 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-05-24 14:36:31,867 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-05-24 14:36:32,070 INFO [geoserver.global] - Falling back to embedded data directory: C:\Users\Rob\Desktop\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-05-24 14:36:32,101 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-05-24 14:36:32,101 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-05-24 14:36:32,117 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-05-24 14:36:32,273 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-05-24 14:36:32,273 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-05-24 14:36:34,679 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-05-24 14:36:34,679 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-05-24 14:36:34,679 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-05-24 14:36:39,555 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-05-24 14:36:39,555 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-05-24 14:36:39,680 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-05-24 14:36:39,680 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-05-24 14:36:40,023 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-05-24 14:36:40,023 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-05-24 14:36:40,289 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-05-24 14:36:40,289 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-05-24 15:42:34,224 INFO [geoserver.global] - Falling back to embedded data directory: C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-05-24 15:42:34,981 INFO [org.geoserver] - Loaded style 'burg'
2016-05-24 15:42:34,983 INFO [org.geoserver] - Loaded style 'capitals'
2016-05-24 15:42:34,984 INFO [org.geoserver] - Loaded style 'cite_lakes'
2016-05-24 15:42:34,985 INFO [org.geoserver] - Loaded style 'dem'
2016-05-24 15:42:34,987 INFO [org.geoserver] - Loaded style 'generic'
2016-05-24 15:42:34,989 INFO [org.geoserver] - Loaded style 'giant_polygon'
2016-05-24 15:42:34,990 INFO [org.geoserver] - Loaded style 'grass'
2016-05-24 15:42:34,991 INFO [org.geoserver] - Loaded style 'green'
2016-05-24 15:42:34,992 INFO [org.geoserver] - Loaded style 'line'
2016-05-24 15:42:34,993 INFO [org.geoserver] - Loaded style 'poi'
2016-05-24 15:42:34,994 INFO [org.geoserver] - Loaded style 'point'
2016-05-24 15:42:34,995 INFO [org.geoserver] - Loaded style 'polygon'
2016-05-24 15:42:34,996 INFO [org.geoserver] - Loaded style 'poly_landmarks'
2016-05-24 15:42:34,997 INFO [org.geoserver] - Loaded style 'pophatch'
2016-05-24 15:42:34,998 INFO [org.geoserver] - Loaded style 'population'
2016-05-24 15:42:35,000 INFO [org.geoserver] - Loaded style 'rain'
2016-05-24 15:42:35,001 INFO [org.geoserver] - Loaded style 'raster'
2016-05-24 15:42:35,002 INFO [org.geoserver] - Loaded style 'restricted'
2016-05-24 15:42:35,004 INFO [org.geoserver] - Loaded style 'simple_roads'
2016-05-24 15:42:35,005 INFO [org.geoserver] - Loaded style 'simple_streams'
2016-05-24 15:42:35,006 INFO [org.geoserver] - Loaded style 'tiger_roads'
2016-05-24 15:42:35,007 INFO [org.geoserver] - Loaded default workspace geoweb
2016-05-24 15:42:35,015 INFO [org.geoserver] - Loaded workspace 'cite'
2016-05-24 15:42:35,018 INFO [org.geoserver] - Loaded workspace 'geoweb'
2016-05-24 15:42:35,021 INFO [org.geoserver] - Loaded workspace 'it.geosolutions'
2016-05-24 15:42:35,023 INFO [org.geoserver] - Loaded workspace 'nurc'
2016-05-24 15:42:35,025 INFO [org.geoserver] - Loaded workspace 'sde'
2016-05-24 15:42:35,028 INFO [org.geoserver] - Loaded workspace 'sf'
2016-05-24 15:42:35,030 INFO [org.geoserver] - Loaded workspace 'tiger'
2016-05-24 15:42:35,033 INFO [org.geoserver] - Loaded workspace 'topp'
2016-05-24 15:42:36,037 INFO [org.geoserver] - Loaded store 'Delft parcels', enabled
2016-05-24 15:42:36,041 INFO [org.geoserver] - Loaded data store 'Delft parcels'
2016-05-24 15:42:36,398 WARN [org.geoserver] - Error connecting to 'Delft parcels'. Disabling.
2016-05-24 15:42:36,424 INFO [org.geoserver] - 
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:630)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.getDataStore(DataStoreInfoImpl.java:38)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:355)
	at org.geoserver.config.GeoServerLoader.readCatalog(GeoServerLoader.java:226)
	at org.geoserver.config.DefaultGeoServerLoader.loadCatalog(DefaultGeoServerLoader.java:36)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:112)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:59)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:284)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:607)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:388)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:293)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:23)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4811)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5251)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:940)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1816)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (FATAL: password authentication failed for user "postgres")
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1829)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:949)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:308)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:96)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:590)
	... 84 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (FATAL: password authentication failed for user "postgres")
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:48)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1814)
	... 88 more
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:420)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:195)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:127)
	at org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:29)
	at org.postgresql.jdbc3g.AbstractJdbc3gConnection.<init>(AbstractJdbc3gConnection.java:21)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.<init>(AbstractJdbc4Connection.java:41)
	at org.postgresql.jdbc4.Jdbc4Connection.<init>(Jdbc4Connection.java:24)
	at org.postgresql.Driver.makeConnection(Driver.java:414)
	at org.postgresql.Driver.connect(Driver.java:282)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 92 more
2016-05-24 15:42:36,933 INFO [org.geoserver] - Loaded feature type 'parcels', enabled
2016-05-24 15:42:36,941 INFO [org.geoserver] - Loaded feature type 'Delft parcels'
2016-05-24 15:42:36,961 INFO [org.geoserver] - Loaded layer 'parcels'
2016-05-24 15:42:36,986 INFO [org.geoserver] - Loaded store 'Top10NL Delft', enabled
2016-05-24 15:42:36,987 INFO [org.geoserver] - Loaded data store 'Top10NL Delft'
2016-05-24 15:42:37,328 INFO [org.geoserver] - Loaded feature type 'top10_3d', enabled
2016-05-24 15:42:37,329 INFO [org.geoserver] - Loaded feature type 'Top10NL Delft'
2016-05-24 15:42:37,331 INFO [org.geoserver] - Loaded layer 'top10_3d'
2016-05-24 15:42:37,340 INFO [org.geoserver] - Loaded store 'arcGridSample', enabled
2016-05-24 15:42:37,343 INFO [org.geoserver] - Loaded coverage store 'arcGridSample'
2016-05-24 15:42:37,517 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:42:38,923 INFO [org.geoserver] - Loaded coverage 'Arc_Sample', enabled
2016-05-24 15:42:38,932 INFO [org.geoserver] - Loaded coverage 'arcGridSample'
2016-05-24 15:42:39,167 INFO [org.geoserver] - Loaded layer 'Arc_Sample'
2016-05-24 15:42:39,174 INFO [org.geoserver] - Loaded store 'img_sample2', disabled
2016-05-24 15:42:39,174 INFO [org.geoserver] - Loaded coverage store 'img_sample2'
2016-05-24 15:42:39,419 INFO [org.geoserver] - Loaded coverage 'Pk50095', disabled
2016-05-24 15:42:39,420 INFO [org.geoserver] - Loaded coverage 'img_sample2'
2016-05-24 15:42:39,440 INFO [org.geoserver] - Loaded layer 'Pk50095'
2016-05-24 15:42:39,455 INFO [org.geoserver] - Loaded store 'mosaic', enabled
2016-05-24 15:42:39,456 INFO [org.geoserver] - Loaded coverage store 'mosaic'
2016-05-24 15:42:39,489 INFO [org.geoserver] - Loaded coverage 'mosaic', enabled
2016-05-24 15:42:39,490 INFO [org.geoserver] - Loaded coverage 'mosaic'
2016-05-24 15:42:40,832 WARN [imagemosaic.Utils] - Unable to find sample image for path C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\coverages\mosaic_sample\sample_image
2016-05-24 15:42:40,833 WARN [gce.imagemosaic] - Unable to find sample image for path file:/C:/Users/Bart/Dropbox/Synthesis%20Project/16.%20Geoweb/dashboard/dashboard_in_sight/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/data/coverages/mosaic_sample/mosaic.shp
2016-05-24 15:42:40,886 INFO [org.geoserver] - Loaded layer 'mosaic'
2016-05-24 15:42:40,984 INFO [org.geoserver] - Loaded store 'worldImageSample', enabled
2016-05-24 15:42:40,986 INFO [org.geoserver] - Loaded coverage store 'worldImageSample'
2016-05-24 15:42:41,022 INFO [org.geoserver] - Loaded coverage 'Img_Sample', enabled
2016-05-24 15:42:41,023 INFO [org.geoserver] - Loaded coverage 'worldImageSample'
2016-05-24 15:42:41,164 INFO [org.geoserver] - Loaded layer 'Img_Sample'
2016-05-24 15:42:41,172 INFO [org.geoserver] - Loaded store 'sf', enabled
2016-05-24 15:42:41,172 INFO [org.geoserver] - Loaded data store 'sf'
2016-05-24 15:42:41,342 INFO [org.geoserver] - Loaded feature type 'archsites', enabled
2016-05-24 15:42:41,343 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 15:42:41,388 INFO [org.geoserver] - Loaded layer 'archsites'
2016-05-24 15:42:41,412 INFO [org.geoserver] - Loaded feature type 'bugsites', enabled
2016-05-24 15:42:41,413 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 15:42:41,430 INFO [org.geoserver] - Loaded layer 'bugsites'
2016-05-24 15:42:41,459 INFO [org.geoserver] - Loaded feature type 'restricted', enabled
2016-05-24 15:42:41,460 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 15:42:41,480 INFO [org.geoserver] - Loaded layer 'restricted'
2016-05-24 15:42:41,505 INFO [org.geoserver] - Loaded feature type 'roads', enabled
2016-05-24 15:42:41,506 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 15:42:41,531 INFO [org.geoserver] - Loaded layer 'roads'
2016-05-24 15:42:41,573 INFO [org.geoserver] - Loaded feature type 'streams', enabled
2016-05-24 15:42:41,574 INFO [org.geoserver] - Loaded feature type 'sf'
2016-05-24 15:42:41,579 INFO [org.geoserver] - Loaded layer 'streams'
2016-05-24 15:42:41,591 INFO [org.geoserver] - Loaded store 'sfdem', enabled
2016-05-24 15:42:41,592 INFO [org.geoserver] - Loaded coverage store 'sfdem'
2016-05-24 15:42:41,612 INFO [org.geoserver] - Loaded coverage 'sfdem', enabled
2016-05-24 15:42:41,614 INFO [org.geoserver] - Loaded coverage 'sfdem'
2016-05-24 15:42:42,026 INFO [org.geoserver] - Loaded layer 'sfdem'
2016-05-24 15:42:42,033 INFO [org.geoserver] - Loaded store 'nyc', enabled
2016-05-24 15:42:42,033 INFO [org.geoserver] - Loaded data store 'nyc'
2016-05-24 15:42:42,093 INFO [org.geoserver] - Loaded feature type 'giant_polygon', enabled
2016-05-24 15:42:42,093 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 15:42:42,095 INFO [org.geoserver] - Loaded layer 'giant_polygon'
2016-05-24 15:42:42,115 INFO [org.geoserver] - Loaded feature type 'poi', enabled
2016-05-24 15:42:42,116 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 15:42:42,138 INFO [org.geoserver] - Loaded layer 'poi'
2016-05-24 15:42:42,158 INFO [org.geoserver] - Loaded feature type 'poly_landmarks', enabled
2016-05-24 15:42:42,160 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 15:42:42,203 INFO [org.geoserver] - Loaded layer 'poly_landmarks'
2016-05-24 15:42:42,238 INFO [org.geoserver] - Loaded feature type 'tiger_roads', enabled
2016-05-24 15:42:42,243 INFO [org.geoserver] - Loaded feature type 'nyc'
2016-05-24 15:42:42,263 INFO [org.geoserver] - Loaded layer 'tiger_roads'
2016-05-24 15:42:42,278 INFO [org.geoserver] - Loaded store 'states_shapefile', enabled
2016-05-24 15:42:42,279 INFO [org.geoserver] - Loaded data store 'states_shapefile'
2016-05-24 15:42:42,308 INFO [org.geoserver] - Loaded feature type 'states', enabled
2016-05-24 15:42:42,310 INFO [org.geoserver] - Loaded feature type 'states_shapefile'
2016-05-24 15:42:42,337 INFO [org.geoserver] - Loaded layer 'states'
2016-05-24 15:42:42,351 INFO [org.geoserver] - Loaded store 'taz_shapes', enabled
2016-05-24 15:42:42,352 INFO [org.geoserver] - Loaded data store 'taz_shapes'
2016-05-24 15:42:42,394 INFO [org.geoserver] - Loaded feature type 'tasmania_cities', enabled
2016-05-24 15:42:42,395 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 15:42:42,398 INFO [org.geoserver] - Loaded layer 'tasmania_cities'
2016-05-24 15:42:42,413 INFO [org.geoserver] - Loaded feature type 'tasmania_roads', enabled
2016-05-24 15:42:42,414 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 15:42:42,416 INFO [org.geoserver] - Loaded layer 'tasmania_roads'
2016-05-24 15:42:42,435 INFO [org.geoserver] - Loaded feature type 'tasmania_state_boundaries', enabled
2016-05-24 15:42:42,436 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 15:42:42,439 INFO [org.geoserver] - Loaded layer 'tasmania_state_boundaries'
2016-05-24 15:42:42,451 INFO [org.geoserver] - Loaded feature type 'tasmania_water_bodies', enabled
2016-05-24 15:42:42,453 INFO [org.geoserver] - Loaded feature type 'taz_shapes'
2016-05-24 15:42:42,457 INFO [org.geoserver] - Loaded layer 'tasmania_water_bodies'
2016-05-24 15:42:42,485 INFO [org.geoserver] - Loaded layer group 'spearfish'
2016-05-24 15:42:42,507 INFO [org.geoserver] - Loaded layer group 'tasmania'
2016-05-24 15:42:42,541 INFO [org.geoserver] - Loaded layer group 'tiger-ny'
2016-05-24 15:42:42,688 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2016-05-24 15:42:42,689 INFO [storage.DefaultStorageFinder] - *** Found System environment variable TEMP set to C:\Users\Bart\AppData\Local\Temp, using it as the default prefix. ***
2016-05-24 15:42:42,689 INFO [storage.DefaultStorageFinder] - ***********************************************************************************************************************
2016-05-24 15:42:42,689 INFO [config.XMLConfiguration] - Will look for geowebcache.xml in 'C:\Users\Bart\AppData\Local\Temp\geowebcache'
2016-05-24 15:42:42,699 WARN [config.XMLConfiguration] - Found no configuration file in config directory, will create one at 'C:\Users\Bart\AppData\Local\Temp\geowebcache\geowebcache.xml' from template jar:file:/C:/Users/Bart/Dropbox/Synthesis%20Project/16.%20Geoweb/dashboard/dashboard_in_sight/geoweb16/apache-tomcat-8.0.33/webapps/geoserver/WEB-INF/lib/gwc-core-1.8.2.jar!/geowebcache_empty.xml
2016-05-24 15:42:42,766 INFO [config.XMLConfiguration] - Configuration file validated fine.
2016-05-24 15:42:43,079 INFO [gwc.layer] - Initializing GWC configuration based on GeoServer's Catalog
2016-05-24 15:42:43,080 INFO [gwc.layer] - GeoServer TileLayer store base directory is: C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-05-24 15:42:43,084 INFO [gwc.layer] - Loading tile layers from C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\gwc-layers
2016-05-24 15:42:43,822 INFO [gwc.layer] - GWC configuration based on GeoServer's Catalog loaded successfuly
2016-05-24 15:42:43,822 INFO [config.XMLConfiguration] - Initializing GridSets from C:\Users\Bart\AppData\Local\Temp\geowebcache
2016-05-24 15:42:43,823 INFO [config.XMLConfiguration] - Initializing layers from C:\Users\Bart\AppData\Local\Temp\geowebcache
2016-05-24 15:42:43,823 INFO [layer.TileLayerDispatcher] - Configuration C:\Users\Bart\AppData\Local\Temp\geowebcache contained no layers.
2016-05-24 15:42:43,951 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\Bart\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-05-24 15:42:43,961 INFO [diskquota.ConfigLoader] - DiskQuota configuration not found: C:\Users\Bart\AppData\Local\Temp\geowebcache\geowebcache-diskquota.xml
2016-05-24 15:42:43,965 INFO [diskquota.DiskQuotaMonitor] - Setting up disk quota periodic enforcement task
2016-05-24 15:42:43,966 INFO [diskquota.DiskQuotaMonitor] - 0 layers configured with their own quotas. 
2016-05-24 15:42:43,991 INFO [diskquota.DiskQuotaMonitor] - 24 layers attached to global quota 500,0 MB
2016-05-24 15:42:44,012 INFO [diskquota.DiskQuotaMonitor] - Disk quota periodic enforcement task set up every 10 SECONDS
2016-05-24 15:42:44,114 INFO [org.geoserver] - Loaded service 'wcs', enabled
2016-05-24 15:42:44,137 INFO [org.geoserver] - Loaded service 'wfs', enabled
2016-05-24 15:42:44,159 INFO [org.geoserver] - Loaded service 'wms', enabled
2016-05-24 15:42:44,184 INFO [gwc.config] - Initializing GeoServer specific GWC configuration from gwc-gs.xml
2016-05-24 15:42:44,214 WARN [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
2016-05-24 15:42:44,237 ERROR [gwc.layer] - An error occurred trying to determine if the layer is geometryless
java.io.IOException
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:630)
	at org.geoserver.catalog.ResourcePool.getCacheableFeatureType(ResourcePool.java:897)
	at org.geoserver.catalog.ResourcePool.tryGetFeatureType(ResourcePool.java:884)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:878)
	at org.geoserver.catalog.ResourcePool.getFeatureType(ResourcePool.java:865)
	at org.geoserver.catalog.impl.FeatureTypeInfoImpl.getFeatureType(FeatureTypeInfoImpl.java:120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy11.getFeatureType(Unknown Source)
	at org.geoserver.gwc.layer.CatalogConfiguration.isLayerExposable(CatalogConfiguration.java:453)
	at org.geoserver.gwc.config.GWCInitializer.addLayersToNotCache(GWCInitializer.java:281)
	at org.geoserver.gwc.config.GWCInitializer.initialize(GWCInitializer.java:151)
	at org.geoserver.config.GeoServerLoader.loadInitializers(GeoServerLoader.java:150)
	at org.geoserver.config.GeoServerLoader.postProcessBeforeInitialization(GeoServerLoader.java:130)
	at org.geoserver.config.GeoServerLoaderProxy.postProcessBeforeInitialization(GeoServerLoaderProxy.java:59)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1105)
	at org.geoserver.platform.GeoServerExtensions.getBean(GeoServerExtensions.java:240)
	at org.geoserver.platform.GeoServerExtensions.extensions(GeoServerExtensions.java:141)
	at org.geoserver.ows.Dispatcher.initApplicationContext(Dispatcher.java:195)
	at org.springframework.context.support.ApplicationObjectSupport.setApplicationContext(ApplicationObjectSupport.java:73)
	at org.springframework.context.support.ApplicationContextAwareProcessor.invokeAwareInterfaces(ApplicationContextAwareProcessor.java:117)
	at org.springframework.context.support.ApplicationContextAwareProcessor.postProcessBeforeInitialization(ApplicationContextAwareProcessor.java:92)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:394)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1448)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:323)
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:107)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:630)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:148)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1035)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:939)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:294)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:225)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:607)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:925)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:472)
	at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:388)
	at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:293)
	at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:111)
	at org.geoserver.platform.GeoServerContextLoaderListener.contextInitialized(GeoServerContextLoaderListener.java:23)
	at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4811)
	at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5251)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:147)
	at org.apache.catalina.core.ContainerBase.addChildInternal(ContainerBase.java:725)
	at org.apache.catalina.core.ContainerBase.addChild(ContainerBase.java:701)
	at org.apache.catalina.core.StandardHost.addChild(StandardHost.java:717)
	at org.apache.catalina.startup.HostConfig.deployWAR(HostConfig.java:940)
	at org.apache.catalina.startup.HostConfig$DeployWar.run(HostConfig.java:1816)
	at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Unable to obtain connection: Cannot create PoolableConnectionFactory (FATAL: password authentication failed for user "postgres")
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1829)
	at org.geotools.jdbc.JDBCDataStore.createTypeNames(JDBCDataStore.java:949)
	at org.geotools.data.store.ContentDataStore.getTypeNames(ContentDataStore.java:308)
	at org.vfny.geoserver.util.DataStoreUtils.getDataAccess(DataStoreUtils.java:96)
	at org.geoserver.catalog.ResourcePool.getDataStore(ResourcePool.java:590)
	... 84 more
Caused by: org.apache.commons.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory (FATAL: password authentication failed for user "postgres")
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1549)
	at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:1388)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:48)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1814)
	... 88 more
Caused by: org.postgresql.util.PSQLException: FATAL: password authentication failed for user "postgres"
	at org.postgresql.core.v3.ConnectionFactoryImpl.doAuthentication(ConnectionFactoryImpl.java:420)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:195)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:127)
	at org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:29)
	at org.postgresql.jdbc3g.AbstractJdbc3gConnection.<init>(AbstractJdbc3gConnection.java:21)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.<init>(AbstractJdbc4Connection.java:41)
	at org.postgresql.jdbc4.Jdbc4Connection.<init>(Jdbc4Connection.java:24)
	at org.postgresql.Driver.makeConnection(Driver.java:414)
	at org.postgresql.Driver.connect(Driver.java:282)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:1556)
	at org.apache.commons.dbcp.BasicDataSource.createPoolableConnectionFactory(BasicDataSource.java:1545)
	... 92 more
2016-05-24 15:42:45,439 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:42:45,440 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:42:45,462 INFO [ows.OWSHandlerMapping] - Mapped URL path [/gwc/service/**] onto handler 'dispatcher'
2016-05-24 15:42:45,524 INFO [geowebcache.GeoWebCacheDispatcher] - Invoked setServletPrefix(gwc)
2016-05-24 15:42:45,545 INFO [georss.GeoRSSPoller] - Initializing GeoRSS poller in a background job...
2016-05-24 15:42:45,546 INFO [georss.GeoRSSPoller] - No enabled GeoRSS feeds found, poller will not run.
2016-05-24 15:42:45,723 INFO [rest.RESTDispatcher] - Created RESTDispatcher with 15 paths
2016-05-24 15:42:45,767 INFO [wms.WMSService] - Will NOT recombine tiles for non-tiling clients.
2016-05-24 15:42:45,767 INFO [wms.WMSService] - Will proxy requests to backend that are not getmap or getcapabilities.
2016-05-24 15:42:47,005 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml] onto handler 'dispatcher'
2016-05-24 15:42:47,006 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/*] onto handler 'dispatcher'
2016-05-24 15:42:47,006 INFO [ows.OWSHandlerMapping] - Mapped URL path [/kml/icon/**/*] onto handler 'kmlIconService'
2016-05-24 15:42:47,138 INFO [geoserver.global] - Falling back to embedded data directory: C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data
2016-05-24 15:42:47,249 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows/**] onto handler 'dispatcher'
2016-05-24 15:42:47,249 INFO [ows.OWSHandlerMapping] - Mapped URL path [/ows] onto handler 'dispatcher'
2016-05-24 15:42:47,261 INFO [org.geoserver] - GeoServer configuration lock is enabled
2016-05-24 15:42:47,533 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs] onto handler 'dispatcher'
2016-05-24 15:42:47,533 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wcs/**] onto handler 'dispatcher'
2016-05-24 15:42:49,315 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs/*] onto handler 'dispatcher'
2016-05-24 15:42:49,316 INFO [ows.OWSHandlerMapping] - Mapped URL path [/TestWfsPost] onto handler 'wfsTestServlet'
2016-05-24 15:42:49,316 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wfs] onto handler 'dispatcher'
2016-05-24 15:42:53,051 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms/*] onto handler 'dispatcher'
2016-05-24 15:42:53,052 INFO [ows.OWSHandlerMapping] - Mapped URL path [/wms] onto handler 'dispatcher'
2016-05-24 15:42:53,131 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate] onto handler 'dispatcher'
2016-05-24 15:42:53,131 INFO [ows.OWSHandlerMapping] - Mapped URL path [/animate/*] onto handler 'dispatcher'
2016-05-24 15:42:53,842 INFO [geoserver.security] - Start reloading user/groups for service named default
2016-05-24 15:42:53,861 INFO [geoserver.security] - Reloading user/groups successful for service named default
2016-05-24 15:42:54,060 INFO [geoserver.security] - AuthenticationCache Initialized with 1000 Max Entries, 300 seconds idle time, 600 seconds time to live and 3 concurrency level
2016-05-24 15:42:54,061 INFO [geoserver.security] - AuthenticationCache Eviction Task created to run every 600 seconds
2016-05-24 15:43:20,360 WARN [geoserver.security] - Strong cryptography is NOT available
Download and installation the of unlimted length policy files is recommended
2016-05-24 15:47:04,106 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "g01_buildingsgeom.geom_28992" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2270)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1998)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:570)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:406)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:286)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:395)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1262)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:534)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:431)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:367)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:660)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:120)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 15:47:13,477 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "g01_buildingsgeom.geom_28992" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2270)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1998)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:570)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:406)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:286)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:395)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1262)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:534)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:431)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:367)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:660)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:120)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 15:47:17,932 WARN [geotools.jdbc] - Failed to use ST_Estimated_Extent, falling back on envelope aggregation
org.postgresql.util.PSQLException: ERROR: stats for "g01_buildingsgeom.geom_28992" do not exist
  Where: SQL function "st_estimated_extent" statement 2
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2270)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1998)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:255)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:570)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:406)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeQuery(AbstractJdbc2Statement.java:286)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
	at org.geotools.data.postgis.PostGISDialect.getOptimizedBounds(PostGISDialect.java:395)
	at org.geotools.jdbc.JDBCDataStore.getBounds(JDBCDataStore.java:1262)
	at org.geotools.jdbc.JDBCFeatureSource.getBoundsInternal(JDBCFeatureSource.java:534)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:431)
	at org.geotools.data.store.ContentFeatureSource.getBounds(ContentFeatureSource.java:367)
	at org.vfny.geoserver.global.GeoServerFeatureSource.getBounds(GeoServerFeatureSource.java:660)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:561)
	at org.geoserver.catalog.CatalogBuilder.getNativeBounds(CatalogBuilder.java:543)
	at org.geoserver.web.data.resource.BasicResourceConfig$1.onSubmit(BasicResourceConfig.java:120)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 15:47:22,941 INFO [geoserver.gwc] - Saving GeoSeverTileLayer synthesis:g01_buildingsgeom
2016-05-24 15:47:23,028 WARN [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
2016-05-24 15:47:23,092 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:47:23,094 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:47:49,314 WARN [geoserver.catalog] - Error while getting feature type, flushing cache and retrying: {0}
2016-05-24 15:47:49,323 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:47:50,358 ERROR [geotools.jdbc] - There's code using JDBC based datastore and not disposing them. This may lead to temporary loss of database connections. Please make sure all data access code calls DataStore.dispose() before freeing all references to it
2016-05-24 15:49:06,168 ERROR [gwc.layer] - Error deleting tile layer 'geoweb:parcels'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer geoweb:parcels. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer geoweb:parcels. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer geoweb:parcels. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:06,230 ERROR [gwc.layer] - Error deleting tile layer 'geoweb:top10_3d'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer geoweb:top10_3d. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer geoweb:top10_3d. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer geoweb:top10_3d. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:06,433 ERROR [gwc.layer] - Error deleting tile layer 'nurc:Arc_Sample'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:Arc_Sample. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:99)
	at org.geoserver.catalog.impl.CoverageStoreInfoImpl.accept(CoverageStoreInfoImpl.java:53)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy14.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:Arc_Sample. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer nurc:Arc_Sample. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:06,495 ERROR [gwc.layer] - Error deleting tile layer 'nurc:Pk50095'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:Pk50095. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:99)
	at org.geoserver.catalog.impl.CoverageStoreInfoImpl.accept(CoverageStoreInfoImpl.java:53)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy14.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:Pk50095. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer nurc:Pk50095. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:06,558 ERROR [gwc.layer] - Error deleting tile layer 'nurc:mosaic'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:mosaic. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:99)
	at org.geoserver.catalog.impl.CoverageStoreInfoImpl.accept(CoverageStoreInfoImpl.java:53)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy14.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:mosaic. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer nurc:mosaic. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:06,620 ERROR [gwc.layer] - Error deleting tile layer 'nurc:Img_Sample'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:Img_Sample. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:99)
	at org.geoserver.catalog.impl.CoverageStoreInfoImpl.accept(CoverageStoreInfoImpl.java:53)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy14.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer nurc:Img_Sample. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer nurc:Img_Sample. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:06,714 INFO [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
2016-05-24 15:49:07,010 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,010 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,026 ERROR [gwc.layer] - Error deleting tile layer 'sf:archsites'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:archsites. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:archsites. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer sf:archsites. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,057 INFO [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
2016-05-24 15:49:07,057 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,057 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,073 ERROR [gwc.layer] - Error deleting tile layer 'sf:bugsites'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:bugsites. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:bugsites. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer sf:bugsites. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,104 INFO [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
2016-05-24 15:49:07,104 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,104 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,119 ERROR [gwc.layer] - Error deleting tile layer 'sf:restricted'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:restricted. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:restricted. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer sf:restricted. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,151 INFO [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
2016-05-24 15:49:07,151 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,151 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,166 ERROR [gwc.layer] - Error deleting tile layer 'sf:roads'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:roads. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:roads. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer sf:roads. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,197 INFO [gwc.layer] - Truncating TileLayer for layer group 'spearfish' due to a change in its layers or styles
2016-05-24 15:49:07,197 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,197 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\spearfish does not exist or is not writable
2016-05-24 15:49:07,213 ERROR [gwc.layer] - Error deleting tile layer 'sf:streams'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:streams. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:streams. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer sf:streams. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,322 ERROR [gwc.layer] - Error deleting tile layer 'spearfish'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer spearfish. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:934)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1278)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:704)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:442)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:222)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:137)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:99)
	at org.geoserver.catalog.impl.CoverageStoreInfoImpl.accept(CoverageStoreInfoImpl.java:53)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy14.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer spearfish. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer spearfish. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,369 ERROR [gwc.layer] - Error deleting tile layer 'sf:sfdem'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:sfdem. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:99)
	at org.geoserver.catalog.impl.CoverageStoreInfoImpl.accept(CoverageStoreInfoImpl.java:53)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy14.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer sf:sfdem. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer sf:sfdem. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,431 INFO [gwc.layer] - Truncating TileLayer for layer group 'tiger-ny' due to a change in its layers or styles
2016-05-24 15:49:07,447 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\tiger-ny does not exist or is not writable
2016-05-24 15:49:07,447 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\tiger-ny does not exist or is not writable
2016-05-24 15:49:07,494 ERROR [gwc.layer] - Error deleting tile layer 'tiger:giant_polygon'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:giant_polygon. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:giant_polygon. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer tiger:giant_polygon. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,525 INFO [gwc.layer] - Truncating TileLayer for layer group 'tiger-ny' due to a change in its layers or styles
2016-05-24 15:49:07,525 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\tiger-ny does not exist or is not writable
2016-05-24 15:49:07,525 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\tiger-ny does not exist or is not writable
2016-05-24 15:49:07,556 ERROR [gwc.layer] - Error deleting tile layer 'tiger:poi'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:poi. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:poi. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer tiger:poi. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,587 INFO [gwc.layer] - Truncating TileLayer for layer group 'tiger-ny' due to a change in its layers or styles
2016-05-24 15:49:07,587 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\tiger-ny does not exist or is not writable
2016-05-24 15:49:07,587 INFO [file.FileBlobStore] - C:\Users\Bart\AppData\Local\Temp\geowebcache\tiger-ny does not exist or is not writable
2016-05-24 15:49:07,603 ERROR [gwc.layer] - Error deleting tile layer 'tiger:poly_landmarks'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:poly_landmarks. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:poly_landmarks. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer tiger:poly_landmarks. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,650 ERROR [gwc.layer] - Error deleting tile layer 'tiger-ny'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger-ny. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:934)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1278)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:704)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:442)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:222)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:137)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger-ny. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer tiger-ny. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,697 ERROR [gwc.layer] - Error deleting tile layer 'tiger:tiger_roads'
java.lang.RuntimeException: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:tiger_roads. Check the logfiles, it may not have loaded properly.
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:578)
	at org.geoserver.gwc.layer.CatalogConfiguration.save(CatalogConfiguration.java:608)
	at org.geoserver.gwc.GWC.removeTileLayers(GWC.java:1906)
	at org.geoserver.gwc.layer.CatalogLayerEventListener.handleRemoveEvent(CatalogLayerEventListener.java:624)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1500)
	at org.geoserver.catalog.impl.CatalogImpl.fireRemoved(CatalogImpl.java:1488)
	at org.geoserver.catalog.impl.CatalogImpl.removed(CatalogImpl.java:1455)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:702)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1282)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:708)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:360)
	at org.geoserver.catalog.impl.LocalWorkspaceCatalog.remove(LocalWorkspaceCatalog.java:134)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:149)
	at org.geoserver.catalog.impl.LayerInfoImpl.accept(LayerInfoImpl.java:237)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy13.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visitStore(CascadeDeleteVisitor.java:82)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:95)
	at org.geoserver.catalog.impl.DataStoreInfoImpl.accept(DataStoreInfoImpl.java:42)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy8.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:49)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.geowebcache.storage.StorageException: Thread 48 Unknown layer tiger:tiger_roads. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:309)
	at org.geowebcache.storage.CompositeBlobStore.delete(CompositeBlobStore.java:125)
	at org.geoserver.gwc.ConfigurableBlobStore.delete(ConfigurableBlobStore.java:130)
	at org.geowebcache.storage.DefaultStorageBroker.delete(DefaultStorageBroker.java:53)
	at org.geoserver.gwc.GWC.layerRemoved(GWC.java:576)
	... 145 more
Caused by: org.geowebcache.GeoWebCacheException: Thread 48 Unknown layer tiger:tiger_roads. Check the logfiles, it may not have loaded properly.
	at org.geowebcache.layer.TileLayerDispatcher.getTileLayer(TileLayerDispatcher.java:105)
	at org.geowebcache.storage.CompositeBlobStore.forLayer(CompositeBlobStore.java:326)
	at org.geowebcache.storage.CompositeBlobStore.store(CompositeBlobStore.java:307)
	... 149 more
2016-05-24 15:49:07,759 ERROR [wicket.RequestCycle] - Error persisting WorkspaceInfoImpl[topp] to workspaces/default.xml
org.geoserver.catalog.CatalogException: Error persisting WorkspaceInfoImpl[topp] to workspaces/default.xml
	at org.geoserver.config.GeoServerPersister.persist(GeoServerPersister.java:745)
	at org.geoserver.config.GeoServerPersister.handleModifyEvent(GeoServerPersister.java:210)
	at org.geoserver.catalog.impl.CatalogImpl.event(CatalogImpl.java:1502)
	at org.geoserver.catalog.impl.CatalogImpl.fireModified(CatalogImpl.java:1474)
	at org.geoserver.catalog.impl.DefaultCatalogFacade.setDefaultWorkspace(DefaultCatalogFacade.java:756)
	at org.geoserver.catalog.impl.CatalogImpl.setDefaultWorkspace(CatalogImpl.java:1254)
	at org.geoserver.catalog.impl.CatalogImpl.remove(CatalogImpl.java:1130)
	at org.geoserver.security.SecureCatalogImpl.remove(SecureCatalogImpl.java:1290)
	at org.geoserver.catalog.impl.AbstractFilteredCatalog.remove(AbstractFilteredCatalog.java:716)
	at org.geoserver.catalog.impl.AbstractCatalogDecorator.remove(AbstractCatalogDecorator.java:544)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:72)
	at org.geoserver.catalog.impl.NamespaceInfoImpl.accept(NamespaceInfoImpl.java:69)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy5.accept(Unknown Source)
	at org.geoserver.catalog.CascadeDeleteVisitor.visit(CascadeDeleteVisitor.java:55)
	at org.geoserver.catalog.impl.WorkspaceInfoImpl.accept(WorkspaceInfoImpl.java:55)
	at sun.reflect.GeneratedMethodAccessor213.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.catalog.impl.ModificationProxy.invoke(ModificationProxy.java:146)
	at com.sun.proxy.$Proxy7.accept(Unknown Source)
	at org.geoserver.web.data.SelectionRemovalLink$1.onSubmit(SelectionRemovalLink.java:66)
	at org.geoserver.web.wicket.GeoServerDialog.submit(GeoServerDialog.java:173)
	at org.geoserver.web.wicket.GeoServerDialog$5.onSubmit(GeoServerDialog.java:188)
	at org.apache.wicket.ajax.markup.html.form.AjaxSubmitLink$1.onSubmit(AjaxSubmitLink.java:68)
	at org.apache.wicket.ajax.form.AjaxFormSubmitBehavior.onEvent(AjaxFormSubmitBehavior.java:143)
	at org.apache.wicket.ajax.AjaxEventBehavior.respond(AjaxEventBehavior.java:177)
	at org.apache.wicket.ajax.AbstractDefaultAjaxBehavior.onRequest(AbstractDefaultAjaxBehavior.java:300)
	at org.apache.wicket.request.target.component.listener.BehaviorRequestTarget.processEvents(BehaviorRequestTarget.java:119)
	at org.apache.wicket.request.AbstractRequestCycleProcessor.processEvents(AbstractRequestCycleProcessor.java:92)
	at org.apache.wicket.RequestCycle.processEventsAndRespond(RequestCycle.java:1250)
	at org.apache.wicket.RequestCycle.step(RequestCycle.java:1329)
	at org.apache.wicket.RequestCycle.steps(RequestCycle.java:1436)
	at org.apache.wicket.RequestCycle.request(RequestCycle.java:545)
	at org.apache.wicket.protocol.http.WicketFilter.doGet(WicketFilter.java:484)
	at org.apache.wicket.protocol.http.WicketServlet.doPost(WicketServlet.java:160)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:159)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:789)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:648)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:182)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerUserNamePasswordAuthenticationFilter.doFilter(GeoServerUserNamePasswordAuthenticationFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter.doFilter(RememberMeAuthenticationFilter.java:146)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.io.IOException: Failed to move C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\workspaces\default.xml.246b26d1-86ef-471a-accb-1fe359f6842b.tmp to C:\Users\Bart\Dropbox\Synthesis Project\16. Geoweb\dashboard\dashboard_in_sight\geoweb16\apache-tomcat-8.0.33\webapps\geoserver\data\workspaces\default.xml
	at org.geoserver.platform.resource.Files.move(Files.java:427)
	at org.geoserver.platform.resource.FileSystemResourceStore$FileSystemResource$2.close(FileSystemResourceStore.java:237)
	at org.geoserver.data.util.IOUtils.xStreamPersist(IOUtils.java:448)
	at org.geoserver.config.GeoServerPersister.persist(GeoServerPersister.java:738)
	... 135 more
2016-05-24 15:49:22,985 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 15:49:23,690 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {synthesisuri}g01_buildingsgeom
    maxFeatures = 50
    outputFormat = GML2
    resultType = results
2016-05-24 15:49:32,044 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:32,577 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.367569166420183 : 4.379883435484935, 51.988381411700445 : 52.009054884766364]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = false
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = application/openlayers
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {BBOX=4.367569166420183,51.988381411700445,4.379883435484935,52.009054884766364, VERSION=1.1.0, FORMAT=application/openlayers, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, WIDTH=457, SRS=EPSG:4326}
	RequestCharset = UTF-8
	Version = 1.1.0
2016-05-24 15:49:33,247 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:34,710 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.363911151885986 : 4.383523464202881, 51.98224067687988 : 52.01519966125488]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.363911151885986,51.98224067687988,4.383523464202881,52.01519966125488, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:35,519 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:35,686 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.36382532119751 : 4.383437633514404, 51.98185443878174 : 52.01481342315674]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.36382532119751,51.98185443878174,4.383437633514404,52.01481342315674, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:36,605 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:36,737 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.373631477355957 : 4.377965927124023, 51.99329137802125 : 51.997625827789314]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.373631477355957,51.99329137802125,4.377965927124023,51.997625827789314, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:37,598 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:38,207 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:38,579 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.369715452194214 : 4.379521608352661, 51.988699436187744 : 52.005178928375244]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.369715452194214,51.988699436187744,4.379521608352661,52.005178928375244, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:38,633 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:38,699 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.375101327896118 : 4.376184940338135, 51.995099186897285 : 51.9961827993393]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.375101327896118,51.995099186897285,4.376184940338135,51.9961827993393, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:38,785 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.372649788856506 : 4.37755286693573, 51.99212193489075 : 52.0003616809845]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.372649788856506,51.99212193489075,4.37755286693573,52.0003616809845, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:39,264 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:39,309 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.373921155929565 : 4.375004768371582, 51.997609734535224 : 51.99869334697724]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.373921155929565,51.997609734535224,4.375004768371582,51.99869334697724, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:40,390 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:40,439 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.373792409896851 : 4.374876022338867, 51.99750244617463 : 51.998586058616645]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.373792409896851,51.99750244617463,4.374876022338867,51.998586058616645, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:42,109 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:42,196 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.3757665157318115 : 4.376850128173828, 51.998124718666084 : 51.9992083311081]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.3757665157318115,51.998124718666084,4.376850128173828,51.9992083311081, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:42,686 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:42,755 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.375519752502441 : 4.376603364944458, 51.998875737190254 : 51.99995934963227]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.375519752502441,51.998875737190254,4.376603364944458,51.99995934963227, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:43,405 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:43,878 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:43,887 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.375026226043701 : 4.376109838485718, 51.99821054935456 : 51.99929416179658]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.375026226043701,51.99821054935456,4.376109838485718,51.99929416179658, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:43,917 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.373663663864136 : 4.374747276306152, 51.99748098850251 : 51.998564600944526]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.373663663864136,51.99748098850251,4.374747276306152,51.998564600944526, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:44,330 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:44,573 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.367988109588623 : 4.387600421905518, 51.9743013381958 : 52.0072603225708]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.367988109588623,51.9743013381958,4.387600421905518,52.0072603225708, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:45,330 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:45,515 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.368857145309448 : 4.3786633014678955, 51.98781967163086 : 52.00429916381836]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.368857145309448,51.98781967163086,4.3786633014678955,52.00429916381836, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:45,608 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:45,959 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.369216561317444 : 4.3741196393966675, 51.99457883834839 : 52.00281858444214]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.369216561317444,51.99457883834839,4.3741196393966675,52.00281858444214, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 15:49:46,006 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:46,094 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.369103908538819 : 4.370187520980836, 52.000871300697334 : 52.00195491313935]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.369103908538819,52.000871300697334,4.370187520980836,52.00195491313935, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:46,744 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:46,886 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.369103908538819 : 4.370187520980836, 52.000871300697334 : 52.00195491313935]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.369103908538819,52.000871300697334,4.370187520980836,52.00195491313935, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:47,362 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:47,587 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.369103908538819 : 4.370187520980836, 52.000871300697334 : 52.00195491313935]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.369103908538819,52.000871300697334,4.370187520980836,52.00195491313935, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:48,172 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:48,307 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.369812011718751 : 4.3708956241607675, 51.99747025966645 : 51.99855387210847]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.369812011718751,51.99747025966645,4.3708956241607675,51.99855387210847, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:49,615 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:50,292 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.369361400604249 : 4.3704450130462655, 51.998811364173896 : 51.99989497661591]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.369361400604249,51.998811364173896,4.3704450130462655,51.99989497661591, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:50,561 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:50,984 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.369511604309083 : 4.3705952167510995, 51.99815690517426 : 51.99924051761628]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.369511604309083,51.99815690517426,4.3705952167510995,51.99924051761628, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:53,241 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:53,594 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.370788335800172 : 4.371871948242188, 51.99847877025605 : 51.999562382698066]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.370788335800172,51.99847877025605,4.371871948242188,51.999562382698066, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:54,759 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:55,115 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.371399879455567 : 4.372483491897584, 51.999326348304756 : 52.00040996074677]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.371399879455567,51.999326348304756,4.372483491897584,52.00040996074677, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:56,024 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:56,310 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.371174573898316 : 4.372258186340333, 52.00049579143525 : 52.001579403877265]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.371174573898316,52.00049579143525,4.372258186340333,52.001579403877265, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:57,674 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:57,770 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.372880458831788 : 4.373964071273805, 52.00152575969697 : 52.002609372138984]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.372880458831788,52.00152575969697,4.373964071273805,52.002609372138984, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:49:58,590 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 15:49:58,804 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.373127222061158 : 4.374210834503175, 52.00094640254975 : 52.00203001499177]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.373127222061158,52.00094640254975,4.374210834503175,52.00203001499177, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 15:50:14,463 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 15:50:14,607 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 15:52:11,646 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 15:52:11,648 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 15:52:16,473 ERROR [geoserver.ows] - 
org.geoserver.platform.ServiceException: No service: ( ows )
	at org.geoserver.ows.Dispatcher.service(Dispatcher.java:573)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:252)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:01:14,674 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:01:14,676 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:02:01,655 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:02:01,656 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:07:11,100 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:07:11,105 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {synthesisuri}g01_buildingsgeom
    maxFeatures = 50
    outputFormat = GML2
    resultType = results
2016-05-24 16:08:21,374 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:08:21,376 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:08:56,528 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:08:56,530 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:11:45,913 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [MarkupContainer [Component id = parametersPanel]]
2016-05-24 16:11:46,021 WARN [wicket.Localizer] - Tried to retrieve a localized string for a component that has not yet been added to the page. This can sometimes lead to an invalid or no localized resource returned. Make sure you are not calling Component#getString() inside your Component's constructor. Offending component: [MarkupContainer [Component id = parametersPanel]]
2016-05-24 16:15:53,255 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:15:53,259 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {synthesisuri}g01_buildingsgeom
    maxFeatures = 50
    outputFormat = GML2
    resultType = results
2016-05-24 16:17:13,245 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:17:13,247 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:17:17,890 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:17:17,891 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Requested property: fid is not available for synthesis:g01_buildingsgeom.  The possible propertyName values are: [buildingid, geom_28992]
	at org.geoserver.wfs.GetFeature.run(GetFeature.java:452)
	at org.geoserver.wfs.DefaultWebFeatureService.getFeature(DefaultWebFeatureService.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:319)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:183)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)
	at org.geoserver.ows.util.RequestObjectLogger.invoke(RequestObjectLogger.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:202)
	at com.sun.proxy.$Proxy59.getFeature(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.geoserver.ows.Dispatcher.execute(Dispatcher.java:845)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:275)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:20:58,928 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:20:58,929 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Feature type :synthesis%3Ag01_buildingsgeom unknown
	at org.geoserver.wfs.kvp.GetFeatureKvpRequestReader.checkTypeName(GetFeatureKvpRequestReader.java:390)
	at org.geoserver.wfs.kvp.GetFeatureKvpRequestReader.read(GetFeatureKvpRequestReader.java:147)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1493)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:681)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:44:37,052 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:44:37,053 ERROR [geoserver.ows] - 
org.geoserver.wfs.WFSException: Feature type :synthesis%3Ag01_buildingsgeom unknown
	at org.geoserver.wfs.kvp.GetFeatureKvpRequestReader.checkTypeName(GetFeatureKvpRequestReader.java:390)
	at org.geoserver.wfs.kvp.GetFeatureKvpRequestReader.read(GetFeatureKvpRequestReader.java:147)
	at org.geoserver.ows.Dispatcher.parseRequestKVP(Dispatcher.java:1493)
	at org.geoserver.ows.Dispatcher.dispatch(Dispatcher.java:681)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:265)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2016-05-24 16:58:19,018 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 16:58:19,022 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        typeName[0] = {synthesisuri}g01_buildingsgeom
    maxFeatures = 50
    outputFormat = GML2
    resultType = results
2016-05-24 16:59:57,830 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 16:59:57,877 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.367569166420183 : 4.379883435484935, 51.988381411700445 : 52.009054884766364]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = false
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = application/openlayers
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {BBOX=4.367569166420183,51.988381411700445,4.379883435484935,52.009054884766364, VERSION=1.1.0, FORMAT=application/openlayers, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, WIDTH=457, SRS=EPSG:4326}
	RequestCharset = UTF-8
	Version = 1.1.0
2016-05-24 16:59:58,113 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 16:59:58,351 INFO [geoserver.wms] - 
Request: getMap
	Filters = null
	Crs = GEOGCS["WGS 84", 
  DATUM["World Geodetic System 1984", 
    SPHEROID["WGS 84", 6378137.0, 298.257223563, AUTHORITY["EPSG","7030"]], 
    AUTHORITY["EPSG","6326"]], 
  PRIMEM["Greenwich", 0.0, AUTHORITY["EPSG","8901"]], 
  UNIT["degree", 0.017453292519943295], 
  AXIS["Geodetic longitude", EAST], 
  AXIS["Geodetic latitude", NORTH], 
  AUTHORITY["EPSG","4326"]]
	Bbox = SRSEnvelope[4.363911151885986 : 4.383523464202881, 51.98224067687988 : 52.01519966125488]
	Env = {}
	Angle = 0.0
	CQLFilter = null
	Elevation = []
	FeatureId = null
	StartIndex = null
	ViewParams = null
	FeatureVersion = null
	Tiled = false
	Palette = null
	SRS = EPSG:4326
	Styles = [StyleImpl[ name=polygon]]
	MaxFeatures = null
	Layers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	RemoteOwsType = null
	RemoteOwsURL = null
	FormatOptions = {}
	BgColor = java.awt.Color[r=255,g=255,b=255]
	StyleFormat = sld
	ValidateSchema = false
	Interpolations = []
	TilesOrigin = null
	Transparent = true
	SldBody = null
	Sld = null
	StyleUrl = null
	StyleVersion = null
	ScaleMethod = null
	Exceptions = SE_XML
	StyleBody = null
	SldVersion = null
	Height = 768
	Width = 457
	Filter = null
	Time = []
	Format = image/png
	Buffer = 0
	Get = true
	Request = GetMap
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {TRANSPARENT=true, BBOX=4.363911151885986,51.98224067687988,4.383523464202881,52.01519966125488, VERSION=1.1.1, FORMAT=image/png, SERVICE=WMS, HEIGHT=768, REQUEST=GetMap, LAYERS=synthesis:g01_buildingsgeom, STYLES=, SRS=EPSG:4326, WIDTH=457}
	RequestCharset = UTF-8
	Version = 1.1.1
2016-05-24 16:59:59,711 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 16:59:59,779 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.367752075195313 : 4.37208652496338, 51.99934244155884 : 52.003676891326904]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.367752075195313,51.99934244155884,4.37208652496338,52.003676891326904, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 17:00:00,584 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 17:00:00,804 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.367065429687501 : 4.371399879455567, 51.999385356903076 : 52.00371980667114]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.367065429687501,51.999385356903076,4.371399879455567,52.00371980667114, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 17:00:10,837 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 17:00:10,928 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.367666244506837 : 4.372000694274903, 51.99925661087036 : 52.00359106063843]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.367666244506837,51.99925661087036,4.372000694274903,52.00359106063843, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 17:00:11,957 INFO [geoserver.wms] - 
Request: getServiceInfo
2016-05-24 17:00:11,996 INFO [geoserver.wms] - 
Request: getFeatureInfo
	QueryLayers = [org.geoserver.wms.MapLayerInfo@fb0e6d43]
	FeatureCount = 50
	GetMapRequest = 
GetMap Request
 version: 1.1.1
 output format: image/png
 width height: 101,101
 bbox: SRSEnvelope[4.367666244506837 : 4.372000694274903, 51.99925661087036 : 52.00359106063843]
 layers: synthesis:g01_buildingsgeom
 styles: polygon
	InfoFormat = text/html
	Exceptions = application/vnd.ogc.se_xml
	YPixel = 50
	XPixel = 50
	PropertyNames = null
	Get = false
	Request = GetFeatureInfo
	BaseUrl = http://localhost:8080/geoserver/
	RawKvp = {INFO_FORMAT=text/html, BBOX=4.367666244506837,51.99925661087036,4.372000694274903,52.00359106063843, QUERY_LAYERS=synthesis:g01_buildingsgeom, SERVICE=WMS, HEIGHT=101, REQUEST=GetFeatureInfo, STYLES=, WIDTH=101, TRANSPARENT=true, FEATURE_COUNT=50, VERSION=1.1.1, FORMAT=image/png, LAYERS=synthesis:g01_buildingsgeom, Y=50, X=50, SRS=EPSG:4326}
	RequestCharset = null
	Version = 1.1.1
2016-05-24 17:03:01,693 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:03:03,108 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeomquery[0]:
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:03:03,136 INFO [wfs.json] - about to encode JSON
2016-05-24 17:05:12,658 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:05:12,671 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeomquery[0]:
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:05:12,673 INFO [wfs.json] - about to encode JSON
2016-05-24 17:16:35,257 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:16:35,381 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeomquery[0]:
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:16:35,383 INFO [wfs.json] - about to encode JSON
2016-05-24 17:25:02,234 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:25:02,238 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:25:02,240 INFO [wfs.json] - about to encode JSON
2016-05-24 17:25:44,277 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:25:44,279 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:25:44,281 INFO [wfs.json] - about to encode JSON
2016-05-24 17:31:19,292 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:31:19,295 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:31:19,297 INFO [wfs.json] - about to encode JSON
2016-05-24 17:31:19,299 ERROR [geoserver.ows] - 
java.lang.RuntimeException: Unable to obtain connection: The connection attempt failed.
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1829)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:1770)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:1800)
	at org.geotools.jdbc.JDBCFeatureSource.getCountInternal(JDBCFeatureSource.java:461)
	at org.geotools.data.store.ContentFeatureSource.getCount(ContentFeatureSource.java:485)
	at org.geotools.data.store.ContentFeatureCollection.size(ContentFeatureCollection.java:236)
	at org.geotools.data.crs.ReprojectFeatureResults.size(ReprojectFeatureResults.java:124)
	at org.geoserver.wfs.CountExecutor.getCount(CountExecutor.java:45)
	at org.geoserver.wfs.GetFeature$1.loadObject(GetFeature.java:636)
	at $java.math.BigInteger$$EnhancerByCGLIB$$62d60ead.CGLIB$LOAD_PRIVATE_0(<generated>)
	at $java.math.BigInteger$$EnhancerByCGLIB$$62d60ead.longValue(<generated>)
	at org.geoserver.wfs.json.GeoJSONGetFeatureResponse.write(GeoJSONGetFeatureResponse.java:116)
	at org.geoserver.wfs.WFSGetFeatureOutputFormat.write(WFSGetFeatureOutputFormat.java:196)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:996)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:279)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:249)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:127)
	at org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:29)
	at org.postgresql.jdbc3g.AbstractJdbc3gConnection.<init>(AbstractJdbc3gConnection.java:21)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.<init>(AbstractJdbc4Connection.java:41)
	at org.postgresql.jdbc4.Jdbc4Connection.<init>(Jdbc4Connection.java:24)
	at org.postgresql.Driver.makeConnection(Driver.java:414)
	at org.postgresql.Driver.connect(Driver.java:282)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:48)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1814)
	... 103 more
Caused by: java.net.UnknownHostException: wifitracking.bk.tudelft.nl
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.postgresql.core.PGStream.<init>(PGStream.java:61)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:121)
	... 118 more
2016-05-24 17:31:27,635 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:31:27,637 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:31:27,639 INFO [wfs.json] - about to encode JSON
2016-05-24 17:31:27,642 ERROR [geoserver.ows] - 
java.lang.RuntimeException: Unable to obtain connection: The connection attempt failed.
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1829)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:1770)
	at org.geotools.jdbc.JDBCDataStore.getConnection(JDBCDataStore.java:1800)
	at org.geotools.jdbc.JDBCFeatureSource.getCountInternal(JDBCFeatureSource.java:461)
	at org.geotools.data.store.ContentFeatureSource.getCount(ContentFeatureSource.java:485)
	at org.geotools.data.store.ContentFeatureCollection.size(ContentFeatureCollection.java:236)
	at org.geotools.data.crs.ReprojectFeatureResults.size(ReprojectFeatureResults.java:124)
	at org.geoserver.wfs.CountExecutor.getCount(CountExecutor.java:45)
	at org.geoserver.wfs.GetFeature$1.loadObject(GetFeature.java:636)
	at $java.math.BigInteger$$EnhancerByCGLIB$$62d60ead.CGLIB$LOAD_PRIVATE_0(<generated>)
	at $java.math.BigInteger$$EnhancerByCGLIB$$62d60ead.longValue(<generated>)
	at org.geoserver.wfs.json.GeoJSONGetFeatureResponse.write(GeoJSONGetFeatureResponse.java:116)
	at org.geoserver.wfs.WFSGetFeatureOutputFormat.write(WFSGetFeatureOutputFormat.java:196)
	at org.geoserver.ows.Dispatcher.response(Dispatcher.java:996)
	at org.geoserver.ows.Dispatcher.handleRequestInternal(Dispatcher.java:279)
	at org.springframework.web.servlet.mvc.AbstractController.handleRequest(AbstractController.java:153)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:923)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:852)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:882)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:778)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.ThreadLocalsCleanupFilter.doFilter(ThreadLocalsCleanupFilter.java:28)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:75)
	at org.geoserver.wms.animate.AnimatorFilter.doFilter(AnimatorFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter$Chain.doFilter(SpringDelegatingFilter.java:71)
	at org.geoserver.filters.SpringDelegatingFilter.doFilter(SpringDelegatingFilter.java:46)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.platform.AdvancedDispatchFilter.doFilter(AdvancedDispatchFilter.java:50)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:311)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:83)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:113)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerAnonymousAuthenticationFilter.doFilter(GeoServerAnonymousAuthenticationFilter.java:54)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilter(BasicAuthenticationFilter.java:150)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.geoserver.security.filter.GeoServerBasicAuthenticationFilter.doFilter(GeoServerBasicAuthenticationFilter.java:83)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:69)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)
	at org.geoserver.security.filter.GeoServerSecurityContextPersistenceFilter$1.doFilter(GeoServerSecurityContextPersistenceFilter.java:53)
	at org.geoserver.security.filter.GeoServerCompositeFilter$NestedFilterChain.doFilter(GeoServerCompositeFilter.java:73)
	at org.geoserver.security.filter.GeoServerCompositeFilter.doFilter(GeoServerCompositeFilter.java:92)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:323)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:173)
	at org.geoserver.security.GeoServerSecurityFilterChainProxy.doFilter(GeoServerSecurityFilterChainProxy.java:135)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:259)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.LoggingFilter.doFilter(LoggingFilter.java:87)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.GZIPFilter.doFilter(GZIPFilter.java:42)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.SessionDebugFilter.doFilter(SessionDebugFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.geoserver.filters.FlushSafeFilter.doFilter(FlushSafeFilter.java:44)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:616)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522)
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095)
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.postgresql.util.PSQLException: The connection attempt failed.
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:249)
	at org.postgresql.core.ConnectionFactory.openConnection(ConnectionFactory.java:66)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.<init>(AbstractJdbc2Connection.java:127)
	at org.postgresql.jdbc3.AbstractJdbc3Connection.<init>(AbstractJdbc3Connection.java:29)
	at org.postgresql.jdbc3g.AbstractJdbc3gConnection.<init>(AbstractJdbc3gConnection.java:21)
	at org.postgresql.jdbc4.AbstractJdbc4Connection.<init>(AbstractJdbc4Connection.java:41)
	at org.postgresql.jdbc4.Jdbc4Connection.<init>(Jdbc4Connection.java:24)
	at org.postgresql.Driver.makeConnection(Driver.java:414)
	at org.postgresql.Driver.connect(Driver.java:282)
	at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:38)
	at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:582)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1148)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.geotools.data.jdbc.datasource.AbstractManageableDataSource.getConnection(AbstractManageableDataSource.java:48)
	at org.geotools.jdbc.JDBCDataStore.createConnection(JDBCDataStore.java:1814)
	... 103 more
Caused by: java.net.UnknownHostException: wifitracking.bk.tudelft.nl
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at org.postgresql.core.PGStream.<init>(PGStream.java:61)
	at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl(ConnectionFactoryImpl.java:121)
	... 118 more
2016-05-24 17:31:53,989 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:31:53,992 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:31:53,994 INFO [wfs.json] - about to encode JSON
2016-05-24 17:32:48,883 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:32:48,888 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:32:48,892 INFO [wfs.json] - about to encode JSON
2016-05-24 17:33:17,882 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:33:17,885 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:33:17,887 INFO [wfs.json] - about to encode JSON
2016-05-24 17:34:37,976 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:34:37,979 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:34:37,982 INFO [wfs.json] - about to encode JSON
2016-05-24 17:41:00,685 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:41:00,688 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:41:00,691 INFO [wfs.json] - about to encode JSON
2016-05-24 17:41:33,270 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:41:33,273 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:41:33,275 INFO [wfs.json] - about to encode JSON
2016-05-24 17:41:55,597 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:41:55,600 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:41:55,602 INFO [wfs.json] - about to encode JSON
2016-05-24 17:43:35,255 INFO [geoserver.wfs] - 
Request: getServiceInfo
2016-05-24 17:43:35,258 INFO [geoserver.wfs] - 
Request: getFeature
    service = WFS
    version = 1.0.0
    baseUrl = http://localhost:8080/geoserver/
    query[0]:
        propertyName[0] = geom_28992propertyName[0] = buildingid
        srsName = EPSG:4326
        typeName[0] = {synthesisuri}g01_buildingsgeom
    outputFormat = application/json
    resultType = results
2016-05-24 17:43:35,262 INFO [wfs.json] - about to encode JSON
